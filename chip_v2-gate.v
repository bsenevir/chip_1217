
// Generated by Cadence Encounter(R) RTL Compiler RC14.23 - v14.20-s027_1

// Verification Directory fv/chip_v2 

module analogPxArray(clk_px, stop_osc);
  input [4:0] stop_osc;
  output [18:0] clk_px;
  wire [4:0] stop_osc;
  wire [18:0] clk_px;
endmodule

module increment_unsigned_53_54_442(A, CI, Z);
  input [31:0] A;
  input CI;
  output [31:0] Z;
  wire [31:0] A;
  wire CI;
  wire [31:0] Z;
  wire n_2, n_4, n_7, n_8, n_9, n_11, n_12, n_13;
  wire n_15, n_16, n_17, n_19, n_20, n_21, n_23, n_24;
  wire n_25, n_27, n_28, n_29, n_31, n_32, n_33, n_35;
  wire n_36, n_37, n_39, n_40, n_41, n_43, n_44, n_45;
  wire n_47, n_48, n_49, n_51, n_52, n_53, n_55, n_56;
  wire n_57, n_59, n_60, n_61, n_63, n_64, n_65, n_67;
  wire n_68, n_69, n_71, n_72, n_73, n_75, n_76, n_77;
  wire n_79, n_80, n_81, n_83, n_84, n_85, n_87, n_88;
  wire n_89, n_91, n_92, n_93, n_95, n_96, n_97, n_99;
  wire n_100, n_101, n_103, n_104, n_105, n_107, n_108, n_109;
  wire n_111, n_112, n_113, n_115, n_116, n_117, n_119;
  OAI21X1 g401(.A (A[31]), .B (n_117), .C (n_119), .Y (Z[31]));
  NAND2X1 g402(.A (A[31]), .B (n_117), .Y (n_119));
  OAI21X1 g403(.A (A[30]), .B (n_113), .C (n_116), .Y (Z[30]));
  NAND2X1 g404(.A (A[30]), .B (n_115), .Y (n_117));
  NAND2X1 g405(.A (A[30]), .B (n_113), .Y (n_116));
  INVX2 g406(.A (n_113), .Y (n_115));
  OAI21X1 g407(.A (A[29]), .B (n_109), .C (n_112), .Y (Z[29]));
  NAND2X1 g408(.A (A[29]), .B (n_111), .Y (n_113));
  NAND2X1 g409(.A (A[29]), .B (n_109), .Y (n_112));
  INVX2 g410(.A (n_109), .Y (n_111));
  OAI21X1 g411(.A (A[28]), .B (n_105), .C (n_108), .Y (Z[28]));
  NAND2X1 g412(.A (A[28]), .B (n_107), .Y (n_109));
  NAND2X1 g413(.A (A[28]), .B (n_105), .Y (n_108));
  INVX2 g414(.A (n_105), .Y (n_107));
  OAI21X1 g415(.A (A[27]), .B (n_101), .C (n_104), .Y (Z[27]));
  NAND2X1 g416(.A (A[27]), .B (n_103), .Y (n_105));
  NAND2X1 g417(.A (A[27]), .B (n_101), .Y (n_104));
  INVX2 g418(.A (n_101), .Y (n_103));
  OAI21X1 g419(.A (A[26]), .B (n_97), .C (n_100), .Y (Z[26]));
  NAND2X1 g420(.A (A[26]), .B (n_99), .Y (n_101));
  NAND2X1 g421(.A (A[26]), .B (n_97), .Y (n_100));
  INVX2 g422(.A (n_97), .Y (n_99));
  OAI21X1 g423(.A (A[25]), .B (n_93), .C (n_96), .Y (Z[25]));
  NAND2X1 g424(.A (A[25]), .B (n_95), .Y (n_97));
  NAND2X1 g425(.A (A[25]), .B (n_93), .Y (n_96));
  INVX2 g426(.A (n_93), .Y (n_95));
  OAI21X1 g427(.A (A[24]), .B (n_89), .C (n_92), .Y (Z[24]));
  NAND2X1 g428(.A (A[24]), .B (n_91), .Y (n_93));
  NAND2X1 g429(.A (A[24]), .B (n_89), .Y (n_92));
  INVX2 g430(.A (n_89), .Y (n_91));
  OAI21X1 g431(.A (A[23]), .B (n_85), .C (n_88), .Y (Z[23]));
  NAND2X1 g432(.A (A[23]), .B (n_87), .Y (n_89));
  NAND2X1 g433(.A (A[23]), .B (n_85), .Y (n_88));
  INVX2 g434(.A (n_85), .Y (n_87));
  OAI21X1 g435(.A (A[22]), .B (n_81), .C (n_84), .Y (Z[22]));
  NAND2X1 g436(.A (A[22]), .B (n_83), .Y (n_85));
  NAND2X1 g437(.A (A[22]), .B (n_81), .Y (n_84));
  INVX2 g438(.A (n_81), .Y (n_83));
  OAI21X1 g439(.A (A[21]), .B (n_77), .C (n_80), .Y (Z[21]));
  NAND2X1 g440(.A (A[21]), .B (n_79), .Y (n_81));
  NAND2X1 g441(.A (A[21]), .B (n_77), .Y (n_80));
  INVX2 g442(.A (n_77), .Y (n_79));
  OAI21X1 g443(.A (A[20]), .B (n_73), .C (n_76), .Y (Z[20]));
  NAND2X1 g444(.A (A[20]), .B (n_75), .Y (n_77));
  NAND2X1 g445(.A (A[20]), .B (n_73), .Y (n_76));
  INVX2 g446(.A (n_73), .Y (n_75));
  OAI21X1 g447(.A (A[19]), .B (n_69), .C (n_72), .Y (Z[19]));
  NAND2X1 g448(.A (A[19]), .B (n_71), .Y (n_73));
  NAND2X1 g449(.A (A[19]), .B (n_69), .Y (n_72));
  INVX2 g450(.A (n_69), .Y (n_71));
  OAI21X1 g451(.A (A[18]), .B (n_65), .C (n_68), .Y (Z[18]));
  NAND2X1 g452(.A (A[18]), .B (n_67), .Y (n_69));
  NAND2X1 g453(.A (A[18]), .B (n_65), .Y (n_68));
  INVX2 g454(.A (n_65), .Y (n_67));
  OAI21X1 g455(.A (A[17]), .B (n_61), .C (n_64), .Y (Z[17]));
  NAND2X1 g456(.A (A[17]), .B (n_63), .Y (n_65));
  NAND2X1 g457(.A (A[17]), .B (n_61), .Y (n_64));
  INVX2 g458(.A (n_61), .Y (n_63));
  OAI21X1 g459(.A (A[16]), .B (n_57), .C (n_60), .Y (Z[16]));
  NAND2X1 g460(.A (A[16]), .B (n_59), .Y (n_61));
  NAND2X1 g461(.A (A[16]), .B (n_57), .Y (n_60));
  INVX2 g462(.A (n_57), .Y (n_59));
  OAI21X1 g463(.A (A[15]), .B (n_53), .C (n_56), .Y (Z[15]));
  NAND2X1 g464(.A (A[15]), .B (n_55), .Y (n_57));
  NAND2X1 g465(.A (A[15]), .B (n_53), .Y (n_56));
  INVX2 g466(.A (n_53), .Y (n_55));
  OAI21X1 g467(.A (A[14]), .B (n_49), .C (n_52), .Y (Z[14]));
  NAND2X1 g468(.A (A[14]), .B (n_51), .Y (n_53));
  NAND2X1 g469(.A (A[14]), .B (n_49), .Y (n_52));
  INVX2 g470(.A (n_49), .Y (n_51));
  OAI21X1 g471(.A (A[13]), .B (n_45), .C (n_48), .Y (Z[13]));
  NAND2X1 g472(.A (A[13]), .B (n_47), .Y (n_49));
  NAND2X1 g473(.A (A[13]), .B (n_45), .Y (n_48));
  INVX2 g474(.A (n_45), .Y (n_47));
  OAI21X1 g475(.A (A[12]), .B (n_41), .C (n_44), .Y (Z[12]));
  NAND2X1 g476(.A (A[12]), .B (n_43), .Y (n_45));
  NAND2X1 g477(.A (A[12]), .B (n_41), .Y (n_44));
  INVX2 g478(.A (n_41), .Y (n_43));
  OAI21X1 g479(.A (A[11]), .B (n_37), .C (n_40), .Y (Z[11]));
  NAND2X1 g480(.A (A[11]), .B (n_39), .Y (n_41));
  NAND2X1 g481(.A (A[11]), .B (n_37), .Y (n_40));
  INVX2 g482(.A (n_37), .Y (n_39));
  OAI21X1 g483(.A (A[10]), .B (n_33), .C (n_36), .Y (Z[10]));
  NAND2X1 g484(.A (A[10]), .B (n_35), .Y (n_37));
  NAND2X1 g485(.A (A[10]), .B (n_33), .Y (n_36));
  INVX2 g486(.A (n_33), .Y (n_35));
  OAI21X1 g487(.A (A[9]), .B (n_29), .C (n_32), .Y (Z[9]));
  NAND2X1 g488(.A (A[9]), .B (n_31), .Y (n_33));
  NAND2X1 g489(.A (A[9]), .B (n_29), .Y (n_32));
  INVX2 g490(.A (n_29), .Y (n_31));
  OAI21X1 g491(.A (A[8]), .B (n_25), .C (n_28), .Y (Z[8]));
  NAND2X1 g492(.A (A[8]), .B (n_27), .Y (n_29));
  NAND2X1 g493(.A (A[8]), .B (n_25), .Y (n_28));
  INVX2 g494(.A (n_25), .Y (n_27));
  OAI21X1 g495(.A (A[7]), .B (n_21), .C (n_24), .Y (Z[7]));
  NAND2X1 g496(.A (A[7]), .B (n_23), .Y (n_25));
  NAND2X1 g497(.A (A[7]), .B (n_21), .Y (n_24));
  INVX2 g498(.A (n_21), .Y (n_23));
  OAI21X1 g499(.A (A[6]), .B (n_17), .C (n_20), .Y (Z[6]));
  NAND2X1 g500(.A (A[6]), .B (n_19), .Y (n_21));
  NAND2X1 g501(.A (A[6]), .B (n_17), .Y (n_20));
  INVX2 g502(.A (n_17), .Y (n_19));
  OAI21X1 g503(.A (A[5]), .B (n_13), .C (n_16), .Y (Z[5]));
  NAND2X1 g504(.A (A[5]), .B (n_15), .Y (n_17));
  NAND2X1 g505(.A (A[5]), .B (n_13), .Y (n_16));
  INVX2 g506(.A (n_13), .Y (n_15));
  OAI21X1 g507(.A (A[4]), .B (n_9), .C (n_12), .Y (Z[4]));
  NAND2X1 g508(.A (A[4]), .B (n_11), .Y (n_13));
  NAND2X1 g509(.A (A[4]), .B (n_9), .Y (n_12));
  INVX2 g510(.A (n_9), .Y (n_11));
  OAI21X1 g511(.A (A[3]), .B (n_4), .C (n_8), .Y (Z[3]));
  NAND2X1 g512(.A (A[3]), .B (n_7), .Y (n_9));
  NAND2X1 g513(.A (A[3]), .B (n_4), .Y (n_8));
  INVX2 g514(.A (n_4), .Y (n_7));
  NAND2X1 g517(.A (A[2]), .B (n_2), .Y (n_4));
  HAX1 g519(.A (A[0]), .B (A[1]), .YC (n_2), .YS (Z[1]));
  XOR2X1 g2(.A (A[2]), .B (n_2), .Y (Z[2]));
endmodule

module increment_unsigned_53_54_443(A, CI, Z);
  input [31:0] A;
  input CI;
  output [31:0] Z;
  wire [31:0] A;
  wire CI;
  wire [31:0] Z;
  wire n_2, n_4, n_7, n_8, n_9, n_11, n_12, n_13;
  wire n_15, n_16, n_17, n_19, n_20, n_21, n_23, n_24;
  wire n_25, n_27, n_28, n_29, n_31, n_32, n_33, n_35;
  wire n_36, n_37, n_39, n_40, n_41, n_43, n_44, n_45;
  wire n_47, n_48, n_49, n_51, n_52, n_53, n_55, n_56;
  wire n_57, n_59, n_60, n_61, n_63, n_64, n_65, n_67;
  wire n_68, n_69, n_71, n_72, n_73, n_75, n_76, n_77;
  wire n_79, n_80, n_81, n_83, n_84, n_85, n_87, n_88;
  wire n_89, n_91, n_92, n_93, n_95, n_96, n_97, n_99;
  wire n_100, n_101, n_103, n_104, n_105, n_107, n_108, n_109;
  wire n_111, n_112, n_113, n_115, n_116, n_117, n_119;
  OAI21X1 g401(.A (A[31]), .B (n_117), .C (n_119), .Y (Z[31]));
  NAND2X1 g402(.A (A[31]), .B (n_117), .Y (n_119));
  OAI21X1 g403(.A (A[30]), .B (n_113), .C (n_116), .Y (Z[30]));
  NAND2X1 g404(.A (A[30]), .B (n_115), .Y (n_117));
  NAND2X1 g405(.A (A[30]), .B (n_113), .Y (n_116));
  INVX2 g406(.A (n_113), .Y (n_115));
  OAI21X1 g407(.A (A[29]), .B (n_109), .C (n_112), .Y (Z[29]));
  NAND2X1 g408(.A (A[29]), .B (n_111), .Y (n_113));
  NAND2X1 g409(.A (A[29]), .B (n_109), .Y (n_112));
  INVX2 g410(.A (n_109), .Y (n_111));
  OAI21X1 g411(.A (A[28]), .B (n_105), .C (n_108), .Y (Z[28]));
  NAND2X1 g412(.A (A[28]), .B (n_107), .Y (n_109));
  NAND2X1 g413(.A (A[28]), .B (n_105), .Y (n_108));
  INVX2 g414(.A (n_105), .Y (n_107));
  OAI21X1 g415(.A (A[27]), .B (n_101), .C (n_104), .Y (Z[27]));
  NAND2X1 g416(.A (A[27]), .B (n_103), .Y (n_105));
  NAND2X1 g417(.A (A[27]), .B (n_101), .Y (n_104));
  INVX2 g418(.A (n_101), .Y (n_103));
  OAI21X1 g419(.A (A[26]), .B (n_97), .C (n_100), .Y (Z[26]));
  NAND2X1 g420(.A (A[26]), .B (n_99), .Y (n_101));
  NAND2X1 g421(.A (A[26]), .B (n_97), .Y (n_100));
  INVX2 g422(.A (n_97), .Y (n_99));
  OAI21X1 g423(.A (A[25]), .B (n_93), .C (n_96), .Y (Z[25]));
  NAND2X1 g424(.A (A[25]), .B (n_95), .Y (n_97));
  NAND2X1 g425(.A (A[25]), .B (n_93), .Y (n_96));
  INVX2 g426(.A (n_93), .Y (n_95));
  OAI21X1 g427(.A (A[24]), .B (n_89), .C (n_92), .Y (Z[24]));
  NAND2X1 g428(.A (A[24]), .B (n_91), .Y (n_93));
  NAND2X1 g429(.A (A[24]), .B (n_89), .Y (n_92));
  INVX2 g430(.A (n_89), .Y (n_91));
  OAI21X1 g431(.A (A[23]), .B (n_85), .C (n_88), .Y (Z[23]));
  NAND2X1 g432(.A (A[23]), .B (n_87), .Y (n_89));
  NAND2X1 g433(.A (A[23]), .B (n_85), .Y (n_88));
  INVX2 g434(.A (n_85), .Y (n_87));
  OAI21X1 g435(.A (A[22]), .B (n_81), .C (n_84), .Y (Z[22]));
  NAND2X1 g436(.A (A[22]), .B (n_83), .Y (n_85));
  NAND2X1 g437(.A (A[22]), .B (n_81), .Y (n_84));
  INVX2 g438(.A (n_81), .Y (n_83));
  OAI21X1 g439(.A (A[21]), .B (n_77), .C (n_80), .Y (Z[21]));
  NAND2X1 g440(.A (A[21]), .B (n_79), .Y (n_81));
  NAND2X1 g441(.A (A[21]), .B (n_77), .Y (n_80));
  INVX2 g442(.A (n_77), .Y (n_79));
  OAI21X1 g443(.A (A[20]), .B (n_73), .C (n_76), .Y (Z[20]));
  NAND2X1 g444(.A (A[20]), .B (n_75), .Y (n_77));
  NAND2X1 g445(.A (A[20]), .B (n_73), .Y (n_76));
  INVX2 g446(.A (n_73), .Y (n_75));
  OAI21X1 g447(.A (A[19]), .B (n_69), .C (n_72), .Y (Z[19]));
  NAND2X1 g448(.A (A[19]), .B (n_71), .Y (n_73));
  NAND2X1 g449(.A (A[19]), .B (n_69), .Y (n_72));
  INVX2 g450(.A (n_69), .Y (n_71));
  OAI21X1 g451(.A (A[18]), .B (n_65), .C (n_68), .Y (Z[18]));
  NAND2X1 g452(.A (A[18]), .B (n_67), .Y (n_69));
  NAND2X1 g453(.A (A[18]), .B (n_65), .Y (n_68));
  INVX2 g454(.A (n_65), .Y (n_67));
  OAI21X1 g455(.A (A[17]), .B (n_61), .C (n_64), .Y (Z[17]));
  NAND2X1 g456(.A (A[17]), .B (n_63), .Y (n_65));
  NAND2X1 g457(.A (A[17]), .B (n_61), .Y (n_64));
  INVX2 g458(.A (n_61), .Y (n_63));
  OAI21X1 g459(.A (A[16]), .B (n_57), .C (n_60), .Y (Z[16]));
  NAND2X1 g460(.A (A[16]), .B (n_59), .Y (n_61));
  NAND2X1 g461(.A (A[16]), .B (n_57), .Y (n_60));
  INVX2 g462(.A (n_57), .Y (n_59));
  OAI21X1 g463(.A (A[15]), .B (n_53), .C (n_56), .Y (Z[15]));
  NAND2X1 g464(.A (A[15]), .B (n_55), .Y (n_57));
  NAND2X1 g465(.A (A[15]), .B (n_53), .Y (n_56));
  INVX2 g466(.A (n_53), .Y (n_55));
  OAI21X1 g467(.A (A[14]), .B (n_49), .C (n_52), .Y (Z[14]));
  NAND2X1 g468(.A (A[14]), .B (n_51), .Y (n_53));
  NAND2X1 g469(.A (A[14]), .B (n_49), .Y (n_52));
  INVX2 g470(.A (n_49), .Y (n_51));
  OAI21X1 g471(.A (A[13]), .B (n_45), .C (n_48), .Y (Z[13]));
  NAND2X1 g472(.A (A[13]), .B (n_47), .Y (n_49));
  NAND2X1 g473(.A (A[13]), .B (n_45), .Y (n_48));
  INVX2 g474(.A (n_45), .Y (n_47));
  OAI21X1 g475(.A (A[12]), .B (n_41), .C (n_44), .Y (Z[12]));
  NAND2X1 g476(.A (A[12]), .B (n_43), .Y (n_45));
  NAND2X1 g477(.A (A[12]), .B (n_41), .Y (n_44));
  INVX2 g478(.A (n_41), .Y (n_43));
  OAI21X1 g479(.A (A[11]), .B (n_37), .C (n_40), .Y (Z[11]));
  NAND2X1 g480(.A (A[11]), .B (n_39), .Y (n_41));
  NAND2X1 g481(.A (A[11]), .B (n_37), .Y (n_40));
  INVX2 g482(.A (n_37), .Y (n_39));
  OAI21X1 g483(.A (A[10]), .B (n_33), .C (n_36), .Y (Z[10]));
  NAND2X1 g484(.A (A[10]), .B (n_35), .Y (n_37));
  NAND2X1 g485(.A (A[10]), .B (n_33), .Y (n_36));
  INVX2 g486(.A (n_33), .Y (n_35));
  OAI21X1 g487(.A (A[9]), .B (n_29), .C (n_32), .Y (Z[9]));
  NAND2X1 g488(.A (A[9]), .B (n_31), .Y (n_33));
  NAND2X1 g489(.A (A[9]), .B (n_29), .Y (n_32));
  INVX2 g490(.A (n_29), .Y (n_31));
  OAI21X1 g491(.A (A[8]), .B (n_25), .C (n_28), .Y (Z[8]));
  NAND2X1 g492(.A (A[8]), .B (n_27), .Y (n_29));
  NAND2X1 g493(.A (A[8]), .B (n_25), .Y (n_28));
  INVX2 g494(.A (n_25), .Y (n_27));
  OAI21X1 g495(.A (A[7]), .B (n_21), .C (n_24), .Y (Z[7]));
  NAND2X1 g496(.A (A[7]), .B (n_23), .Y (n_25));
  NAND2X1 g497(.A (A[7]), .B (n_21), .Y (n_24));
  INVX2 g498(.A (n_21), .Y (n_23));
  OAI21X1 g499(.A (A[6]), .B (n_17), .C (n_20), .Y (Z[6]));
  NAND2X1 g500(.A (A[6]), .B (n_19), .Y (n_21));
  NAND2X1 g501(.A (A[6]), .B (n_17), .Y (n_20));
  INVX2 g502(.A (n_17), .Y (n_19));
  OAI21X1 g503(.A (A[5]), .B (n_13), .C (n_16), .Y (Z[5]));
  NAND2X1 g504(.A (A[5]), .B (n_15), .Y (n_17));
  NAND2X1 g505(.A (A[5]), .B (n_13), .Y (n_16));
  INVX2 g506(.A (n_13), .Y (n_15));
  OAI21X1 g507(.A (A[4]), .B (n_9), .C (n_12), .Y (Z[4]));
  NAND2X1 g508(.A (A[4]), .B (n_11), .Y (n_13));
  NAND2X1 g509(.A (A[4]), .B (n_9), .Y (n_12));
  INVX2 g510(.A (n_9), .Y (n_11));
  OAI21X1 g511(.A (A[3]), .B (n_4), .C (n_8), .Y (Z[3]));
  NAND2X1 g512(.A (A[3]), .B (n_7), .Y (n_9));
  NAND2X1 g513(.A (A[3]), .B (n_4), .Y (n_8));
  INVX2 g514(.A (n_4), .Y (n_7));
  NAND2X1 g517(.A (A[2]), .B (n_2), .Y (n_4));
  HAX1 g519(.A (A[0]), .B (A[1]), .YC (n_2), .YS (Z[1]));
  XOR2X1 g2(.A (A[2]), .B (n_2), .Y (Z[2]));
endmodule

module increment_unsigned_53_54_444(A, CI, Z);
  input [31:0] A;
  input CI;
  output [31:0] Z;
  wire [31:0] A;
  wire CI;
  wire [31:0] Z;
  wire n_2, n_4, n_7, n_8, n_9, n_11, n_12, n_13;
  wire n_15, n_16, n_17, n_19, n_20, n_21, n_23, n_24;
  wire n_25, n_27, n_28, n_29, n_31, n_32, n_33, n_35;
  wire n_36, n_37, n_39, n_40, n_41, n_43, n_44, n_45;
  wire n_47, n_48, n_49, n_51, n_52, n_53, n_55, n_56;
  wire n_57, n_59, n_60, n_61, n_63, n_64, n_65, n_67;
  wire n_68, n_69, n_71, n_72, n_73, n_75, n_76, n_77;
  wire n_79, n_80, n_81, n_83, n_84, n_85, n_87, n_88;
  wire n_89, n_91, n_92, n_93, n_95, n_96, n_97, n_99;
  wire n_100, n_101, n_103, n_104, n_105, n_107, n_108, n_109;
  wire n_111, n_112, n_113, n_115, n_116, n_117, n_119;
  OAI21X1 g401(.A (A[31]), .B (n_117), .C (n_119), .Y (Z[31]));
  NAND2X1 g402(.A (A[31]), .B (n_117), .Y (n_119));
  OAI21X1 g403(.A (A[30]), .B (n_113), .C (n_116), .Y (Z[30]));
  NAND2X1 g404(.A (A[30]), .B (n_115), .Y (n_117));
  NAND2X1 g405(.A (A[30]), .B (n_113), .Y (n_116));
  INVX2 g406(.A (n_113), .Y (n_115));
  OAI21X1 g407(.A (A[29]), .B (n_109), .C (n_112), .Y (Z[29]));
  NAND2X1 g408(.A (A[29]), .B (n_111), .Y (n_113));
  NAND2X1 g409(.A (A[29]), .B (n_109), .Y (n_112));
  INVX2 g410(.A (n_109), .Y (n_111));
  OAI21X1 g411(.A (A[28]), .B (n_105), .C (n_108), .Y (Z[28]));
  NAND2X1 g412(.A (A[28]), .B (n_107), .Y (n_109));
  NAND2X1 g413(.A (A[28]), .B (n_105), .Y (n_108));
  INVX2 g414(.A (n_105), .Y (n_107));
  OAI21X1 g415(.A (A[27]), .B (n_101), .C (n_104), .Y (Z[27]));
  NAND2X1 g416(.A (A[27]), .B (n_103), .Y (n_105));
  NAND2X1 g417(.A (A[27]), .B (n_101), .Y (n_104));
  INVX2 g418(.A (n_101), .Y (n_103));
  OAI21X1 g419(.A (A[26]), .B (n_97), .C (n_100), .Y (Z[26]));
  NAND2X1 g420(.A (A[26]), .B (n_99), .Y (n_101));
  NAND2X1 g421(.A (A[26]), .B (n_97), .Y (n_100));
  INVX2 g422(.A (n_97), .Y (n_99));
  OAI21X1 g423(.A (A[25]), .B (n_93), .C (n_96), .Y (Z[25]));
  NAND2X1 g424(.A (A[25]), .B (n_95), .Y (n_97));
  NAND2X1 g425(.A (A[25]), .B (n_93), .Y (n_96));
  INVX2 g426(.A (n_93), .Y (n_95));
  OAI21X1 g427(.A (A[24]), .B (n_89), .C (n_92), .Y (Z[24]));
  NAND2X1 g428(.A (A[24]), .B (n_91), .Y (n_93));
  NAND2X1 g429(.A (A[24]), .B (n_89), .Y (n_92));
  INVX2 g430(.A (n_89), .Y (n_91));
  OAI21X1 g431(.A (A[23]), .B (n_85), .C (n_88), .Y (Z[23]));
  NAND2X1 g432(.A (A[23]), .B (n_87), .Y (n_89));
  NAND2X1 g433(.A (A[23]), .B (n_85), .Y (n_88));
  INVX2 g434(.A (n_85), .Y (n_87));
  OAI21X1 g435(.A (A[22]), .B (n_81), .C (n_84), .Y (Z[22]));
  NAND2X1 g436(.A (A[22]), .B (n_83), .Y (n_85));
  NAND2X1 g437(.A (A[22]), .B (n_81), .Y (n_84));
  INVX2 g438(.A (n_81), .Y (n_83));
  OAI21X1 g439(.A (A[21]), .B (n_77), .C (n_80), .Y (Z[21]));
  NAND2X1 g440(.A (A[21]), .B (n_79), .Y (n_81));
  NAND2X1 g441(.A (A[21]), .B (n_77), .Y (n_80));
  INVX2 g442(.A (n_77), .Y (n_79));
  OAI21X1 g443(.A (A[20]), .B (n_73), .C (n_76), .Y (Z[20]));
  NAND2X1 g444(.A (A[20]), .B (n_75), .Y (n_77));
  NAND2X1 g445(.A (A[20]), .B (n_73), .Y (n_76));
  INVX2 g446(.A (n_73), .Y (n_75));
  OAI21X1 g447(.A (A[19]), .B (n_69), .C (n_72), .Y (Z[19]));
  NAND2X1 g448(.A (A[19]), .B (n_71), .Y (n_73));
  NAND2X1 g449(.A (A[19]), .B (n_69), .Y (n_72));
  INVX2 g450(.A (n_69), .Y (n_71));
  OAI21X1 g451(.A (A[18]), .B (n_65), .C (n_68), .Y (Z[18]));
  NAND2X1 g452(.A (A[18]), .B (n_67), .Y (n_69));
  NAND2X1 g453(.A (A[18]), .B (n_65), .Y (n_68));
  INVX2 g454(.A (n_65), .Y (n_67));
  OAI21X1 g455(.A (A[17]), .B (n_61), .C (n_64), .Y (Z[17]));
  NAND2X1 g456(.A (A[17]), .B (n_63), .Y (n_65));
  NAND2X1 g457(.A (A[17]), .B (n_61), .Y (n_64));
  INVX2 g458(.A (n_61), .Y (n_63));
  OAI21X1 g459(.A (A[16]), .B (n_57), .C (n_60), .Y (Z[16]));
  NAND2X1 g460(.A (A[16]), .B (n_59), .Y (n_61));
  NAND2X1 g461(.A (A[16]), .B (n_57), .Y (n_60));
  INVX2 g462(.A (n_57), .Y (n_59));
  OAI21X1 g463(.A (A[15]), .B (n_53), .C (n_56), .Y (Z[15]));
  NAND2X1 g464(.A (A[15]), .B (n_55), .Y (n_57));
  NAND2X1 g465(.A (A[15]), .B (n_53), .Y (n_56));
  INVX2 g466(.A (n_53), .Y (n_55));
  OAI21X1 g467(.A (A[14]), .B (n_49), .C (n_52), .Y (Z[14]));
  NAND2X1 g468(.A (A[14]), .B (n_51), .Y (n_53));
  NAND2X1 g469(.A (A[14]), .B (n_49), .Y (n_52));
  INVX2 g470(.A (n_49), .Y (n_51));
  OAI21X1 g471(.A (A[13]), .B (n_45), .C (n_48), .Y (Z[13]));
  NAND2X1 g472(.A (A[13]), .B (n_47), .Y (n_49));
  NAND2X1 g473(.A (A[13]), .B (n_45), .Y (n_48));
  INVX2 g474(.A (n_45), .Y (n_47));
  OAI21X1 g475(.A (A[12]), .B (n_41), .C (n_44), .Y (Z[12]));
  NAND2X1 g476(.A (A[12]), .B (n_43), .Y (n_45));
  NAND2X1 g477(.A (A[12]), .B (n_41), .Y (n_44));
  INVX2 g478(.A (n_41), .Y (n_43));
  OAI21X1 g479(.A (A[11]), .B (n_37), .C (n_40), .Y (Z[11]));
  NAND2X1 g480(.A (A[11]), .B (n_39), .Y (n_41));
  NAND2X1 g481(.A (A[11]), .B (n_37), .Y (n_40));
  INVX2 g482(.A (n_37), .Y (n_39));
  OAI21X1 g483(.A (A[10]), .B (n_33), .C (n_36), .Y (Z[10]));
  NAND2X1 g484(.A (A[10]), .B (n_35), .Y (n_37));
  NAND2X1 g485(.A (A[10]), .B (n_33), .Y (n_36));
  INVX2 g486(.A (n_33), .Y (n_35));
  OAI21X1 g487(.A (A[9]), .B (n_29), .C (n_32), .Y (Z[9]));
  NAND2X1 g488(.A (A[9]), .B (n_31), .Y (n_33));
  NAND2X1 g489(.A (A[9]), .B (n_29), .Y (n_32));
  INVX2 g490(.A (n_29), .Y (n_31));
  OAI21X1 g491(.A (A[8]), .B (n_25), .C (n_28), .Y (Z[8]));
  NAND2X1 g492(.A (A[8]), .B (n_27), .Y (n_29));
  NAND2X1 g493(.A (A[8]), .B (n_25), .Y (n_28));
  INVX2 g494(.A (n_25), .Y (n_27));
  OAI21X1 g495(.A (A[7]), .B (n_21), .C (n_24), .Y (Z[7]));
  NAND2X1 g496(.A (A[7]), .B (n_23), .Y (n_25));
  NAND2X1 g497(.A (A[7]), .B (n_21), .Y (n_24));
  INVX2 g498(.A (n_21), .Y (n_23));
  OAI21X1 g499(.A (A[6]), .B (n_17), .C (n_20), .Y (Z[6]));
  NAND2X1 g500(.A (A[6]), .B (n_19), .Y (n_21));
  NAND2X1 g501(.A (A[6]), .B (n_17), .Y (n_20));
  INVX2 g502(.A (n_17), .Y (n_19));
  OAI21X1 g503(.A (A[5]), .B (n_13), .C (n_16), .Y (Z[5]));
  NAND2X1 g504(.A (A[5]), .B (n_15), .Y (n_17));
  NAND2X1 g505(.A (A[5]), .B (n_13), .Y (n_16));
  INVX2 g506(.A (n_13), .Y (n_15));
  OAI21X1 g507(.A (A[4]), .B (n_9), .C (n_12), .Y (Z[4]));
  NAND2X1 g508(.A (A[4]), .B (n_11), .Y (n_13));
  NAND2X1 g509(.A (A[4]), .B (n_9), .Y (n_12));
  INVX2 g510(.A (n_9), .Y (n_11));
  OAI21X1 g511(.A (A[3]), .B (n_4), .C (n_8), .Y (Z[3]));
  NAND2X1 g512(.A (A[3]), .B (n_7), .Y (n_9));
  NAND2X1 g513(.A (A[3]), .B (n_4), .Y (n_8));
  INVX2 g514(.A (n_4), .Y (n_7));
  NAND2X1 g517(.A (A[2]), .B (n_2), .Y (n_4));
  HAX1 g519(.A (A[0]), .B (A[1]), .YC (n_2), .YS (Z[1]));
  XOR2X1 g2(.A (A[2]), .B (n_2), .Y (Z[2]));
endmodule

module increment_unsigned_53_54_445(A, CI, Z);
  input [31:0] A;
  input CI;
  output [31:0] Z;
  wire [31:0] A;
  wire CI;
  wire [31:0] Z;
  wire n_2, n_4, n_7, n_8, n_9, n_11, n_12, n_13;
  wire n_15, n_16, n_17, n_19, n_20, n_21, n_23, n_24;
  wire n_25, n_27, n_28, n_29, n_31, n_32, n_33, n_35;
  wire n_36, n_37, n_39, n_40, n_41, n_43, n_44, n_45;
  wire n_47, n_48, n_49, n_51, n_52, n_53, n_55, n_56;
  wire n_57, n_59, n_60, n_61, n_63, n_64, n_65, n_67;
  wire n_68, n_69, n_71, n_72, n_73, n_75, n_76, n_77;
  wire n_79, n_80, n_81, n_83, n_84, n_85, n_87, n_88;
  wire n_89, n_91, n_92, n_93, n_95, n_96, n_97, n_99;
  wire n_100, n_101, n_103, n_104, n_105, n_107, n_108, n_109;
  wire n_111, n_112, n_113, n_115, n_116, n_117, n_119;
  OAI21X1 g401(.A (A[31]), .B (n_117), .C (n_119), .Y (Z[31]));
  NAND2X1 g402(.A (A[31]), .B (n_117), .Y (n_119));
  OAI21X1 g403(.A (A[30]), .B (n_113), .C (n_116), .Y (Z[30]));
  NAND2X1 g404(.A (A[30]), .B (n_115), .Y (n_117));
  NAND2X1 g405(.A (A[30]), .B (n_113), .Y (n_116));
  INVX2 g406(.A (n_113), .Y (n_115));
  OAI21X1 g407(.A (A[29]), .B (n_109), .C (n_112), .Y (Z[29]));
  NAND2X1 g408(.A (A[29]), .B (n_111), .Y (n_113));
  NAND2X1 g409(.A (A[29]), .B (n_109), .Y (n_112));
  INVX2 g410(.A (n_109), .Y (n_111));
  OAI21X1 g411(.A (A[28]), .B (n_105), .C (n_108), .Y (Z[28]));
  NAND2X1 g412(.A (A[28]), .B (n_107), .Y (n_109));
  NAND2X1 g413(.A (A[28]), .B (n_105), .Y (n_108));
  INVX2 g414(.A (n_105), .Y (n_107));
  OAI21X1 g415(.A (A[27]), .B (n_101), .C (n_104), .Y (Z[27]));
  NAND2X1 g416(.A (A[27]), .B (n_103), .Y (n_105));
  NAND2X1 g417(.A (A[27]), .B (n_101), .Y (n_104));
  INVX2 g418(.A (n_101), .Y (n_103));
  OAI21X1 g419(.A (A[26]), .B (n_97), .C (n_100), .Y (Z[26]));
  NAND2X1 g420(.A (A[26]), .B (n_99), .Y (n_101));
  NAND2X1 g421(.A (A[26]), .B (n_97), .Y (n_100));
  INVX2 g422(.A (n_97), .Y (n_99));
  OAI21X1 g423(.A (A[25]), .B (n_93), .C (n_96), .Y (Z[25]));
  NAND2X1 g424(.A (A[25]), .B (n_95), .Y (n_97));
  NAND2X1 g425(.A (A[25]), .B (n_93), .Y (n_96));
  INVX2 g426(.A (n_93), .Y (n_95));
  OAI21X1 g427(.A (A[24]), .B (n_89), .C (n_92), .Y (Z[24]));
  NAND2X1 g428(.A (A[24]), .B (n_91), .Y (n_93));
  NAND2X1 g429(.A (A[24]), .B (n_89), .Y (n_92));
  INVX2 g430(.A (n_89), .Y (n_91));
  OAI21X1 g431(.A (A[23]), .B (n_85), .C (n_88), .Y (Z[23]));
  NAND2X1 g432(.A (A[23]), .B (n_87), .Y (n_89));
  NAND2X1 g433(.A (A[23]), .B (n_85), .Y (n_88));
  INVX2 g434(.A (n_85), .Y (n_87));
  OAI21X1 g435(.A (A[22]), .B (n_81), .C (n_84), .Y (Z[22]));
  NAND2X1 g436(.A (A[22]), .B (n_83), .Y (n_85));
  NAND2X1 g437(.A (A[22]), .B (n_81), .Y (n_84));
  INVX2 g438(.A (n_81), .Y (n_83));
  OAI21X1 g439(.A (A[21]), .B (n_77), .C (n_80), .Y (Z[21]));
  NAND2X1 g440(.A (A[21]), .B (n_79), .Y (n_81));
  NAND2X1 g441(.A (A[21]), .B (n_77), .Y (n_80));
  INVX2 g442(.A (n_77), .Y (n_79));
  OAI21X1 g443(.A (A[20]), .B (n_73), .C (n_76), .Y (Z[20]));
  NAND2X1 g444(.A (A[20]), .B (n_75), .Y (n_77));
  NAND2X1 g445(.A (A[20]), .B (n_73), .Y (n_76));
  INVX2 g446(.A (n_73), .Y (n_75));
  OAI21X1 g447(.A (A[19]), .B (n_69), .C (n_72), .Y (Z[19]));
  NAND2X1 g448(.A (A[19]), .B (n_71), .Y (n_73));
  NAND2X1 g449(.A (A[19]), .B (n_69), .Y (n_72));
  INVX2 g450(.A (n_69), .Y (n_71));
  OAI21X1 g451(.A (A[18]), .B (n_65), .C (n_68), .Y (Z[18]));
  NAND2X1 g452(.A (A[18]), .B (n_67), .Y (n_69));
  NAND2X1 g453(.A (A[18]), .B (n_65), .Y (n_68));
  INVX2 g454(.A (n_65), .Y (n_67));
  OAI21X1 g455(.A (A[17]), .B (n_61), .C (n_64), .Y (Z[17]));
  NAND2X1 g456(.A (A[17]), .B (n_63), .Y (n_65));
  NAND2X1 g457(.A (A[17]), .B (n_61), .Y (n_64));
  INVX2 g458(.A (n_61), .Y (n_63));
  OAI21X1 g459(.A (A[16]), .B (n_57), .C (n_60), .Y (Z[16]));
  NAND2X1 g460(.A (A[16]), .B (n_59), .Y (n_61));
  NAND2X1 g461(.A (A[16]), .B (n_57), .Y (n_60));
  INVX2 g462(.A (n_57), .Y (n_59));
  OAI21X1 g463(.A (A[15]), .B (n_53), .C (n_56), .Y (Z[15]));
  NAND2X1 g464(.A (A[15]), .B (n_55), .Y (n_57));
  NAND2X1 g465(.A (A[15]), .B (n_53), .Y (n_56));
  INVX2 g466(.A (n_53), .Y (n_55));
  OAI21X1 g467(.A (A[14]), .B (n_49), .C (n_52), .Y (Z[14]));
  NAND2X1 g468(.A (A[14]), .B (n_51), .Y (n_53));
  NAND2X1 g469(.A (A[14]), .B (n_49), .Y (n_52));
  INVX2 g470(.A (n_49), .Y (n_51));
  OAI21X1 g471(.A (A[13]), .B (n_45), .C (n_48), .Y (Z[13]));
  NAND2X1 g472(.A (A[13]), .B (n_47), .Y (n_49));
  NAND2X1 g473(.A (A[13]), .B (n_45), .Y (n_48));
  INVX2 g474(.A (n_45), .Y (n_47));
  OAI21X1 g475(.A (A[12]), .B (n_41), .C (n_44), .Y (Z[12]));
  NAND2X1 g476(.A (A[12]), .B (n_43), .Y (n_45));
  NAND2X1 g477(.A (A[12]), .B (n_41), .Y (n_44));
  INVX2 g478(.A (n_41), .Y (n_43));
  OAI21X1 g479(.A (A[11]), .B (n_37), .C (n_40), .Y (Z[11]));
  NAND2X1 g480(.A (A[11]), .B (n_39), .Y (n_41));
  NAND2X1 g481(.A (A[11]), .B (n_37), .Y (n_40));
  INVX2 g482(.A (n_37), .Y (n_39));
  OAI21X1 g483(.A (A[10]), .B (n_33), .C (n_36), .Y (Z[10]));
  NAND2X1 g484(.A (A[10]), .B (n_35), .Y (n_37));
  NAND2X1 g485(.A (A[10]), .B (n_33), .Y (n_36));
  INVX2 g486(.A (n_33), .Y (n_35));
  OAI21X1 g487(.A (A[9]), .B (n_29), .C (n_32), .Y (Z[9]));
  NAND2X1 g488(.A (A[9]), .B (n_31), .Y (n_33));
  NAND2X1 g489(.A (A[9]), .B (n_29), .Y (n_32));
  INVX2 g490(.A (n_29), .Y (n_31));
  OAI21X1 g491(.A (A[8]), .B (n_25), .C (n_28), .Y (Z[8]));
  NAND2X1 g492(.A (A[8]), .B (n_27), .Y (n_29));
  NAND2X1 g493(.A (A[8]), .B (n_25), .Y (n_28));
  INVX2 g494(.A (n_25), .Y (n_27));
  OAI21X1 g495(.A (A[7]), .B (n_21), .C (n_24), .Y (Z[7]));
  NAND2X1 g496(.A (A[7]), .B (n_23), .Y (n_25));
  NAND2X1 g497(.A (A[7]), .B (n_21), .Y (n_24));
  INVX2 g498(.A (n_21), .Y (n_23));
  OAI21X1 g499(.A (A[6]), .B (n_17), .C (n_20), .Y (Z[6]));
  NAND2X1 g500(.A (A[6]), .B (n_19), .Y (n_21));
  NAND2X1 g501(.A (A[6]), .B (n_17), .Y (n_20));
  INVX2 g502(.A (n_17), .Y (n_19));
  OAI21X1 g503(.A (A[5]), .B (n_13), .C (n_16), .Y (Z[5]));
  NAND2X1 g504(.A (A[5]), .B (n_15), .Y (n_17));
  NAND2X1 g505(.A (A[5]), .B (n_13), .Y (n_16));
  INVX2 g506(.A (n_13), .Y (n_15));
  OAI21X1 g507(.A (A[4]), .B (n_9), .C (n_12), .Y (Z[4]));
  NAND2X1 g508(.A (A[4]), .B (n_11), .Y (n_13));
  NAND2X1 g509(.A (A[4]), .B (n_9), .Y (n_12));
  INVX2 g510(.A (n_9), .Y (n_11));
  OAI21X1 g511(.A (A[3]), .B (n_4), .C (n_8), .Y (Z[3]));
  NAND2X1 g512(.A (A[3]), .B (n_7), .Y (n_9));
  NAND2X1 g513(.A (A[3]), .B (n_4), .Y (n_8));
  INVX2 g514(.A (n_4), .Y (n_7));
  NAND2X1 g517(.A (A[2]), .B (n_2), .Y (n_4));
  HAX1 g519(.A (A[0]), .B (A[1]), .YC (n_2), .YS (Z[1]));
  XOR2X1 g2(.A (A[2]), .B (n_2), .Y (Z[2]));
endmodule

module increment_unsigned_53_54(A, CI, Z);
  input [31:0] A;
  input CI;
  output [31:0] Z;
  wire [31:0] A;
  wire CI;
  wire [31:0] Z;
  wire n_2, n_4, n_7, n_8, n_9, n_11, n_12, n_13;
  wire n_15, n_16, n_17, n_19, n_20, n_21, n_23, n_24;
  wire n_25, n_27, n_28, n_29, n_31, n_32, n_33, n_35;
  wire n_36, n_37, n_39, n_40, n_41, n_43, n_44, n_45;
  wire n_47, n_48, n_49, n_51, n_52, n_53, n_55, n_56;
  wire n_57, n_59, n_60, n_61, n_63, n_64, n_65, n_67;
  wire n_68, n_69, n_71, n_72, n_73, n_75, n_76, n_77;
  wire n_79, n_80, n_81, n_83, n_84, n_85, n_87, n_88;
  wire n_89, n_91, n_92, n_93, n_95, n_96, n_97, n_99;
  wire n_100, n_101, n_103, n_104, n_105, n_107, n_108, n_109;
  wire n_111, n_112, n_113, n_115, n_116, n_117, n_119;
  OAI21X1 g401(.A (A[31]), .B (n_117), .C (n_119), .Y (Z[31]));
  NAND2X1 g402(.A (A[31]), .B (n_117), .Y (n_119));
  OAI21X1 g403(.A (A[30]), .B (n_113), .C (n_116), .Y (Z[30]));
  NAND2X1 g404(.A (A[30]), .B (n_115), .Y (n_117));
  NAND2X1 g405(.A (A[30]), .B (n_113), .Y (n_116));
  INVX2 g406(.A (n_113), .Y (n_115));
  OAI21X1 g407(.A (A[29]), .B (n_109), .C (n_112), .Y (Z[29]));
  NAND2X1 g408(.A (A[29]), .B (n_111), .Y (n_113));
  NAND2X1 g409(.A (A[29]), .B (n_109), .Y (n_112));
  INVX2 g410(.A (n_109), .Y (n_111));
  OAI21X1 g411(.A (A[28]), .B (n_105), .C (n_108), .Y (Z[28]));
  NAND2X1 g412(.A (A[28]), .B (n_107), .Y (n_109));
  NAND2X1 g413(.A (A[28]), .B (n_105), .Y (n_108));
  INVX2 g414(.A (n_105), .Y (n_107));
  OAI21X1 g415(.A (A[27]), .B (n_101), .C (n_104), .Y (Z[27]));
  NAND2X1 g416(.A (A[27]), .B (n_103), .Y (n_105));
  NAND2X1 g417(.A (A[27]), .B (n_101), .Y (n_104));
  INVX2 g418(.A (n_101), .Y (n_103));
  OAI21X1 g419(.A (A[26]), .B (n_97), .C (n_100), .Y (Z[26]));
  NAND2X1 g420(.A (A[26]), .B (n_99), .Y (n_101));
  NAND2X1 g421(.A (A[26]), .B (n_97), .Y (n_100));
  INVX2 g422(.A (n_97), .Y (n_99));
  OAI21X1 g423(.A (A[25]), .B (n_93), .C (n_96), .Y (Z[25]));
  NAND2X1 g424(.A (A[25]), .B (n_95), .Y (n_97));
  NAND2X1 g425(.A (A[25]), .B (n_93), .Y (n_96));
  INVX2 g426(.A (n_93), .Y (n_95));
  OAI21X1 g427(.A (A[24]), .B (n_89), .C (n_92), .Y (Z[24]));
  NAND2X1 g428(.A (A[24]), .B (n_91), .Y (n_93));
  NAND2X1 g429(.A (A[24]), .B (n_89), .Y (n_92));
  INVX2 g430(.A (n_89), .Y (n_91));
  OAI21X1 g431(.A (A[23]), .B (n_85), .C (n_88), .Y (Z[23]));
  NAND2X1 g432(.A (A[23]), .B (n_87), .Y (n_89));
  NAND2X1 g433(.A (A[23]), .B (n_85), .Y (n_88));
  INVX2 g434(.A (n_85), .Y (n_87));
  OAI21X1 g435(.A (A[22]), .B (n_81), .C (n_84), .Y (Z[22]));
  NAND2X1 g436(.A (A[22]), .B (n_83), .Y (n_85));
  NAND2X1 g437(.A (A[22]), .B (n_81), .Y (n_84));
  INVX2 g438(.A (n_81), .Y (n_83));
  OAI21X1 g439(.A (A[21]), .B (n_77), .C (n_80), .Y (Z[21]));
  NAND2X1 g440(.A (A[21]), .B (n_79), .Y (n_81));
  NAND2X1 g441(.A (A[21]), .B (n_77), .Y (n_80));
  INVX2 g442(.A (n_77), .Y (n_79));
  OAI21X1 g443(.A (A[20]), .B (n_73), .C (n_76), .Y (Z[20]));
  NAND2X1 g444(.A (A[20]), .B (n_75), .Y (n_77));
  NAND2X1 g445(.A (A[20]), .B (n_73), .Y (n_76));
  INVX2 g446(.A (n_73), .Y (n_75));
  OAI21X1 g447(.A (A[19]), .B (n_69), .C (n_72), .Y (Z[19]));
  NAND2X1 g448(.A (A[19]), .B (n_71), .Y (n_73));
  NAND2X1 g449(.A (A[19]), .B (n_69), .Y (n_72));
  INVX2 g450(.A (n_69), .Y (n_71));
  OAI21X1 g451(.A (A[18]), .B (n_65), .C (n_68), .Y (Z[18]));
  NAND2X1 g452(.A (A[18]), .B (n_67), .Y (n_69));
  NAND2X1 g453(.A (A[18]), .B (n_65), .Y (n_68));
  INVX2 g454(.A (n_65), .Y (n_67));
  OAI21X1 g455(.A (A[17]), .B (n_61), .C (n_64), .Y (Z[17]));
  NAND2X1 g456(.A (A[17]), .B (n_63), .Y (n_65));
  NAND2X1 g457(.A (A[17]), .B (n_61), .Y (n_64));
  INVX2 g458(.A (n_61), .Y (n_63));
  OAI21X1 g459(.A (A[16]), .B (n_57), .C (n_60), .Y (Z[16]));
  NAND2X1 g460(.A (A[16]), .B (n_59), .Y (n_61));
  NAND2X1 g461(.A (A[16]), .B (n_57), .Y (n_60));
  INVX2 g462(.A (n_57), .Y (n_59));
  OAI21X1 g463(.A (A[15]), .B (n_53), .C (n_56), .Y (Z[15]));
  NAND2X1 g464(.A (A[15]), .B (n_55), .Y (n_57));
  NAND2X1 g465(.A (A[15]), .B (n_53), .Y (n_56));
  INVX2 g466(.A (n_53), .Y (n_55));
  OAI21X1 g467(.A (A[14]), .B (n_49), .C (n_52), .Y (Z[14]));
  NAND2X1 g468(.A (A[14]), .B (n_51), .Y (n_53));
  NAND2X1 g469(.A (A[14]), .B (n_49), .Y (n_52));
  INVX2 g470(.A (n_49), .Y (n_51));
  OAI21X1 g471(.A (A[13]), .B (n_45), .C (n_48), .Y (Z[13]));
  NAND2X1 g472(.A (A[13]), .B (n_47), .Y (n_49));
  NAND2X1 g473(.A (A[13]), .B (n_45), .Y (n_48));
  INVX2 g474(.A (n_45), .Y (n_47));
  OAI21X1 g475(.A (A[12]), .B (n_41), .C (n_44), .Y (Z[12]));
  NAND2X1 g476(.A (A[12]), .B (n_43), .Y (n_45));
  NAND2X1 g477(.A (A[12]), .B (n_41), .Y (n_44));
  INVX2 g478(.A (n_41), .Y (n_43));
  OAI21X1 g479(.A (A[11]), .B (n_37), .C (n_40), .Y (Z[11]));
  NAND2X1 g480(.A (A[11]), .B (n_39), .Y (n_41));
  NAND2X1 g481(.A (A[11]), .B (n_37), .Y (n_40));
  INVX2 g482(.A (n_37), .Y (n_39));
  OAI21X1 g483(.A (A[10]), .B (n_33), .C (n_36), .Y (Z[10]));
  NAND2X1 g484(.A (A[10]), .B (n_35), .Y (n_37));
  NAND2X1 g485(.A (A[10]), .B (n_33), .Y (n_36));
  INVX2 g486(.A (n_33), .Y (n_35));
  OAI21X1 g487(.A (A[9]), .B (n_29), .C (n_32), .Y (Z[9]));
  NAND2X1 g488(.A (A[9]), .B (n_31), .Y (n_33));
  NAND2X1 g489(.A (A[9]), .B (n_29), .Y (n_32));
  INVX2 g490(.A (n_29), .Y (n_31));
  OAI21X1 g491(.A (A[8]), .B (n_25), .C (n_28), .Y (Z[8]));
  NAND2X1 g492(.A (A[8]), .B (n_27), .Y (n_29));
  NAND2X1 g493(.A (A[8]), .B (n_25), .Y (n_28));
  INVX2 g494(.A (n_25), .Y (n_27));
  OAI21X1 g495(.A (A[7]), .B (n_21), .C (n_24), .Y (Z[7]));
  NAND2X1 g496(.A (A[7]), .B (n_23), .Y (n_25));
  NAND2X1 g497(.A (A[7]), .B (n_21), .Y (n_24));
  INVX2 g498(.A (n_21), .Y (n_23));
  OAI21X1 g499(.A (A[6]), .B (n_17), .C (n_20), .Y (Z[6]));
  NAND2X1 g500(.A (A[6]), .B (n_19), .Y (n_21));
  NAND2X1 g501(.A (A[6]), .B (n_17), .Y (n_20));
  INVX2 g502(.A (n_17), .Y (n_19));
  OAI21X1 g503(.A (A[5]), .B (n_13), .C (n_16), .Y (Z[5]));
  NAND2X1 g504(.A (A[5]), .B (n_15), .Y (n_17));
  NAND2X1 g505(.A (A[5]), .B (n_13), .Y (n_16));
  INVX2 g506(.A (n_13), .Y (n_15));
  OAI21X1 g507(.A (A[4]), .B (n_9), .C (n_12), .Y (Z[4]));
  NAND2X1 g508(.A (A[4]), .B (n_11), .Y (n_13));
  NAND2X1 g509(.A (A[4]), .B (n_9), .Y (n_12));
  INVX2 g510(.A (n_9), .Y (n_11));
  OAI21X1 g511(.A (A[3]), .B (n_4), .C (n_8), .Y (Z[3]));
  NAND2X1 g512(.A (A[3]), .B (n_7), .Y (n_9));
  NAND2X1 g513(.A (A[3]), .B (n_4), .Y (n_8));
  INVX2 g514(.A (n_4), .Y (n_7));
  NAND2X1 g517(.A (A[2]), .B (n_2), .Y (n_4));
  HAX1 g519(.A (A[0]), .B (A[1]), .YC (n_2), .YS (Z[1]));
  XOR2X1 g2(.A (A[2]), .B (n_2), .Y (Z[2]));
endmodule

module increment_unsigned_51_52(A, CI, Z);
  input [22:0] A;
  input CI;
  output [22:0] Z;
  wire [22:0] A;
  wire CI;
  wire [22:0] Z;
  wire n_2, n_4, n_7, n_8, n_9, n_11, n_12, n_13;
  wire n_15, n_16, n_17, n_19, n_20, n_21, n_23, n_24;
  wire n_25, n_27, n_28, n_29, n_31, n_32, n_33, n_35;
  wire n_36, n_37, n_39, n_40, n_41, n_43, n_44, n_45;
  wire n_47, n_48, n_49, n_51, n_52, n_53, n_55, n_56;
  wire n_57, n_59, n_60, n_61, n_63, n_64, n_65, n_67;
  wire n_68, n_69, n_71, n_72, n_73, n_75, n_76, n_77;
  wire n_79, n_80, n_81, n_83;
  OAI21X1 g284(.A (A[22]), .B (n_81), .C (n_83), .Y (Z[22]));
  NAND2X1 g285(.A (A[22]), .B (n_81), .Y (n_83));
  OAI21X1 g286(.A (A[21]), .B (n_77), .C (n_80), .Y (Z[21]));
  NAND2X1 g287(.A (A[21]), .B (n_79), .Y (n_81));
  NAND2X1 g288(.A (A[21]), .B (n_77), .Y (n_80));
  INVX2 g289(.A (n_77), .Y (n_79));
  OAI21X1 g290(.A (A[20]), .B (n_73), .C (n_76), .Y (Z[20]));
  NAND2X1 g291(.A (A[20]), .B (n_75), .Y (n_77));
  NAND2X1 g292(.A (A[20]), .B (n_73), .Y (n_76));
  INVX2 g293(.A (n_73), .Y (n_75));
  OAI21X1 g294(.A (A[19]), .B (n_69), .C (n_72), .Y (Z[19]));
  NAND2X1 g295(.A (A[19]), .B (n_71), .Y (n_73));
  NAND2X1 g296(.A (A[19]), .B (n_69), .Y (n_72));
  INVX2 g297(.A (n_69), .Y (n_71));
  OAI21X1 g298(.A (A[18]), .B (n_65), .C (n_68), .Y (Z[18]));
  NAND2X1 g299(.A (A[18]), .B (n_67), .Y (n_69));
  NAND2X1 g300(.A (A[18]), .B (n_65), .Y (n_68));
  INVX2 g301(.A (n_65), .Y (n_67));
  OAI21X1 g302(.A (A[17]), .B (n_61), .C (n_64), .Y (Z[17]));
  NAND2X1 g303(.A (A[17]), .B (n_63), .Y (n_65));
  NAND2X1 g304(.A (A[17]), .B (n_61), .Y (n_64));
  INVX2 g305(.A (n_61), .Y (n_63));
  OAI21X1 g306(.A (A[16]), .B (n_57), .C (n_60), .Y (Z[16]));
  NAND2X1 g307(.A (A[16]), .B (n_59), .Y (n_61));
  NAND2X1 g308(.A (A[16]), .B (n_57), .Y (n_60));
  INVX2 g309(.A (n_57), .Y (n_59));
  OAI21X1 g310(.A (A[15]), .B (n_53), .C (n_56), .Y (Z[15]));
  NAND2X1 g311(.A (A[15]), .B (n_55), .Y (n_57));
  NAND2X1 g312(.A (A[15]), .B (n_53), .Y (n_56));
  INVX2 g313(.A (n_53), .Y (n_55));
  OAI21X1 g314(.A (A[14]), .B (n_49), .C (n_52), .Y (Z[14]));
  NAND2X1 g315(.A (A[14]), .B (n_51), .Y (n_53));
  NAND2X1 g316(.A (A[14]), .B (n_49), .Y (n_52));
  INVX2 g317(.A (n_49), .Y (n_51));
  OAI21X1 g318(.A (A[13]), .B (n_45), .C (n_48), .Y (Z[13]));
  NAND2X1 g319(.A (A[13]), .B (n_47), .Y (n_49));
  NAND2X1 g320(.A (A[13]), .B (n_45), .Y (n_48));
  INVX2 g321(.A (n_45), .Y (n_47));
  OAI21X1 g322(.A (A[12]), .B (n_41), .C (n_44), .Y (Z[12]));
  NAND2X1 g323(.A (A[12]), .B (n_43), .Y (n_45));
  NAND2X1 g324(.A (A[12]), .B (n_41), .Y (n_44));
  INVX2 g325(.A (n_41), .Y (n_43));
  OAI21X1 g326(.A (A[11]), .B (n_37), .C (n_40), .Y (Z[11]));
  NAND2X1 g327(.A (A[11]), .B (n_39), .Y (n_41));
  NAND2X1 g328(.A (A[11]), .B (n_37), .Y (n_40));
  INVX2 g329(.A (n_37), .Y (n_39));
  OAI21X1 g330(.A (A[10]), .B (n_33), .C (n_36), .Y (Z[10]));
  NAND2X1 g331(.A (A[10]), .B (n_35), .Y (n_37));
  NAND2X1 g332(.A (A[10]), .B (n_33), .Y (n_36));
  INVX2 g333(.A (n_33), .Y (n_35));
  OAI21X1 g334(.A (A[9]), .B (n_29), .C (n_32), .Y (Z[9]));
  NAND2X1 g335(.A (A[9]), .B (n_31), .Y (n_33));
  NAND2X1 g336(.A (A[9]), .B (n_29), .Y (n_32));
  INVX2 g337(.A (n_29), .Y (n_31));
  OAI21X1 g338(.A (A[8]), .B (n_25), .C (n_28), .Y (Z[8]));
  NAND2X1 g339(.A (A[8]), .B (n_27), .Y (n_29));
  NAND2X1 g340(.A (A[8]), .B (n_25), .Y (n_28));
  INVX2 g341(.A (n_25), .Y (n_27));
  OAI21X1 g342(.A (A[7]), .B (n_21), .C (n_24), .Y (Z[7]));
  NAND2X1 g343(.A (A[7]), .B (n_23), .Y (n_25));
  NAND2X1 g344(.A (A[7]), .B (n_21), .Y (n_24));
  INVX2 g345(.A (n_21), .Y (n_23));
  OAI21X1 g346(.A (A[6]), .B (n_17), .C (n_20), .Y (Z[6]));
  NAND2X1 g347(.A (A[6]), .B (n_19), .Y (n_21));
  NAND2X1 g348(.A (A[6]), .B (n_17), .Y (n_20));
  INVX2 g349(.A (n_17), .Y (n_19));
  OAI21X1 g350(.A (A[5]), .B (n_13), .C (n_16), .Y (Z[5]));
  NAND2X1 g351(.A (A[5]), .B (n_15), .Y (n_17));
  NAND2X1 g352(.A (A[5]), .B (n_13), .Y (n_16));
  INVX2 g353(.A (n_13), .Y (n_15));
  OAI21X1 g354(.A (A[4]), .B (n_9), .C (n_12), .Y (Z[4]));
  NAND2X1 g355(.A (A[4]), .B (n_11), .Y (n_13));
  NAND2X1 g356(.A (A[4]), .B (n_9), .Y (n_12));
  INVX2 g357(.A (n_9), .Y (n_11));
  OAI21X1 g358(.A (A[3]), .B (n_4), .C (n_8), .Y (Z[3]));
  NAND2X1 g359(.A (A[3]), .B (n_7), .Y (n_9));
  NAND2X1 g360(.A (A[3]), .B (n_4), .Y (n_8));
  INVX2 g361(.A (n_4), .Y (n_7));
  NAND2X1 g364(.A (A[2]), .B (n_2), .Y (n_4));
  HAX1 g366(.A (A[0]), .B (A[1]), .YC (n_2), .YS (Z[1]));
  XOR2X1 g2(.A (A[2]), .B (n_2), .Y (Z[2]));
endmodule

module chipBusController_p4(clk, rst, counter_val1, counter_val2,
     counter_val3, counter_val4, counter_val5, px_addr, stop_osc,
     clr_counter, drdy, sampleOut, ack_received, en_osc_out);
  input clk, rst, ack_received;
  input [31:0] counter_val1, counter_val2, counter_val3, counter_val4,
       counter_val5;
  output [1:0] px_addr;
  output [4:0] stop_osc;
  output clr_counter, drdy, en_osc_out;
  output [31:0] sampleOut;
  wire clk, rst, ack_received;
  wire [31:0] counter_val1, counter_val2, counter_val3, counter_val4,
       counter_val5;
  wire [1:0] px_addr;
  wire [4:0] stop_osc;
  wire clr_counter, drdy, en_osc_out;
  wire [31:0] sampleOut;
  wire [22:0] timingCounterVal;
  wire [4:0] startupWaitReg;
  wire [4:0] current_state;
  wire [1:0] doneAccumulatingRegAddr;
  wire [1:0] doneAccumulatingReg;
  wire [2:0] samp_track;
  wire UNCONNECTED, ack_received2, clr_cntAcc, clr_counter_reg,
       counterAccumulation_n_30, counterAccumulation_n_32,
       counterAccumulation_n_34, counterAccumulation_n_36;
  wire counterAccumulation_n_38, counterAccumulation_n_40,
       counterAccumulation_n_42, counterAccumulation_n_44,
       counterAccumulation_n_46, counterAccumulation_n_48,
       counterAccumulation_n_50, counterAccumulation_n_52;
  wire counterAccumulation_n_54, counterAccumulation_n_56,
       counterAccumulation_n_58, counterAccumulation_n_60,
       counterAccumulation_n_62, counterAccumulation_n_64,
       counterAccumulation_n_66, counterAccumulation_n_68;
  wire counterAccumulation_n_70, counterAccumulation_n_72,
       counterAccumulation_n_166, counterAccumulation_n_167,
       counterAccumulation_n_168, counterAccumulation_n_169,
       counterAccumulation_n_170, counterAccumulation_n_171;
  wire counterAccumulation_n_173, counterAccumulation_n_174,
       counterAccumulation_n_175, counterAccumulation_n_176,
       counterAccumulation_n_177, counterAccumulation_n_178,
       counterAccumulation_n_179, counterAccumulation_n_180;
  wire counterAccumulation_n_181, counterAccumulation_n_182,
       counterAccumulation_n_183, counterAccumulation_n_184,
       counterAccumulation_n_185, counterAccumulation_n_186,
       counterAccumulation_n_187, loadedVal;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8, n_10, n_11, n_12, n_13, n_14, n_15, n_16;
  wire n_17, n_18, n_19, n_20, n_21, n_22, n_23, n_24;
  wire n_25, n_26, n_27, n_28, n_29, n_30, n_31, n_32;
  wire n_33, n_34, n_35, n_36, n_37, n_38, n_39, n_40;
  wire n_41, n_42, n_43, n_44, n_45, n_46, n_47, n_48;
  wire n_49, n_50, n_51, n_52, n_53, n_54, n_55, n_56;
  wire n_57, n_58, n_59, n_60, n_61, n_62, n_63, n_64;
  wire n_65, n_66, n_67, n_68, n_69, n_70, n_71, n_73;
  wire n_74, n_76, n_77, n_78, n_79, n_80, n_82, n_83;
  wire n_85, n_86, n_87, n_88, n_89, n_90, n_91, n_92;
  wire n_93, n_94, n_95, n_97, n_98, n_99, n_100, n_101;
  wire n_102, n_103, n_104, n_105, n_106, n_107, n_108, n_109;
  wire n_110, n_111, n_112, n_113, n_114, n_116, n_117, n_119;
  wire n_120, n_121, n_122, n_124, n_125, n_126, n_127, n_128;
  wire n_129, n_131, n_132, n_133, n_134, n_135, n_136, n_137;
  wire n_138, n_139, n_140, n_141, n_142, n_143, n_144, n_145;
  wire n_146, n_147, n_148, n_149, n_150, n_151, n_152, n_153;
  wire n_154, n_155, n_156, n_157, n_158, n_159, n_160, n_161;
  wire n_162, n_163, n_164, n_165, n_166, n_167, n_168, n_169;
  wire n_170, n_171, n_172, n_173, n_174, n_175, n_176, n_177;
  wire n_178, n_179, n_180, n_181, n_182, n_183, n_184, n_185;
  wire n_186, n_187, n_188, n_189, n_190, n_191, n_192, n_193;
  wire n_194, n_195, n_196, n_197, n_198, n_199, n_200, n_201;
  wire n_202, n_203, n_204, n_205, n_207, n_208, n_209, n_210;
  wire n_211, n_212, n_213, n_214, n_215, n_216, n_217, n_218;
  wire n_219, n_220, n_221, n_222, n_223, n_224, n_225, n_226;
  wire n_227, n_228, n_229, n_230, n_231, n_232, n_233, n_234;
  wire n_235, n_236, n_237, n_238, n_239, n_240, n_241, n_242;
  wire n_243, n_244, n_245, n_246, n_247, n_248, n_249, n_250;
  wire n_251, n_252, n_253, n_254, n_255, n_256, n_257, n_258;
  wire n_259, n_260, n_261, n_262, n_263, n_264, n_265, n_266;
  wire n_267, n_268, n_269, n_270, n_271, n_272, n_273, n_274;
  wire n_275, n_276, n_277, n_278, n_279, n_280, n_284, n_285;
  wire n_286, n_287, n_288, n_289, n_290, n_291, n_292, n_293;
  wire n_294, n_295, n_296, n_346, n_347, n_348, n_349, n_350;
  wire sentAddr;
  assign stop_osc[4] = 1'b1;
  increment_unsigned_51_52 counterAccumulation_inc_add_34_11_1(.A
       ({timingCounterVal[22], counterAccumulation_n_187,
       counterAccumulation_n_186, counterAccumulation_n_185,
       counterAccumulation_n_184, counterAccumulation_n_183,
       counterAccumulation_n_182, counterAccumulation_n_181,
       counterAccumulation_n_180, counterAccumulation_n_179,
       counterAccumulation_n_178, counterAccumulation_n_177,
       counterAccumulation_n_176, counterAccumulation_n_175,
       counterAccumulation_n_174, counterAccumulation_n_173,
       timingCounterVal[6], counterAccumulation_n_171,
       counterAccumulation_n_170, counterAccumulation_n_169,
       counterAccumulation_n_168, counterAccumulation_n_167,
       counterAccumulation_n_166}), .CI (1'b1), .Z
       ({counterAccumulation_n_72, counterAccumulation_n_70,
       counterAccumulation_n_68, counterAccumulation_n_66,
       counterAccumulation_n_64, counterAccumulation_n_62,
       counterAccumulation_n_60, counterAccumulation_n_58,
       counterAccumulation_n_56, counterAccumulation_n_54,
       counterAccumulation_n_52, counterAccumulation_n_50,
       counterAccumulation_n_48, counterAccumulation_n_46,
       counterAccumulation_n_44, counterAccumulation_n_42,
       counterAccumulation_n_40, counterAccumulation_n_38,
       counterAccumulation_n_36, counterAccumulation_n_34,
       counterAccumulation_n_32, counterAccumulation_n_30,
       UNCONNECTED}));
  INVX1 g2656(.A (clr_cntAcc), .Y (n_286));
  OR2X2 g2810(.A (n_296), .B (rst), .Y (clr_counter));
  NAND3X1 g2811(.A (n_294), .B (n_295), .C (n_291), .Y (n_296));
  AOI22X1 g2812(.A (startupWaitReg[2]), .B (n_293), .C (n_288), .D
       (startupWaitReg[3]), .Y (n_295));
  AOI22X1 g2813(.A (startupWaitReg[4]), .B (n_292), .C
       (startupWaitReg[1]), .D (n_290), .Y (n_294));
  INVX1 g2814(.A (startupWaitReg[4]), .Y (n_293));
  DFFSR \startupWaitReg_reg[4] (.R (n_286), .S (1'b1), .CLK (clk), .D
       (startupWaitReg[3]), .Q (startupWaitReg[4]));
  INVX1 g2816(.A (startupWaitReg[3]), .Y (n_292));
  DFFSR \startupWaitReg_reg[3] (.R (n_286), .S (1'b1), .CLK (clk), .D
       (startupWaitReg[2]), .Q (startupWaitReg[3]));
  AOI21X1 g2818(.A (startupWaitReg[0]), .B (n_289), .C
       (clr_counter_reg), .Y (n_291));
  INVX1 g2819(.A (startupWaitReg[2]), .Y (n_290));
  DFFSR \startupWaitReg_reg[2] (.R (n_286), .S (1'b1), .CLK (clk), .D
       (startupWaitReg[1]), .Q (startupWaitReg[2]));
  INVX1 g2821(.A (startupWaitReg[1]), .Y (n_289));
  DFFSR \startupWaitReg_reg[1] (.R (n_286), .S (1'b1), .CLK (clk), .D
       (startupWaitReg[0]), .Q (startupWaitReg[1]));
  INVX1 g2823(.A (startupWaitReg[0]), .Y (n_288));
  DFFSR \startupWaitReg_reg[0] (.R (n_286), .S (1'b1), .CLK (clk), .D
       (1'b1), .Q (startupWaitReg[0]));
  NAND2X1 g2825(.A (px_addr[1]), .B (n_285), .Y (stop_osc[3]));
  OR2X1 g2826(.A (n_287), .B (px_addr[1]), .Y (stop_osc[0]));
  NAND2X1 g2827(.A (n_284), .B (n_285), .Y (stop_osc[1]));
  OR2X1 g2828(.A (n_287), .B (n_284), .Y (stop_osc[2]));
  NAND2X1 g2829(.A (n_18), .B (en_osc_out), .Y (n_287));
  NAND2X1 g2831(.A (n_11), .B (en_osc_out), .Y (clr_cntAcc));
  AND2X2 g2833(.A (en_osc_out), .B (px_addr[0]), .Y (n_285));
  INVX2 g2834(.A (px_addr[1]), .Y (n_284));
  INVX2 g2835(.A (rst), .Y (n_11));
  DFFSR ack_received2_reg(.R (n_11), .S (1'b1), .CLK (clk), .D
       (ack_received), .Q (ack_received2));
  DFFPOSX1 clr_counter_reg_reg(.CLK (clk), .D (n_136), .Q
       (clr_counter_reg));
  DFFSR \counterAccumulation_q_reg[0] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (n_25), .Q (counterAccumulation_n_166));
  DFFSR \counterAccumulation_q_reg[10] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_48), .Q
       (counterAccumulation_n_176));
  DFFSR \counterAccumulation_q_reg[11] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_50), .Q
       (counterAccumulation_n_177));
  DFFSR \counterAccumulation_q_reg[12] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_52), .Q
       (counterAccumulation_n_178));
  DFFSR \counterAccumulation_q_reg[13] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_54), .Q
       (counterAccumulation_n_179));
  DFFSR \counterAccumulation_q_reg[14] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_56), .Q
       (counterAccumulation_n_180));
  DFFSR \counterAccumulation_q_reg[15] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_58), .Q
       (counterAccumulation_n_181));
  DFFSR \counterAccumulation_q_reg[16] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_60), .Q
       (counterAccumulation_n_182));
  DFFSR \counterAccumulation_q_reg[17] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_62), .Q
       (counterAccumulation_n_183));
  DFFSR \counterAccumulation_q_reg[18] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_64), .Q
       (counterAccumulation_n_184));
  DFFSR \counterAccumulation_q_reg[19] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_66), .Q
       (counterAccumulation_n_185));
  DFFSR \counterAccumulation_q_reg[1] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_30), .Q
       (counterAccumulation_n_167));
  DFFSR \counterAccumulation_q_reg[20] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_68), .Q
       (counterAccumulation_n_186));
  DFFSR \counterAccumulation_q_reg[21] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_70), .Q
       (counterAccumulation_n_187));
  DFFSR \counterAccumulation_q_reg[22] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_72), .Q (timingCounterVal[22]));
  DFFSR \counterAccumulation_q_reg[2] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_32), .Q
       (counterAccumulation_n_168));
  DFFSR \counterAccumulation_q_reg[3] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_34), .Q
       (counterAccumulation_n_169));
  DFFSR \counterAccumulation_q_reg[4] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_36), .Q
       (counterAccumulation_n_170));
  DFFSR \counterAccumulation_q_reg[5] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_38), .Q
       (counterAccumulation_n_171));
  DFFSR \counterAccumulation_q_reg[6] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_40), .Q (timingCounterVal[6]));
  DFFSR \counterAccumulation_q_reg[7] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_42), .Q
       (counterAccumulation_n_173));
  DFFSR \counterAccumulation_q_reg[8] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_44), .Q
       (counterAccumulation_n_174));
  DFFSR \counterAccumulation_q_reg[9] (.R (n_286), .S (1'b1), .CLK
       (clk), .D (counterAccumulation_n_46), .Q
       (counterAccumulation_n_175));
  DFFSR \current_state_reg[0] (.R (n_11), .S (1'b1), .CLK (clk), .D
       (n_244), .Q (current_state[0]));
  DFFSR \current_state_reg[1] (.R (n_11), .S (1'b1), .CLK (clk), .D
       (n_243), .Q (current_state[1]));
  DFFSR \current_state_reg[2] (.R (n_11), .S (1'b1), .CLK (clk), .D
       (n_348), .Q (current_state[2]));
  DFFSR \current_state_reg[3] (.R (n_11), .S (1'b1), .CLK (clk), .D
       (n_204), .Q (current_state[3]));
  DFFSR \doneAccumulatingRegAddr_reg[0] (.R (n_11), .S (1'b1), .CLK
       (clk), .D (timingCounterVal[6]), .Q
       (doneAccumulatingRegAddr[0]));
  DFFSR \doneAccumulatingRegAddr_reg[1] (.R (n_11), .S (1'b1), .CLK
       (clk), .D (doneAccumulatingRegAddr[0]), .Q
       (doneAccumulatingRegAddr[1]));
  DFFSR \doneAccumulatingReg_reg[0] (.R (n_11), .S (1'b1), .CLK (clk),
       .D (timingCounterVal[22]), .Q (doneAccumulatingReg[0]));
  DFFSR \doneAccumulatingReg_reg[1] (.R (n_11), .S (1'b1), .CLK (clk),
       .D (doneAccumulatingReg[0]), .Q (doneAccumulatingReg[1]));
  DFFPOSX1 drdy_reg_reg(.CLK (clk), .D (n_205), .Q (drdy));
  DFFPOSX1 en_osc_reg(.CLK (clk), .D (n_129), .Q (en_osc_out));
  DFFPOSX1 loadedVal_reg(.CLK (clk), .D (n_242), .Q (loadedVal));
  DFFPOSX1 \px_addr_reg_reg[0] (.CLK (clk), .D (n_122), .Q
       (px_addr[0]));
  DFFPOSX1 \px_addr_reg_reg[1] (.CLK (clk), .D (n_201), .Q
       (px_addr[1]));
  DFFPOSX1 \samp_track_reg[0] (.CLK (clk), .D (n_346), .Q
       (samp_track[0]));
  DFFPOSX1 \samp_track_reg[1] (.CLK (clk), .D (n_135), .Q
       (samp_track[1]));
  DFFPOSX1 \samp_track_reg[2] (.CLK (clk), .D (n_208), .Q
       (samp_track[2]));
  DFFPOSX1 \sampleOut_reg[0] (.CLK (clk), .D (n_252), .Q
       (sampleOut[0]));
  DFFPOSX1 \sampleOut_reg[10] (.CLK (clk), .D (n_250), .Q
       (sampleOut[10]));
  DFFPOSX1 \sampleOut_reg[11] (.CLK (clk), .D (n_251), .Q
       (sampleOut[11]));
  DFFPOSX1 \sampleOut_reg[12] (.CLK (clk), .D (n_277), .Q
       (sampleOut[12]));
  DFFPOSX1 \sampleOut_reg[13] (.CLK (clk), .D (n_249), .Q
       (sampleOut[13]));
  DFFPOSX1 \sampleOut_reg[14] (.CLK (clk), .D (n_276), .Q
       (sampleOut[14]));
  DFFPOSX1 \sampleOut_reg[15] (.CLK (clk), .D (n_275), .Q
       (sampleOut[15]));
  DFFPOSX1 \sampleOut_reg[16] (.CLK (clk), .D (n_274), .Q
       (sampleOut[16]));
  DFFPOSX1 \sampleOut_reg[17] (.CLK (clk), .D (n_273), .Q
       (sampleOut[17]));
  DFFPOSX1 \sampleOut_reg[18] (.CLK (clk), .D (n_272), .Q
       (sampleOut[18]));
  DFFPOSX1 \sampleOut_reg[19] (.CLK (clk), .D (n_271), .Q
       (sampleOut[19]));
  DFFPOSX1 \sampleOut_reg[1] (.CLK (clk), .D (n_270), .Q
       (sampleOut[1]));
  DFFPOSX1 \sampleOut_reg[20] (.CLK (clk), .D (n_280), .Q
       (sampleOut[20]));
  DFFPOSX1 \sampleOut_reg[21] (.CLK (clk), .D (n_269), .Q
       (sampleOut[21]));
  DFFPOSX1 \sampleOut_reg[22] (.CLK (clk), .D (n_268), .Q
       (sampleOut[22]));
  DFFPOSX1 \sampleOut_reg[23] (.CLK (clk), .D (n_267), .Q
       (sampleOut[23]));
  DFFPOSX1 \sampleOut_reg[24] (.CLK (clk), .D (n_266), .Q
       (sampleOut[24]));
  DFFPOSX1 \sampleOut_reg[25] (.CLK (clk), .D (n_265), .Q
       (sampleOut[25]));
  DFFPOSX1 \sampleOut_reg[26] (.CLK (clk), .D (n_264), .Q
       (sampleOut[26]));
  DFFPOSX1 \sampleOut_reg[27] (.CLK (clk), .D (n_263), .Q
       (sampleOut[27]));
  DFFPOSX1 \sampleOut_reg[28] (.CLK (clk), .D (n_279), .Q
       (sampleOut[28]));
  DFFPOSX1 \sampleOut_reg[29] (.CLK (clk), .D (n_262), .Q
       (sampleOut[29]));
  DFFPOSX1 \sampleOut_reg[2] (.CLK (clk), .D (n_261), .Q
       (sampleOut[2]));
  DFFPOSX1 \sampleOut_reg[30] (.CLK (clk), .D (n_260), .Q
       (sampleOut[30]));
  DFFPOSX1 \sampleOut_reg[31] (.CLK (clk), .D (n_259), .Q
       (sampleOut[31]));
  DFFPOSX1 \sampleOut_reg[3] (.CLK (clk), .D (n_258), .Q
       (sampleOut[3]));
  DFFPOSX1 \sampleOut_reg[4] (.CLK (clk), .D (n_278), .Q
       (sampleOut[4]));
  DFFPOSX1 \sampleOut_reg[5] (.CLK (clk), .D (n_257), .Q
       (sampleOut[5]));
  DFFPOSX1 \sampleOut_reg[6] (.CLK (clk), .D (n_256), .Q
       (sampleOut[6]));
  DFFPOSX1 \sampleOut_reg[7] (.CLK (clk), .D (n_255), .Q
       (sampleOut[7]));
  DFFPOSX1 \sampleOut_reg[8] (.CLK (clk), .D (n_254), .Q
       (sampleOut[8]));
  DFFPOSX1 \sampleOut_reg[9] (.CLK (clk), .D (n_253), .Q
       (sampleOut[9]));
  DFFPOSX1 sentAddr_reg(.CLK (clk), .D (n_103), .Q (sentAddr));
  NAND3X1 g5935(.A (n_246), .B (n_185), .C (n_186), .Y (n_280));
  NAND3X1 g5936(.A (n_248), .B (n_169), .C (n_170), .Y (n_279));
  NAND3X1 g5937(.A (n_247), .B (n_157), .C (n_158), .Y (n_278));
  NAND3X1 g5938(.A (n_245), .B (n_139), .C (n_140), .Y (n_277));
  NAND3X1 g5940(.A (n_199), .B (n_200), .C (n_236), .Y (n_276));
  NAND3X1 g5941(.A (n_197), .B (n_198), .C (n_235), .Y (n_275));
  NAND3X1 g5942(.A (n_195), .B (n_196), .C (n_234), .Y (n_274));
  NAND3X1 g5943(.A (n_193), .B (n_194), .C (n_233), .Y (n_273));
  NAND3X1 g5944(.A (n_191), .B (n_192), .C (n_232), .Y (n_272));
  NAND3X1 g5945(.A (n_189), .B (n_190), .C (n_231), .Y (n_271));
  NAND3X1 g5946(.A (n_187), .B (n_188), .C (n_230), .Y (n_270));
  NAND3X1 g5947(.A (n_183), .B (n_184), .C (n_229), .Y (n_269));
  NAND3X1 g5948(.A (n_181), .B (n_182), .C (n_228), .Y (n_268));
  NAND3X1 g5949(.A (n_179), .B (n_180), .C (n_227), .Y (n_267));
  NAND3X1 g5950(.A (n_177), .B (n_178), .C (n_226), .Y (n_266));
  NAND3X1 g5951(.A (n_175), .B (n_176), .C (n_225), .Y (n_265));
  NAND3X1 g5952(.A (n_173), .B (n_174), .C (n_224), .Y (n_264));
  NAND3X1 g5953(.A (n_171), .B (n_172), .C (n_223), .Y (n_263));
  NAND3X1 g5954(.A (n_167), .B (n_168), .C (n_222), .Y (n_262));
  NAND3X1 g5955(.A (n_165), .B (n_166), .C (n_221), .Y (n_261));
  NAND3X1 g5956(.A (n_163), .B (n_164), .C (n_220), .Y (n_260));
  NAND3X1 g5957(.A (n_161), .B (n_162), .C (n_219), .Y (n_259));
  NAND3X1 g5958(.A (n_159), .B (n_160), .C (n_218), .Y (n_258));
  NAND3X1 g5959(.A (n_155), .B (n_156), .C (n_217), .Y (n_257));
  NAND3X1 g5960(.A (n_153), .B (n_154), .C (n_216), .Y (n_256));
  NAND3X1 g5961(.A (n_151), .B (n_152), .C (n_215), .Y (n_255));
  NAND3X1 g5962(.A (n_149), .B (n_150), .C (n_214), .Y (n_254));
  NAND3X1 g5963(.A (n_147), .B (n_148), .C (n_213), .Y (n_253));
  NAND3X1 g5964(.A (n_145), .B (n_146), .C (n_212), .Y (n_252));
  NAND3X1 g5965(.A (n_141), .B (n_142), .C (n_210), .Y (n_251));
  NAND3X1 g5966(.A (n_143), .B (n_144), .C (n_211), .Y (n_250));
  NAND3X1 g5967(.A (n_137), .B (n_138), .C (n_209), .Y (n_249));
  AOI21X1 g5971(.A (counter_val4[28]), .B (n_120), .C (n_239), .Y
       (n_248));
  AOI21X1 g5972(.A (counter_val4[4]), .B (n_120), .C (n_238), .Y
       (n_247));
  AOI21X1 g5973(.A (counter_val3[20]), .B (n_3), .C (n_240), .Y
       (n_246));
  AOI21X1 g5974(.A (counter_val3[12]), .B (n_111), .C (n_237), .Y
       (n_245));
  OAI21X1 g5975(.A (n_70), .B (n_51), .C (n_241), .Y (n_244));
  NAND3X1 g5982(.A (n_87), .B (n_90), .C (n_125), .Y (n_243));
  NAND2X1 g5983(.A (n_101), .B (n_202), .Y (n_242));
  AOI21X1 g5984(.A (n_78), .B (n_77), .C (n_207), .Y (n_241));
  OAI21X1 g5985(.A (n_12), .B (n_133), .C (n_97), .Y (n_240));
  OAI21X1 g5986(.A (n_17), .B (n_133), .C (n_97), .Y (n_239));
  OAI21X1 g5987(.A (n_20), .B (n_133), .C (n_97), .Y (n_238));
  OAI21X1 g5988(.A (n_16), .B (n_133), .C (n_97), .Y (n_237));
  AOI22X1 g5989(.A (sampleOut[14]), .B (n_134), .C (counter_val1[14]),
       .D (n_5), .Y (n_236));
  AOI22X1 g5990(.A (sampleOut[15]), .B (n_134), .C (counter_val2[15]),
       .D (n_119), .Y (n_235));
  AOI22X1 g5991(.A (sampleOut[16]), .B (n_134), .C (counter_val1[16]),
       .D (n_5), .Y (n_234));
  AOI22X1 g5992(.A (sampleOut[17]), .B (n_134), .C (counter_val1[17]),
       .D (n_110), .Y (n_233));
  AOI22X1 g5993(.A (sampleOut[18]), .B (n_134), .C (counter_val1[18]),
       .D (n_110), .Y (n_232));
  AOI22X1 g5994(.A (sampleOut[19]), .B (n_134), .C (counter_val1[19]),
       .D (n_110), .Y (n_231));
  AOI22X1 g5995(.A (sampleOut[1]), .B (n_134), .C (counter_val1[1]), .D
       (n_110), .Y (n_230));
  AOI22X1 g5996(.A (sampleOut[21]), .B (n_134), .C (counter_val1[21]),
       .D (n_5), .Y (n_229));
  AOI22X1 g5997(.A (sampleOut[22]), .B (n_134), .C (counter_val2[22]),
       .D (n_119), .Y (n_228));
  AOI22X1 g5998(.A (sampleOut[23]), .B (n_134), .C (counter_val2[23]),
       .D (n_1), .Y (n_227));
  AOI22X1 g5999(.A (sampleOut[24]), .B (n_134), .C (counter_val1[24]),
       .D (n_110), .Y (n_226));
  AOI22X1 g6000(.A (sampleOut[25]), .B (n_134), .C (counter_val2[25]),
       .D (n_1), .Y (n_225));
  AOI22X1 g6001(.A (sampleOut[26]), .B (n_134), .C (counter_val1[26]),
       .D (n_110), .Y (n_224));
  AOI22X1 g6002(.A (sampleOut[27]), .B (n_134), .C (counter_val2[27]),
       .D (n_119), .Y (n_223));
  AOI22X1 g6003(.A (sampleOut[29]), .B (n_134), .C (counter_val1[29]),
       .D (n_110), .Y (n_222));
  AOI22X1 g6004(.A (sampleOut[2]), .B (n_134), .C (counter_val1[2]), .D
       (n_5), .Y (n_221));
  AOI22X1 g6005(.A (sampleOut[30]), .B (n_134), .C (counter_val1[30]),
       .D (n_5), .Y (n_220));
  AOI22X1 g6006(.A (sampleOut[31]), .B (n_134), .C (counter_val1[31]),
       .D (n_5), .Y (n_219));
  AOI22X1 g6007(.A (sampleOut[3]), .B (n_134), .C (counter_val1[3]), .D
       (n_110), .Y (n_218));
  AOI22X1 g6008(.A (sampleOut[5]), .B (n_134), .C (counter_val1[5]), .D
       (n_5), .Y (n_217));
  AOI22X1 g6009(.A (sampleOut[6]), .B (n_134), .C (counter_val1[6]), .D
       (n_110), .Y (n_216));
  AOI22X1 g6010(.A (sampleOut[7]), .B (n_134), .C (counter_val1[7]), .D
       (n_110), .Y (n_215));
  AOI22X1 g6011(.A (sampleOut[8]), .B (n_134), .C (counter_val2[8]), .D
       (n_1), .Y (n_214));
  AOI22X1 g6012(.A (sampleOut[9]), .B (n_134), .C (counter_val1[9]), .D
       (n_110), .Y (n_213));
  AOI22X1 g6013(.A (sampleOut[0]), .B (n_134), .C (counter_val1[0]), .D
       (n_5), .Y (n_212));
  AOI22X1 g6014(.A (sampleOut[10]), .B (n_134), .C (counter_val1[10]),
       .D (n_5), .Y (n_211));
  AOI22X1 g6015(.A (sampleOut[11]), .B (n_134), .C (counter_val1[11]),
       .D (n_5), .Y (n_210));
  AOI22X1 g6016(.A (sampleOut[13]), .B (n_134), .C (counter_val2[13]),
       .D (n_119), .Y (n_209));
  OAI21X1 g6017(.A (n_68), .B (n_62), .C (n_203), .Y (n_208));
  OR2X1 g6021(.A (n_106), .B (n_126), .Y (n_207));
  NAND3X1 g6023(.A (n_108), .B (n_90), .C (n_91), .Y (n_205));
  NAND2X1 g6024(.A (n_107), .B (n_124), .Y (n_204));
  OAI21X1 g6025(.A (n_67), .B (n_109), .C (samp_track[2]), .Y (n_203));
  OAI21X1 g6026(.A (n_71), .B (n_113), .C (loadedVal), .Y (n_202));
  OAI21X1 g6027(.A (1'b0), .B (n_85), .C (n_128), .Y (n_201));
  AOI22X1 g6028(.A (counter_val4[14]), .B (n_7), .C (counter_val5[14]),
       .D (n_8), .Y (n_200));
  AOI22X1 g6029(.A (counter_val2[14]), .B (n_119), .C
       (counter_val3[14]), .D (n_3), .Y (n_199));
  AOI22X1 g6030(.A (counter_val1[15]), .B (n_5), .C (counter_val5[15]),
       .D (n_8), .Y (n_198));
  AOI22X1 g6031(.A (counter_val3[15]), .B (n_111), .C
       (counter_val4[15]), .D (n_120), .Y (n_197));
  AOI22X1 g6032(.A (counter_val2[16]), .B (n_1), .C (counter_val5[16]),
       .D (n_8), .Y (n_196));
  AOI22X1 g6033(.A (counter_val3[16]), .B (n_3), .C (counter_val4[16]),
       .D (n_120), .Y (n_195));
  AOI22X1 g6034(.A (counter_val4[17]), .B (n_120), .C
       (counter_val5[17]), .D (n_8), .Y (n_194));
  AOI22X1 g6035(.A (counter_val2[17]), .B (n_1), .C (counter_val3[17]),
       .D (n_3), .Y (n_193));
  AOI22X1 g6036(.A (counter_val3[18]), .B (n_3), .C (counter_val5[18]),
       .D (n_8), .Y (n_192));
  AOI22X1 g6037(.A (counter_val2[18]), .B (n_119), .C
       (counter_val4[18]), .D (n_7), .Y (n_191));
  AOI22X1 g6038(.A (counter_val2[19]), .B (n_119), .C
       (counter_val4[19]), .D (n_120), .Y (n_190));
  AOI22X1 g6039(.A (counter_val3[19]), .B (n_3), .C (counter_val5[19]),
       .D (n_8), .Y (n_189));
  AOI22X1 g6040(.A (counter_val2[1]), .B (n_119), .C (counter_val5[1]),
       .D (n_8), .Y (n_188));
  AOI22X1 g6041(.A (counter_val3[1]), .B (n_111), .C (counter_val4[1]),
       .D (n_120), .Y (n_187));
  AOI22X1 g6042(.A (counter_val2[20]), .B (n_1), .C (counter_val4[20]),
       .D (n_7), .Y (n_186));
  AOI22X1 g6043(.A (counter_val1[20]), .B (n_110), .C
       (counter_val5[20]), .D (n_8), .Y (n_185));
  AOI22X1 g6044(.A (counter_val4[21]), .B (n_7), .C (counter_val5[21]),
       .D (n_8), .Y (n_184));
  AOI22X1 g6045(.A (counter_val2[21]), .B (n_1), .C (counter_val3[21]),
       .D (n_111), .Y (n_183));
  AOI22X1 g6046(.A (counter_val1[22]), .B (n_5), .C (counter_val3[22]),
       .D (n_3), .Y (n_182));
  AOI22X1 g6047(.A (counter_val4[22]), .B (n_7), .C (counter_val5[22]),
       .D (n_8), .Y (n_181));
  AOI22X1 g6048(.A (counter_val1[23]), .B (n_110), .C
       (counter_val5[23]), .D (n_8), .Y (n_180));
  AOI22X1 g6049(.A (counter_val3[23]), .B (n_111), .C
       (counter_val4[23]), .D (n_120), .Y (n_179));
  AOI22X1 g6050(.A (counter_val3[24]), .B (n_3), .C (counter_val5[24]),
       .D (n_8), .Y (n_178));
  AOI22X1 g6051(.A (counter_val2[24]), .B (n_119), .C
       (counter_val4[24]), .D (n_7), .Y (n_177));
  AOI22X1 g6052(.A (counter_val1[25]), .B (n_110), .C
       (counter_val5[25]), .D (n_8), .Y (n_176));
  AOI22X1 g6053(.A (counter_val3[25]), .B (n_3), .C (counter_val4[25]),
       .D (n_7), .Y (n_175));
  AOI22X1 g6054(.A (counter_val3[26]), .B (n_111), .C
       (counter_val5[26]), .D (n_8), .Y (n_174));
  AOI22X1 g6055(.A (counter_val2[26]), .B (n_119), .C
       (counter_val4[26]), .D (n_120), .Y (n_173));
  AOI22X1 g6056(.A (counter_val1[27]), .B (n_110), .C
       (counter_val3[27]), .D (n_111), .Y (n_172));
  AOI22X1 g6057(.A (counter_val4[27]), .B (n_120), .C
       (counter_val5[27]), .D (n_8), .Y (n_171));
  AOI22X1 g6058(.A (counter_val2[28]), .B (n_119), .C
       (counter_val3[28]), .D (n_3), .Y (n_170));
  AOI22X1 g6059(.A (counter_val1[28]), .B (n_5), .C (counter_val5[28]),
       .D (n_8), .Y (n_169));
  AOI22X1 g6060(.A (counter_val4[29]), .B (n_120), .C
       (counter_val5[29]), .D (n_8), .Y (n_168));
  AOI22X1 g6061(.A (counter_val2[29]), .B (n_119), .C
       (counter_val3[29]), .D (n_111), .Y (n_167));
  AOI22X1 g6062(.A (counter_val2[2]), .B (n_119), .C (counter_val5[2]),
       .D (n_8), .Y (n_166));
  AOI22X1 g6063(.A (counter_val3[2]), .B (n_111), .C (counter_val4[2]),
       .D (n_7), .Y (n_165));
  AOI22X1 g6064(.A (counter_val2[30]), .B (n_119), .C
       (counter_val5[30]), .D (n_8), .Y (n_164));
  AOI22X1 g6065(.A (counter_val3[30]), .B (n_111), .C
       (counter_val4[30]), .D (n_120), .Y (n_163));
  AOI22X1 g6066(.A (counter_val3[31]), .B (n_111), .C
       (counter_val4[31]), .D (n_120), .Y (n_162));
  AOI22X1 g6067(.A (counter_val2[31]), .B (n_1), .C (counter_val5[31]),
       .D (n_8), .Y (n_161));
  AOI22X1 g6068(.A (counter_val2[3]), .B (n_1), .C (counter_val5[3]),
       .D (n_8), .Y (n_160));
  AOI22X1 g6069(.A (counter_val3[3]), .B (n_3), .C (counter_val4[3]),
       .D (n_7), .Y (n_159));
  AOI22X1 g6070(.A (counter_val2[4]), .B (n_1), .C (counter_val3[4]),
       .D (n_111), .Y (n_158));
  AOI22X1 g6071(.A (counter_val1[4]), .B (n_110), .C (counter_val5[4]),
       .D (n_8), .Y (n_157));
  AOI22X1 g6072(.A (counter_val2[5]), .B (n_1), .C (counter_val5[5]),
       .D (n_8), .Y (n_156));
  AOI22X1 g6073(.A (counter_val3[5]), .B (n_111), .C (counter_val4[5]),
       .D (n_120), .Y (n_155));
  AOI22X1 g6074(.A (counter_val4[6]), .B (n_7), .C (counter_val5[6]),
       .D (n_8), .Y (n_154));
  AOI22X1 g6075(.A (counter_val2[6]), .B (n_1), .C (counter_val3[6]),
       .D (n_111), .Y (n_153));
  AOI22X1 g6076(.A (counter_val2[7]), .B (n_1), .C (counter_val5[7]),
       .D (n_8), .Y (n_152));
  AOI22X1 g6077(.A (counter_val3[7]), .B (n_3), .C (counter_val4[7]),
       .D (n_7), .Y (n_151));
  AOI22X1 g6078(.A (counter_val1[8]), .B (n_5), .C (counter_val4[8]),
       .D (n_7), .Y (n_150));
  AOI22X1 g6079(.A (counter_val3[8]), .B (n_3), .C (counter_val5[8]),
       .D (n_8), .Y (n_149));
  AOI22X1 g6080(.A (counter_val4[9]), .B (n_7), .C (counter_val5[9]),
       .D (n_8), .Y (n_148));
  AOI22X1 g6081(.A (counter_val2[9]), .B (n_119), .C (counter_val3[9]),
       .D (n_111), .Y (n_147));
  AOI22X1 g6082(.A (counter_val2[0]), .B (n_119), .C (counter_val5[0]),
       .D (n_8), .Y (n_146));
  AOI22X1 g6083(.A (counter_val3[0]), .B (n_111), .C (counter_val4[0]),
       .D (n_7), .Y (n_145));
  AOI22X1 g6084(.A (counter_val4[10]), .B (n_7), .C (counter_val5[10]),
       .D (n_8), .Y (n_144));
  AOI22X1 g6085(.A (counter_val2[10]), .B (n_1), .C (counter_val3[10]),
       .D (n_3), .Y (n_143));
  AOI22X1 g6086(.A (counter_val3[11]), .B (n_3), .C (counter_val5[11]),
       .D (n_8), .Y (n_142));
  AOI22X1 g6087(.A (counter_val2[11]), .B (n_1), .C (counter_val4[11]),
       .D (n_7), .Y (n_141));
  AOI22X1 g6088(.A (counter_val2[12]), .B (n_1), .C (counter_val4[12]),
       .D (n_120), .Y (n_140));
  AOI22X1 g6089(.A (counter_val1[12]), .B (n_5), .C (counter_val5[12]),
       .D (n_8), .Y (n_139));
  AOI22X1 g6090(.A (counter_val1[13]), .B (n_5), .C (counter_val5[13]),
       .D (n_8), .Y (n_138));
  AOI22X1 g6091(.A (counter_val3[13]), .B (n_3), .C (counter_val4[13]),
       .D (n_120), .Y (n_137));
  OAI21X1 g6092(.A (n_34), .B (n_41), .C (n_131), .Y (n_136));
  OAI21X1 g6093(.A (n_47), .B (n_62), .C (n_132), .Y (n_135));
  NAND2X1 g6095(.A (samp_track[1]), .B (n_109), .Y (n_132));
  OR2X2 g6096(.A (n_350), .B (n_112), .Y (n_134));
  NOR2X1 g6097(.A (n_74), .B (n_105), .Y (n_133));
  OAI21X1 g6098(.A (n_73), .B (n_86), .C (clr_counter_reg), .Y (n_131));
  NAND2X1 g6100(.A (n_104), .B (n_116), .Y (n_129));
  OAI21X1 g6101(.A (n_80), .B (n_89), .C (px_addr[1]), .Y (n_128));
  OAI21X1 g6102(.A (n_22), .B (n_100), .C (n_64), .Y (n_127));
  OAI21X1 g6103(.A (current_state[3]), .B (n_44), .C (n_114), .Y
       (n_126));
  OAI21X1 g6104(.A (n_36), .B (n_99), .C (current_state[1]), .Y
       (n_125));
  AOI21X1 g6105(.A (n_79), .B (n_77), .C (n_102), .Y (n_124));
  OAI21X1 g6107(.A (n_64), .B (n_27), .C (n_117), .Y (n_122));
  INVX4 g6109(.A (n_121), .Y (n_8));
  NAND2X1 g6111(.A (px_addr[0]), .B (n_89), .Y (n_117));
  OAI21X1 g6112(.A (n_52), .B (n_66), .C (en_osc_out), .Y (n_116));
  NAND2X1 g6113(.A (samp_track[2]), .B (n_98), .Y (n_121));
  AND2X2 g6114(.A (n_98), .B (n_49), .Y (n_120));
  NAND3X1 g6116(.A (doneAccumulatingReg[1]), .B
       (doneAccumulatingReg[0]), .C (n_30), .Y (n_114));
  AND2X2 g6117(.A (n_98), .B (n_46), .Y (n_119));
  OAI21X1 g6118(.A (current_state[0]), .B (n_58), .C (n_39), .Y
       (n_113));
  NAND2X1 g6119(.A (n_63), .B (n_82), .Y (n_112));
  OAI21X1 g6120(.A (n_60), .B (n_54), .C (drdy), .Y (n_108));
  NAND3X1 g6121(.A (current_state[0]), .B (n_71), .C (n_51), .Y
       (n_107));
  AND2X2 g6122(.A (n_98), .B (n_26), .Y (n_111));
  AND2X2 g6123(.A (n_98), .B (n_69), .Y (n_110));
  OAI21X1 g6124(.A (n_45), .B (n_35), .C (n_88), .Y (n_106));
  OAI21X1 g6125(.A (samp_track[0]), .B (n_34), .C (n_95), .Y (n_109));
  OAI21X1 g6126(.A (n_14), .B (n_38), .C (n_92), .Y (n_105));
  AOI21X1 g6127(.A (n_23), .B (n_76), .C (n_77), .Y (n_104));
  OAI21X1 g6128(.A (n_44), .B (n_35), .C (n_94), .Y (n_103));
  OAI21X1 g6129(.A (n_56), .B (n_35), .C (n_93), .Y (n_102));
  AOI22X1 g6130(.A (n_59), .B (n_36), .C (n_22), .D (n_71), .Y (n_101));
  INVX2 g6131(.A (n_99), .Y (n_100));
  NAND2X1 g6133(.A (sentAddr), .B (n_63), .Y (n_94));
  NOR2X1 g6134(.A (n_41), .B (n_79), .Y (n_99));
  OAI21X1 g6135(.A (n_31), .B (n_36), .C (n_43), .Y (n_93));
  AND2X2 g6136(.A (n_71), .B (n_50), .Y (n_98));
  NAND3X1 g6137(.A (n_14), .B (n_21), .C (n_65), .Y (n_97));
  NOR2X1 g6138(.A (n_53), .B (n_40), .Y (n_92));
  NOR2X1 g6139(.A (current_state[2]), .B (n_61), .Y (n_95));
  NOR2X1 g6140(.A (n_76), .B (n_77), .Y (n_91));
  INVX2 g6141(.A (n_83), .Y (n_87));
  OR2X2 g6142(.A (n_63), .B (current_state[1]), .Y (n_90));
  NAND3X1 g6143(.A (n_38), .B (n_23), .C (n_44), .Y (n_86));
  OR2X2 g6144(.A (n_61), .B (n_39), .Y (n_89));
  NAND3X1 g6145(.A (n_29), .B (n_28), .C (n_42), .Y (n_88));
  NAND3X1 g6146(.A (current_state[1]), .B (n_32), .C (n_65), .Y (n_85));
  OAI21X1 g6148(.A (n_34), .B (current_state[3]), .C (n_55), .Y (n_83));
  AOI21X1 g6149(.A (loadedVal), .B (n_40), .C (n_57), .Y (n_82));
  INVX2 g6151(.A (n_78), .Y (n_79));
  INVX2 g6154(.A (n_71), .Y (n_70));
  NAND2X1 g6157(.A (doneAccumulatingRegAddr[1]), .B
       (doneAccumulatingRegAddr[0]), .Y (n_78));
  NOR2X1 g6158(.A (samp_track[2]), .B (n_48), .Y (n_69));
  NAND2X1 g6159(.A (n_13), .B (n_49), .Y (n_68));
  AND2X2 g6160(.A (n_42), .B (n_45), .Y (n_77));
  NOR2X1 g6161(.A (samp_track[1]), .B (n_34), .Y (n_67));
  NOR2X1 g6162(.A (current_state[2]), .B (n_34), .Y (n_76));
  NOR2X1 g6163(.A (n_24), .B (n_34), .Y (n_74));
  NOR2X1 g6164(.A (n_21), .B (n_39), .Y (n_73));
  NOR2X1 g6165(.A (current_state[3]), .B (n_38), .Y (n_71));
  NOR2X1 g6166(.A (current_state[0]), .B (n_36), .Y (n_66));
  INVX2 g6167(.A (n_65), .Y (n_64));
  NOR2X1 g6168(.A (n_23), .B (n_39), .Y (n_65));
  NAND2X1 g6169(.A (n_23), .B (n_40), .Y (n_63));
  OAI21X1 g6170(.A (current_state[2]), .B (current_state[0]), .C
       (n_21), .Y (n_60));
  NOR2X1 g6171(.A (current_state[1]), .B (n_50), .Y (n_59));
  NOR2X1 g6172(.A (n_37), .B (n_42), .Y (n_58));
  NAND2X1 g6173(.A (n_33), .B (n_36), .Y (n_62));
  NOR2X1 g6174(.A (n_38), .B (n_50), .Y (n_57));
  NAND3X1 g6175(.A (samp_track[2]), .B (n_48), .C (n_22), .Y (n_56));
  NAND3X1 g6176(.A (n_37), .B (n_22), .C (current_state[3]), .Y (n_55));
  AOI21X1 g6177(.A (n_22), .B (n_23), .C (n_24), .Y (n_54));
  OAI21X1 g6178(.A (current_state[1]), .B (n_22), .C (n_23), .Y (n_53));
  OAI21X1 g6179(.A (n_22), .B (n_23), .C (n_34), .Y (n_52));
  OAI22X1 g6180(.A (n_21), .B (current_state[3]), .C
       (current_state[1]), .D (n_23), .Y (n_61));
  INVX1 g6204(.A (n_46), .Y (n_47));
  INVX1 g6205(.A (n_44), .Y (n_43));
  INVX2 g6206(.A (n_42), .Y (n_41));
  INVX2 g6207(.A (n_40), .Y (n_39));
  INVX2 g6208(.A (n_38), .Y (n_37));
  INVX2 g6209(.A (n_36), .Y (n_35));
  INVX2 g6210(.A (n_33), .Y (n_34));
  NOR2X1 g6215(.A (n_10), .B (ack_received2), .Y (n_51));
  NOR2X1 g6216(.A (px_addr[1]), .B (n_18), .Y (n_32));
  NOR2X1 g6217(.A (sentAddr), .B (n_23), .Y (n_31));
  NOR2X1 g6218(.A (current_state[2]), .B (current_state[0]), .Y (n_30));
  NOR2X1 g6219(.A (px_addr[1]), .B (sentAddr), .Y (n_29));
  NOR2X1 g6220(.A (px_addr[0]), .B (current_state[0]), .Y (n_28));
  NOR2X1 g6221(.A (loadedVal), .B (current_state[0]), .Y (n_50));
  AND2X2 g6222(.A (samp_track[1]), .B (samp_track[0]), .Y (n_49));
  OR2X1 g6223(.A (n_21), .B (px_addr[0]), .Y (n_27));
  OR2X2 g6224(.A (samp_track[0]), .B (samp_track[1]), .Y (n_48));
  NOR2X1 g6225(.A (samp_track[1]), .B (n_19), .Y (n_46));
  NOR2X1 g6226(.A (samp_track[0]), .B (n_15), .Y (n_26));
  NOR2X1 g6227(.A (n_21), .B (n_22), .Y (n_45));
  NAND2X1 g6228(.A (n_21), .B (n_22), .Y (n_44));
  NOR2X1 g6229(.A (n_24), .B (current_state[3]), .Y (n_42));
  NOR2X1 g6230(.A (current_state[2]), .B (n_22), .Y (n_40));
  NAND2X1 g6231(.A (current_state[2]), .B (n_21), .Y (n_38));
  NOR2X1 g6232(.A (current_state[2]), .B (n_23), .Y (n_36));
  NOR2X1 g6233(.A (n_21), .B (current_state[0]), .Y (n_33));
  INVX1 g6234(.A (counterAccumulation_n_166), .Y (n_25));
  INVX2 g6235(.A (current_state[2]), .Y (n_24));
  INVX2 g6236(.A (current_state[3]), .Y (n_23));
  INVX2 g6237(.A (current_state[0]), .Y (n_22));
  INVX2 g6238(.A (current_state[1]), .Y (n_21));
  INVX1 g6239(.A (sampleOut[4]), .Y (n_20));
  INVX1 g6240(.A (samp_track[0]), .Y (n_19));
  INVX2 g6244(.A (px_addr[0]), .Y (n_18));
  INVX1 g6246(.A (sampleOut[28]), .Y (n_17));
  INVX1 g6247(.A (sampleOut[12]), .Y (n_16));
  INVX1 g6248(.A (samp_track[1]), .Y (n_15));
  INVX2 g6249(.A (loadedVal), .Y (n_14));
  INVX1 g6250(.A (samp_track[2]), .Y (n_13));
  INVX1 g6251(.A (sampleOut[20]), .Y (n_12));
  INVX2 g6253(.A (ack_received), .Y (n_10));
  INVX2 drc_bufs6259(.A (n_6), .Y (n_7));
  INVX2 drc_bufs6260(.A (n_120), .Y (n_6));
  INVX2 drc_bufs6266(.A (n_4), .Y (n_5));
  INVX2 drc_bufs6267(.A (n_110), .Y (n_4));
  INVX2 drc_bufs6273(.A (n_2), .Y (n_3));
  INVX2 drc_bufs6274(.A (n_111), .Y (n_2));
  INVX2 drc_bufs6280(.A (n_0), .Y (n_1));
  INVX2 drc_bufs6281(.A (n_119), .Y (n_0));
  INVX1 g6282(.A (n_27), .Y (n_80));
  MUX2X1 g2(.A (n_95), .B (n_62), .S (samp_track[0]), .Y (n_346));
  NAND3X1 g6283(.A (n_347), .B (n_70), .C (n_88), .Y (n_348));
  NOR2X1 g3(.A (n_73), .B (n_127), .Y (n_347));
  OAI21X1 g6284(.A (n_23), .B (n_40), .C (n_349), .Y (n_350));
  NOR2X1 g6285(.A (n_73), .B (n_74), .Y (n_349));
endmodule

module serialInterface_v2(clearStartStopDet, clk, dataIn, dataOut,
     regAddr, rst, scl, sdaIn, sdaOut, startStopDetState, writeEn,
     ack_received, statusLED);
  input clk, rst, scl, sdaIn;
  input [7:0] dataIn;
  input [1:0] startStopDetState;
  output clearStartStopDet, sdaOut, writeEn, ack_received, statusLED;
  output [7:0] dataOut;
  output [1:0] regAddr;
  wire clk, rst, scl, sdaIn;
  wire [7:0] dataIn;
  wire [1:0] startStopDetState;
  wire clearStartStopDet, sdaOut, writeEn, ack_received, statusLED;
  wire [7:0] dataOut;
  wire [1:0] regAddr;
  wire [3:0] CurrState_SISt;
  wire [2:0] bitCnt;
  wire [7:0] rxData;
  wire [1:0] streamSt;
  wire [7:0] txData;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8, n_9, n_10, n_11, n_12, n_13, n_14, n_15;
  wire n_16, n_17, n_18, n_19, n_20, n_21, n_22, n_23;
  wire n_24, n_25, n_26, n_27, n_28, n_29, n_30, n_31;
  wire n_32, n_33, n_34, n_35, n_36, n_37, n_38, n_39;
  wire n_40, n_41, n_42, n_43, n_44, n_45, n_46, n_47;
  wire n_48, n_49, n_50, n_51, n_52, n_53, n_54, n_55;
  wire n_56, n_57, n_58, n_59, n_60, n_61, n_62, n_63;
  wire n_64, n_65, n_66, n_67, n_68, n_69, n_70, n_71;
  wire n_72, n_73, n_74, n_75, n_76, n_77, n_78, n_79;
  wire n_80, n_81, n_82, n_83, n_84, n_85, n_86, n_87;
  wire n_88, n_89, n_91, n_92, n_93, n_94, n_95, n_96;
  wire n_97, n_98, n_99, n_100, n_101, n_102, n_103, n_104;
  wire n_105, n_106, n_107, n_108, n_109, n_110, n_111, n_112;
  wire n_113, n_114, n_115, n_116, n_117, n_118, n_119, n_120;
  wire n_121, n_122, n_123, n_124, n_125, n_126, n_127, n_129;
  wire n_130, n_131, n_132, n_134, n_135, n_136, n_137, n_139;
  wire n_140, n_141, n_142, n_145, n_146, n_147, n_148, n_150;
  wire n_151, n_152, n_153, n_154, n_155, n_156, n_157, n_158;
  wire n_159, n_160, n_161, n_162, n_163, n_164, n_165, n_166;
  wire n_167, n_168, n_169, n_170, n_171, n_172, n_173, n_176;
  wire n_177, n_178, n_179, n_180, n_181, n_182, n_183, n_184;
  wire n_185, n_186, n_187, n_188, n_189, n_190, n_191, n_192;
  wire n_193, n_194, n_195, n_196, n_197, n_198, n_199, n_200;
  wire n_201, n_202, n_203, n_204, n_205, n_206, n_207, n_208;
  wire n_209, n_210, n_211, n_212, n_213, n_214, n_215, n_216;
  wire n_217, n_218, n_219, n_220, n_221, n_222, n_223, n_224;
  wire n_225, n_226, n_227, n_228, n_229, n_230, n_231, n_232;
  wire n_233, n_234, n_254, n_255, n_256, n_257, n_258, n_259;
  DFFPOSX1 \CurrState_SISt_reg[0] (.CLK (clk), .D (n_227), .Q
       (CurrState_SISt[0]));
  DFFPOSX1 \CurrState_SISt_reg[1] (.CLK (clk), .D (n_199), .Q
       (CurrState_SISt[1]));
  DFFPOSX1 \CurrState_SISt_reg[2] (.CLK (clk), .D (n_230), .Q
       (CurrState_SISt[2]));
  DFFPOSX1 \CurrState_SISt_reg[3] (.CLK (clk), .D (n_186), .Q
       (CurrState_SISt[3]));
  DFFPOSX1 \bitCnt_reg[0] (.CLK (clk), .D (n_232), .Q (bitCnt[0]));
  DFFPOSX1 \bitCnt_reg[1] (.CLK (clk), .D (n_234), .Q (bitCnt[1]));
  DFFPOSX1 \bitCnt_reg[2] (.CLK (clk), .D (n_208), .Q (bitCnt[2]));
  DFFPOSX1 clearStartStopDet_reg(.CLK (clk), .D (n_204), .Q
       (clearStartStopDet));
  DFFPOSX1 \regAddr_reg[0] (.CLK (clk), .D (n_181), .Q (regAddr[0]));
  DFFPOSX1 \regAddr_reg[1] (.CLK (clk), .D (n_201), .Q (regAddr[1]));
  DFFPOSX1 \rxData_reg[0] (.CLK (clk), .D (n_220), .Q (rxData[0]));
  DFFPOSX1 \rxData_reg[1] (.CLK (clk), .D (n_219), .Q (rxData[1]));
  DFFPOSX1 \rxData_reg[2] (.CLK (clk), .D (n_218), .Q (rxData[2]));
  DFFPOSX1 \rxData_reg[3] (.CLK (clk), .D (n_217), .Q (rxData[3]));
  DFFPOSX1 \rxData_reg[4] (.CLK (clk), .D (n_216), .Q (rxData[4]));
  DFFPOSX1 \rxData_reg[5] (.CLK (clk), .D (n_229), .Q (rxData[5]));
  DFFPOSX1 \rxData_reg[6] (.CLK (clk), .D (n_222), .Q (rxData[6]));
  DFFPOSX1 \rxData_reg[7] (.CLK (clk), .D (n_221), .Q (rxData[7]));
  DFFPOSX1 sdaOut_reg(.CLK (clk), .D (n_231), .Q (sdaOut));
  DFFPOSX1 \streamSt_reg[0] (.CLK (clk), .D (n_233), .Q (streamSt[0]));
  DFFPOSX1 \txData_reg[0] (.CLK (clk), .D (n_169), .Q (txData[0]));
  DFFPOSX1 \txData_reg[1] (.CLK (clk), .D (n_197), .Q (txData[1]));
  DFFPOSX1 \txData_reg[2] (.CLK (clk), .D (n_196), .Q (txData[2]));
  DFFPOSX1 \txData_reg[3] (.CLK (clk), .D (n_195), .Q (txData[3]));
  DFFPOSX1 \txData_reg[4] (.CLK (clk), .D (n_194), .Q (txData[4]));
  DFFPOSX1 \txData_reg[5] (.CLK (clk), .D (n_193), .Q (txData[5]));
  DFFPOSX1 \txData_reg[6] (.CLK (clk), .D (n_192), .Q (txData[6]));
  DFFPOSX1 \txData_reg[7] (.CLK (clk), .D (n_190), .Q (txData[7]));
  NAND2X1 g5532(.A (n_187), .B (n_225), .Y (n_234));
  NAND3X1 g5533(.A (n_142), .B (n_140), .C (n_203), .Y (n_233));
  OAI21X1 g5534(.A (n_13), .B (n_202), .C (n_226), .Y (n_232));
  OAI21X1 g5535(.A (n_157), .B (n_148), .C (n_228), .Y (n_231));
  OAI21X1 g5536(.A (n_12), .B (n_134), .C (n_224), .Y (n_230));
  INVX2 g5537(.A (n_223), .Y (n_229));
  AND2X1 g5540(.A (n_206), .B (n_9), .Y (n_228));
  NAND3X1 g5541(.A (n_124), .B (n_185), .C (n_184), .Y (n_227));
  AOI21X1 g5542(.A (n_13), .B (n_189), .C (n_159), .Y (n_226));
  OAI21X1 g5543(.A (n_257), .B (n_191), .C (bitCnt[1]), .Y (n_225));
  AOI21X1 g5544(.A (CurrState_SISt[0]), .B (n_122), .C (n_207), .Y
       (n_224));
  AOI22X1 g5545(.A (rxData[5]), .B (n_200), .C (rxData[4]), .D (n_145),
       .Y (n_223));
  INVX2 g5546(.A (n_215), .Y (n_222));
  INVX2 g5547(.A (n_214), .Y (n_221));
  INVX2 g5548(.A (n_213), .Y (n_220));
  INVX2 g5549(.A (n_212), .Y (n_219));
  INVX2 g5550(.A (n_211), .Y (n_218));
  INVX2 g5551(.A (n_210), .Y (n_217));
  INVX2 g5552(.A (n_209), .Y (n_216));
  AOI22X1 g5553(.A (rxData[6]), .B (n_200), .C (rxData[5]), .D (n_145),
       .Y (n_215));
  AOI22X1 g5554(.A (rxData[7]), .B (n_200), .C (rxData[6]), .D (n_145),
       .Y (n_214));
  AOI22X1 g5555(.A (rxData[0]), .B (n_200), .C (sdaIn), .D (n_145), .Y
       (n_213));
  AOI22X1 g5556(.A (rxData[1]), .B (n_200), .C (rxData[0]), .D (n_145),
       .Y (n_212));
  AOI22X1 g5557(.A (rxData[2]), .B (n_200), .C (rxData[1]), .D (n_145),
       .Y (n_211));
  AOI22X1 g5558(.A (rxData[3]), .B (n_200), .C (rxData[2]), .D (n_145),
       .Y (n_210));
  AOI22X1 g5559(.A (rxData[4]), .B (n_200), .C (rxData[3]), .D (n_145),
       .Y (n_209));
  OAI21X1 g5560(.A (n_46), .B (n_182), .C (n_205), .Y (n_208));
  NAND2X1 g5571(.A (n_137), .B (n_183), .Y (n_207));
  AOI21X1 g5572(.A (sdaOut), .B (n_168), .C (n_172), .Y (n_206));
  OAI21X1 g5573(.A (n_147), .B (n_180), .C (bitCnt[2]), .Y (n_205));
  OAI21X1 g5574(.A (n_36), .B (n_134), .C (n_188), .Y (n_204));
  AOI22X1 g5575(.A (n_79), .B (n_177), .C (streamSt[0]), .D (n_99), .Y
       (n_203));
  AOI21X1 g5576(.A (n_11), .B (n_63), .C (n_191), .Y (n_202));
  OAI21X1 g5577(.A (n_42), .B (n_131), .C (n_198), .Y (n_201));
  OR2X1 g5579(.A (n_170), .B (n_151), .Y (n_199));
  OAI21X1 g5580(.A (n_37), .B (n_146), .C (regAddr[1]), .Y (n_198));
  OR2X2 g5581(.A (n_171), .B (n_122), .Y (n_200));
  OAI21X1 g5582(.A (n_8), .B (n_131), .C (n_166), .Y (n_197));
  OAI21X1 g5583(.A (n_5), .B (n_131), .C (n_165), .Y (n_196));
  OAI21X1 g5584(.A (n_7), .B (n_131), .C (n_164), .Y (n_195));
  OAI21X1 g5585(.A (n_1), .B (n_131), .C (n_163), .Y (n_194));
  OAI21X1 g5586(.A (n_2), .B (n_131), .C (n_162), .Y (n_193));
  OAI21X1 g5587(.A (n_4), .B (n_131), .C (n_161), .Y (n_192));
  OAI21X1 g5588(.A (n_6), .B (n_131), .C (n_160), .Y (n_190));
  OAI21X1 g5589(.A (n_48), .B (n_110), .C (n_259), .Y (n_189));
  AOI22X1 g5590(.A (clearStartStopDet), .B (n_153), .C (n_20), .D
       (n_64), .Y (n_188));
  OAI21X1 g5591(.A (n_33), .B (n_29), .C (n_179), .Y (n_191));
  OAI21X1 g5592(.A (n_112), .B (n_155), .C (n_41), .Y (n_187));
  OAI21X1 g5593(.A (n_36), .B (n_106), .C (n_178), .Y (n_186));
  AOI21X1 g5594(.A (n_10), .B (n_60), .C (n_158), .Y (n_185));
  AOI22X1 g5595(.A (n_10), .B (n_118), .C (scl), .D (n_154), .Y
       (n_184));
  AOI21X1 g5596(.A (n_32), .B (n_58), .C (n_173), .Y (n_183));
  AOI21X1 g5597(.A (n_17), .B (n_155), .C (n_112), .Y (n_182));
  OAI21X1 g5598(.A (regAddr[0]), .B (n_131), .C (n_176), .Y (n_181));
  INVX1 g5599(.A (n_179), .Y (n_180));
  NOR2X1 g5600(.A (n_116), .B (n_139), .Y (n_178));
  NOR2X1 g5601(.A (n_103), .B (n_156), .Y (n_177));
  NAND2X1 g5602(.A (regAddr[0]), .B (n_146), .Y (n_176));
  OAI21X1 g5605(.A (n_27), .B (n_126), .C (n_111), .Y (n_173));
  AOI21X1 g5606(.A (CurrState_SISt[0]), .B (n_72), .C (n_136), .Y
       (n_179));
  OAI21X1 g5607(.A (CurrState_SISt[3]), .B (n_82), .C (n_255), .Y
       (n_172));
  OAI21X1 g5608(.A (CurrState_SISt[1]), .B (n_94), .C (n_141), .Y
       (n_171));
  OAI21X1 g5609(.A (n_77), .B (n_110), .C (n_152), .Y (n_170));
  INVX2 g5610(.A (n_167), .Y (n_169));
  OAI21X1 g5611(.A (CurrState_SISt[1]), .B (n_129), .C (n_117), .Y
       (n_168));
  AOI22X1 g5612(.A (txData[0]), .B (n_123), .C (dataIn[0]), .D (n_130),
       .Y (n_167));
  AOI22X1 g5613(.A (txData[1]), .B (n_123), .C (txData[0]), .D (n_97),
       .Y (n_166));
  AOI22X1 g5614(.A (txData[2]), .B (n_123), .C (txData[1]), .D (n_97),
       .Y (n_165));
  AOI22X1 g5615(.A (txData[3]), .B (n_123), .C (txData[2]), .D (n_97),
       .Y (n_164));
  AOI22X1 g5616(.A (txData[4]), .B (n_123), .C (txData[3]), .D (n_97),
       .Y (n_163));
  AOI22X1 g5617(.A (txData[5]), .B (n_123), .C (txData[4]), .D (n_97),
       .Y (n_162));
  AOI22X1 g5618(.A (txData[6]), .B (n_123), .C (txData[5]), .D (n_97),
       .Y (n_161));
  AOI22X1 g5619(.A (txData[7]), .B (n_123), .C (txData[6]), .D (n_97),
       .Y (n_160));
  OAI21X1 g5620(.A (n_75), .B (n_71), .C (n_150), .Y (n_159));
  OAI22X1 g5621(.A (n_44), .B (n_115), .C (rst), .D (n_108), .Y
       (n_158));
  INVX1 g5622(.A (n_156), .Y (n_157));
  NAND3X1 g5623(.A (startStopDetState[0]), .B (n_3), .C (n_101), .Y
       (n_156));
  OAI21X1 g5624(.A (n_12), .B (n_26), .C (n_120), .Y (n_154));
  NAND2X1 g5625(.A (n_132), .B (n_110), .Y (n_155));
  NAND3X1 g5626(.A (n_54), .B (n_86), .C (n_95), .Y (n_153));
  NOR2X1 g5627(.A (n_114), .B (n_105), .Y (n_152));
  OAI21X1 g5628(.A (CurrState_SISt[2]), .B (n_91), .C (n_121), .Y
       (n_151));
  NAND2X1 g5629(.A (n_9), .B (n_125), .Y (n_150));
  NAND3X1 g5631(.A (n_45), .B (n_14), .C (n_129), .Y (n_148));
  NAND3X1 g5632(.A (n_62), .B (n_85), .C (n_109), .Y (n_147));
  NAND3X1 g5635(.A (n_26), .B (n_24), .C (n_98), .Y (n_146));
  OAI21X1 g5636(.A (n_102), .B (n_89), .C (n_68), .Y (n_142));
  OAI21X1 g5637(.A (CurrState_SISt[2]), .B (n_111), .C (n_92), .Y
       (n_145));
  AOI21X1 g5638(.A (n_10), .B (n_65), .C (n_127), .Y (n_141));
  OAI21X1 g5639(.A (n_72), .B (n_96), .C (streamSt[0]), .Y (n_140));
  OAI21X1 g5640(.A (n_31), .B (n_73), .C (n_119), .Y (n_139));
  AOI22X1 g5642(.A (n_100), .B (n_72), .C (n_34), .D (n_64), .Y
       (n_137));
  OAI21X1 g5643(.A (n_26), .B (n_104), .C (n_59), .Y (n_136));
  OAI22X1 g5644(.A (CurrState_SISt[3]), .B (n_109), .C (n_17), .D
       (n_62), .Y (n_135));
  INVX2 g5646(.A (n_131), .Y (n_130));
  OR2X2 g5647(.A (n_106), .B (n_49), .Y (n_134));
  OR2X1 g5649(.A (n_88), .B (n_87), .Y (n_127));
  OR2X1 g5650(.A (n_103), .B (CurrState_SISt[1]), .Y (n_126));
  NOR2X1 g5651(.A (scl), .B (n_103), .Y (n_125));
  NAND2X1 g5652(.A (n_51), .B (n_104), .Y (n_132));
  NAND2X1 g5653(.A (n_11), .B (n_113), .Y (n_131));
  NOR2X1 g5654(.A (n_15), .B (n_103), .Y (n_129));
  NAND3X1 g5655(.A (n_34), .B (n_77), .C (n_72), .Y (n_124));
  NAND3X1 g5656(.A (n_29), .B (n_24), .C (n_81), .Y (n_123));
  AOI21X1 g5657(.A (n_19), .B (n_65), .C (n_113), .Y (n_121));
  OAI21X1 g5658(.A (CurrState_SISt[0]), .B (n_77), .C (n_53), .Y
       (n_120));
  AOI22X1 g5659(.A (n_69), .B (n_25), .C (n_12), .D (n_57), .Y (n_119));
  OAI21X1 g5660(.A (n_76), .B (n_62), .C (n_83), .Y (n_118));
  OAI21X1 g5661(.A (n_10), .B (n_52), .C (n_73), .Y (n_122));
  AOI21X1 g5662(.A (CurrState_SISt[1]), .B (n_55), .C
       (CurrState_SISt[2]), .Y (n_117));
  OAI22X1 g5663(.A (streamSt[0]), .B (n_80), .C (CurrState_SISt[1]), .D
       (n_62), .Y (n_116));
  AOI22X1 g5664(.A (n_75), .B (n_74), .C (scl), .D (n_43), .Y (n_115));
  OAI21X1 g5665(.A (n_36), .B (n_52), .C (n_93), .Y (n_114));
  INVX1 g5666(.A (n_107), .Y (n_108));
  INVX2 g5667(.A (n_105), .Y (n_106));
  NOR2X1 g5668(.A (n_14), .B (n_80), .Y (n_113));
  NOR2X1 g5669(.A (n_11), .B (n_80), .Y (n_112));
  NAND3X1 g5670(.A (n_16), .B (n_32), .C (n_43), .Y (n_111));
  NAND3X1 g5671(.A (n_15), .B (n_11), .C (n_72), .Y (n_110));
  NAND2X1 g5672(.A (n_14), .B (n_63), .Y (n_109));
  OAI21X1 g5673(.A (n_0), .B (n_40), .C (n_33), .Y (n_102));
  NOR2X1 g5674(.A (n_70), .B (n_67), .Y (n_101));
  AND2X1 g5675(.A (n_77), .B (n_11), .Y (n_100));
  NAND2X1 g5676(.A (n_29), .B (n_71), .Y (n_99));
  NOR2X1 g5677(.A (CurrState_SISt[2]), .B (n_55), .Y (n_107));
  NOR2X1 g5678(.A (scl), .B (n_52), .Y (n_105));
  NOR2X1 g5679(.A (n_36), .B (n_78), .Y (n_104));
  NAND2X1 g5680(.A (CurrState_SISt[3]), .B (n_76), .Y (n_103));
  AOI21X1 g5681(.A (n_21), .B (n_9), .C (n_43), .Y (n_98));
  INVX1 g5682(.A (n_95), .Y (n_96));
  INVX2 g5683(.A (n_84), .Y (n_94));
  NOR2X1 g5684(.A (n_50), .B (n_52), .Y (n_97));
  NAND3X1 g5685(.A (n_10), .B (CurrState_SISt[0]), .C (n_53), .Y
       (n_93));
  NAND3X1 g5686(.A (CurrState_SISt[0]), .B (n_32), .C (n_65), .Y
       (n_92));
  NOR2X1 g5687(.A (n_74), .B (n_61), .Y (n_91));
  NOR2X1 g5689(.A (n_63), .B (n_65), .Y (n_95));
  OAI21X1 g5690(.A (n_10), .B (sdaIn), .C (n_78), .Y (n_89));
  AOI21X1 g5691(.A (startStopDetState[0]), .B (n_47), .C (n_24), .Y
       (n_88));
  OAI21X1 g5692(.A (CurrState_SISt[0]), .B (n_26), .C (n_56), .Y
       (n_87));
  AOI21X1 g5693(.A (n_12), .B (n_30), .C (n_58), .Y (n_86));
  AOI21X1 g5694(.A (n_46), .B (n_23), .C (n_57), .Y (n_85));
  OAI21X1 g5695(.A (n_14), .B (n_27), .C (n_62), .Y (n_84));
  AOI21X1 g5696(.A (CurrState_SISt[0]), .B (n_25), .C (n_65), .Y
       (n_83));
  AOI22X1 g5697(.A (n_22), .B (n_35), .C (n_15), .D (n_45), .Y (n_82));
  AOI22X1 g5698(.A (n_33), .B (n_25), .C (n_14), .D (n_28), .Y (n_81));
  INVX1 g5699(.A (n_80), .Y (n_79));
  INVX2 g5700(.A (n_76), .Y (n_75));
  INVX2 g5701(.A (n_73), .Y (n_72));
  NAND2X1 g5702(.A (n_45), .B (n_28), .Y (n_80));
  NAND2X1 g5703(.A (rxData[6]), .B (n_39), .Y (n_70));
  NAND2X1 g5704(.A (n_0), .B (n_47), .Y (n_78));
  AND2X2 g5705(.A (n_48), .B (n_13), .Y (n_77));
  NOR2X1 g5706(.A (n_17), .B (n_46), .Y (n_76));
  NOR2X1 g5707(.A (rst), .B (n_31), .Y (n_74));
  NOR2X1 g5708(.A (n_35), .B (n_11), .Y (n_69));
  NOR2X1 g5709(.A (n_14), .B (n_24), .Y (n_68));
  NAND2X1 g5710(.A (n_16), .B (n_23), .Y (n_73));
  NAND3X1 g5711(.A (rxData[3]), .B (rxData[2]), .C (n_38), .Y (n_67));
  NAND3X1 g5712(.A (n_16), .B (CurrState_SISt[2]), .C
       (CurrState_SISt[3]), .Y (n_66));
  NAND2X1 g5713(.A (scl), .B (n_28), .Y (n_71));
  INVX1 g5714(.A (n_62), .Y (n_61));
  INVX1 g5715(.A (n_59), .Y (n_60));
  INVX2 g5716(.A (n_56), .Y (n_57));
  INVX1 g5717(.A (n_53), .Y (n_54));
  INVX1 g5718(.A (n_52), .Y (n_51));
  NAND2X1 g5719(.A (n_12), .B (n_34), .Y (n_50));
  NOR2X1 g5720(.A (CurrState_SISt[2]), .B (n_26), .Y (n_65));
  NOR2X1 g5721(.A (n_12), .B (n_26), .Y (n_64));
  NOR2X1 g5722(.A (CurrState_SISt[2]), .B (n_27), .Y (n_63));
  NAND2X1 g5723(.A (CurrState_SISt[3]), .B (n_28), .Y (n_62));
  NAND2X1 g5724(.A (CurrState_SISt[3]), .B (n_23), .Y (n_59));
  NOR2X1 g5725(.A (CurrState_SISt[0]), .B (n_24), .Y (n_58));
  NAND2X1 g5726(.A (n_10), .B (n_30), .Y (n_56));
  NAND2X1 g5727(.A (n_11), .B (n_34), .Y (n_55));
  NOR2X1 g5728(.A (CurrState_SISt[3]), .B (n_24), .Y (n_53));
  NAND2X1 g5729(.A (n_11), .B (n_25), .Y (n_52));
  OAI21X1 g5730(.A (startStopDetState[1]), .B (n_14), .C (n_0), .Y
       (n_49));
  INVX1 g5731(.A (n_45), .Y (n_44));
  OR2X1 g5732(.A (n_18), .B (regAddr[1]), .Y (n_42));
  NOR2X1 g5733(.A (bitCnt[1]), .B (n_13), .Y (n_41));
  NAND2X1 g5734(.A (n_10), .B (startStopDetState[1]), .Y (n_40));
  NOR2X1 g5735(.A (bitCnt[1]), .B (bitCnt[2]), .Y (n_48));
  NOR2X1 g5736(.A (rxData[1]), .B (rxData[7]), .Y (n_39));
  NOR2X1 g5737(.A (rxData[4]), .B (rxData[5]), .Y (n_38));
  NOR2X1 g5738(.A (scl), .B (startStopDetState[1]), .Y (n_47));
  NAND2X1 g5739(.A (bitCnt[1]), .B (bitCnt[0]), .Y (n_46));
  NOR2X1 g5740(.A (regAddr[0]), .B (rst), .Y (n_37));
  NOR2X1 g5741(.A (CurrState_SISt[1]), .B (CurrState_SISt[2]), .Y
       (n_45));
  NOR2X1 g5742(.A (CurrState_SISt[0]), .B (rst), .Y (n_43));
  INVX2 g5743(.A (n_36), .Y (n_35));
  INVX2 g5744(.A (n_34), .Y (n_33));
  INVX2 g5745(.A (n_32), .Y (n_31));
  INVX2 g5746(.A (n_30), .Y (n_29));
  INVX2 g5747(.A (n_28), .Y (n_27));
  INVX2 g5748(.A (n_26), .Y (n_25));
  INVX2 g5749(.A (n_24), .Y (n_23));
  NOR2X1 g5750(.A (scl), .B (CurrState_SISt[1]), .Y (n_22));
  NAND2X1 g5751(.A (CurrState_SISt[0]), .B (CurrState_SISt[2]), .Y
       (n_36));
  NOR2X1 g5752(.A (scl), .B (CurrState_SISt[0]), .Y (n_34));
  NOR2X1 g5753(.A (n_10), .B (n_11), .Y (n_32));
  NOR2X1 g5754(.A (n_11), .B (rst), .Y (n_30));
  NOR2X1 g5755(.A (n_15), .B (rst), .Y (n_28));
  NAND2X1 g5756(.A (CurrState_SISt[1]), .B (n_9), .Y (n_26));
  NAND2X1 g5757(.A (n_11), .B (streamSt[0]), .Y (n_21));
  NAND2X1 g5758(.A (CurrState_SISt[2]), .B (n_9), .Y (n_24));
  NOR2X1 g5759(.A (CurrState_SISt[0]), .B (n_11), .Y (n_20));
  NOR2X1 g5760(.A (n_10), .B (CurrState_SISt[0]), .Y (n_19));
  INVX1 g5761(.A (regAddr[0]), .Y (n_18));
  INVX2 g5766(.A (bitCnt[2]), .Y (n_17));
  INVX2 g5767(.A (CurrState_SISt[1]), .Y (n_16));
  INVX2 g5768(.A (CurrState_SISt[0]), .Y (n_15));
  INVX2 g5769(.A (streamSt[0]), .Y (n_14));
  INVX2 g5770(.A (bitCnt[0]), .Y (n_13));
  INVX2 g5771(.A (CurrState_SISt[2]), .Y (n_12));
  INVX2 g5772(.A (CurrState_SISt[3]), .Y (n_11));
  INVX2 g5773(.A (scl), .Y (n_10));
  INVX2 g5774(.A (rst), .Y (n_9));
  INVX2 g5775(.A (dataIn[1]), .Y (n_8));
  INVX2 g5776(.A (dataIn[3]), .Y (n_7));
  INVX2 g5777(.A (dataIn[7]), .Y (n_6));
  INVX2 g5778(.A (dataIn[2]), .Y (n_5));
  INVX2 g5779(.A (dataIn[6]), .Y (n_4));
  INVX1 g5780(.A (startStopDetState[1]), .Y (n_3));
  INVX2 g5781(.A (dataIn[5]), .Y (n_2));
  INVX2 g5782(.A (dataIn[4]), .Y (n_1));
  INVX2 g5783(.A (startStopDetState[0]), .Y (n_0));
  AOI21X1 g2(.A (txData[7]), .B (n_107), .C (n_254), .Y (n_255));
  NOR2X1 g3(.A (n_33), .B (n_66), .Y (n_254));
  OR2X1 g5784(.A (n_256), .B (n_135), .Y (n_257));
  AOI21X1 g5785(.A (n_62), .B (n_24), .C (bitCnt[0]), .Y (n_256));
  AND2X1 g5786(.A (n_258), .B (n_132), .Y (n_259));
  NOR2X1 g5787(.A (n_112), .B (n_113), .Y (n_258));
endmodule

module chip_v2(clk, rst, sda, scl, testSig, drdy);
  input clk, rst, scl, testSig;
  output drdy;
  inout sda;
  wire clk, rst, scl, testSig;
  wire drdy;
  wire sda;
  wire [4:0] stop_osc;
  wire [19:0] clk_px;
  wire [31:0] theDigitalBlock_sampleOut;
  wire [7:0] theDigitalBlock_u_i2cSlave_dataFromRegIF;
  wire [4:0] theDigitalBlock_u_i2cSlave_sclDelayed;
  wire [1:0] theDigitalBlock_u_i2cSlave_startStopDetState;
  wire [1:0] theDigitalBlock_u_i2cSlave_regAddr;
  wire [4:0] theDigitalBlock_u_i2cSlave_sclPipe;
  wire [4:0] theDigitalBlock_u_i2cSlave_sdaPipe;
  wire [1:0] theDigitalBlock_u_i2cSlave_rstPipe;
  wire [1:0] theDigitalBlock_u_i2cSlave_sdaDelayed;
  wire UNCONNECTED0, UNCONNECTED1, UNCONNECTED2, UNCONNECTED3,
       UNCONNECTED4, UNCONNECTED5, UNCONNECTED6, UNCONNECTED7;
  wire UNCONNECTED8, UNCONNECTED9, UNCONNECTED10, UNCONNECTED11,
       UNCONNECTED12, UNCONNECTED13, UNCONNECTED14, UNCONNECTED15;
  wire n_1, n_2, n_3, n_4, n_5, n_6, n_7, n_8;
  wire n_9, n_10, n_11, n_12, n_13, n_14, n_15, n_16;
  wire n_17, n_18, n_19, n_20, n_21, n_22, n_23, n_24;
  wire n_25, n_26, n_27, n_28, n_29, n_30, n_31, n_32;
  wire n_33, n_34, n_35, n_36, n_37, n_38, n_39, n_40;
  wire n_41, n_42, n_43, n_44, n_45, n_46, n_48, n_49;
  wire n_50, n_51, n_52, n_53, n_54, n_55, n_56, n_57;
  wire n_58, n_59, n_62, n_63, n_64, n_65, n_66, n_67;
  wire n_70, n_71, n_72, n_73, n_74, n_75, n_76, n_78;
  wire n_79, n_80, n_81, n_82, n_83, n_84, n_85, n_86;
  wire n_87, n_88, n_89, n_90, n_91, n_92, n_93, n_94;
  wire n_95, n_96, n_97, n_98, n_99, n_100, n_101, n_102;
  wire n_103, n_104, n_105, n_106, n_107, n_115, n_116, n_117;
  wire n_118, n_119, theDigitalBlock_ack_received,
       theDigitalBlock_clr_counter, theDigitalBlock_counterChip1_n_39,
       theDigitalBlock_counterChip1_n_41,
       theDigitalBlock_counterChip1_n_43,
       theDigitalBlock_counterChip1_n_45;
  wire theDigitalBlock_counterChip1_n_47,
       theDigitalBlock_counterChip1_n_49,
       theDigitalBlock_counterChip1_n_51,
       theDigitalBlock_counterChip1_n_53,
       theDigitalBlock_counterChip1_n_55,
       theDigitalBlock_counterChip1_n_57,
       theDigitalBlock_counterChip1_n_59,
       theDigitalBlock_counterChip1_n_61;
  wire theDigitalBlock_counterChip1_n_63,
       theDigitalBlock_counterChip1_n_65,
       theDigitalBlock_counterChip1_n_67,
       theDigitalBlock_counterChip1_n_69,
       theDigitalBlock_counterChip1_n_71,
       theDigitalBlock_counterChip1_n_73,
       theDigitalBlock_counterChip1_n_75,
       theDigitalBlock_counterChip1_n_77;
  wire theDigitalBlock_counterChip1_n_79,
       theDigitalBlock_counterChip1_n_81,
       theDigitalBlock_counterChip1_n_83,
       theDigitalBlock_counterChip1_n_85,
       theDigitalBlock_counterChip1_n_87,
       theDigitalBlock_counterChip1_n_89,
       theDigitalBlock_counterChip1_n_91,
       theDigitalBlock_counterChip1_n_93;
  wire theDigitalBlock_counterChip1_n_95,
       theDigitalBlock_counterChip1_n_97,
       theDigitalBlock_counterChip1_n_99,
       theDigitalBlock_counterChip2_n_39,
       theDigitalBlock_counterChip2_n_41,
       theDigitalBlock_counterChip2_n_43,
       theDigitalBlock_counterChip2_n_45,
       theDigitalBlock_counterChip2_n_47;
  wire theDigitalBlock_counterChip2_n_49,
       theDigitalBlock_counterChip2_n_51,
       theDigitalBlock_counterChip2_n_53,
       theDigitalBlock_counterChip2_n_55,
       theDigitalBlock_counterChip2_n_57,
       theDigitalBlock_counterChip2_n_59,
       theDigitalBlock_counterChip2_n_61,
       theDigitalBlock_counterChip2_n_63;
  wire theDigitalBlock_counterChip2_n_65,
       theDigitalBlock_counterChip2_n_67,
       theDigitalBlock_counterChip2_n_69,
       theDigitalBlock_counterChip2_n_71,
       theDigitalBlock_counterChip2_n_73,
       theDigitalBlock_counterChip2_n_75,
       theDigitalBlock_counterChip2_n_77,
       theDigitalBlock_counterChip2_n_79;
  wire theDigitalBlock_counterChip2_n_81,
       theDigitalBlock_counterChip2_n_83,
       theDigitalBlock_counterChip2_n_85,
       theDigitalBlock_counterChip2_n_87,
       theDigitalBlock_counterChip2_n_89,
       theDigitalBlock_counterChip2_n_91,
       theDigitalBlock_counterChip2_n_93,
       theDigitalBlock_counterChip2_n_95;
  wire theDigitalBlock_counterChip2_n_97,
       theDigitalBlock_counterChip2_n_99,
       theDigitalBlock_counterChip3_n_39,
       theDigitalBlock_counterChip3_n_41,
       theDigitalBlock_counterChip3_n_43,
       theDigitalBlock_counterChip3_n_45,
       theDigitalBlock_counterChip3_n_47,
       theDigitalBlock_counterChip3_n_49;
  wire theDigitalBlock_counterChip3_n_51,
       theDigitalBlock_counterChip3_n_53,
       theDigitalBlock_counterChip3_n_55,
       theDigitalBlock_counterChip3_n_57,
       theDigitalBlock_counterChip3_n_59,
       theDigitalBlock_counterChip3_n_61,
       theDigitalBlock_counterChip3_n_63,
       theDigitalBlock_counterChip3_n_65;
  wire theDigitalBlock_counterChip3_n_67,
       theDigitalBlock_counterChip3_n_69,
       theDigitalBlock_counterChip3_n_71,
       theDigitalBlock_counterChip3_n_73,
       theDigitalBlock_counterChip3_n_75,
       theDigitalBlock_counterChip3_n_77,
       theDigitalBlock_counterChip3_n_79,
       theDigitalBlock_counterChip3_n_81;
  wire theDigitalBlock_counterChip3_n_83,
       theDigitalBlock_counterChip3_n_85,
       theDigitalBlock_counterChip3_n_87,
       theDigitalBlock_counterChip3_n_89,
       theDigitalBlock_counterChip3_n_91,
       theDigitalBlock_counterChip3_n_93,
       theDigitalBlock_counterChip3_n_95,
       theDigitalBlock_counterChip3_n_97;
  wire theDigitalBlock_counterChip3_n_99,
       theDigitalBlock_counterChip4_n_39,
       theDigitalBlock_counterChip4_n_41,
       theDigitalBlock_counterChip4_n_43,
       theDigitalBlock_counterChip4_n_45,
       theDigitalBlock_counterChip4_n_47,
       theDigitalBlock_counterChip4_n_49,
       theDigitalBlock_counterChip4_n_51;
  wire theDigitalBlock_counterChip4_n_53,
       theDigitalBlock_counterChip4_n_55,
       theDigitalBlock_counterChip4_n_57,
       theDigitalBlock_counterChip4_n_59,
       theDigitalBlock_counterChip4_n_61,
       theDigitalBlock_counterChip4_n_63,
       theDigitalBlock_counterChip4_n_65,
       theDigitalBlock_counterChip4_n_67;
  wire theDigitalBlock_counterChip4_n_69,
       theDigitalBlock_counterChip4_n_71,
       theDigitalBlock_counterChip4_n_73,
       theDigitalBlock_counterChip4_n_75,
       theDigitalBlock_counterChip4_n_77,
       theDigitalBlock_counterChip4_n_79,
       theDigitalBlock_counterChip4_n_81,
       theDigitalBlock_counterChip4_n_83;
  wire theDigitalBlock_counterChip4_n_85,
       theDigitalBlock_counterChip4_n_87,
       theDigitalBlock_counterChip4_n_89,
       theDigitalBlock_counterChip4_n_91,
       theDigitalBlock_counterChip4_n_93,
       theDigitalBlock_counterChip4_n_95,
       theDigitalBlock_counterChip4_n_97,
       theDigitalBlock_counterChip4_n_99;
  wire theDigitalBlock_counterChip5_n_39,
       theDigitalBlock_counterChip5_n_41,
       theDigitalBlock_counterChip5_n_43,
       theDigitalBlock_counterChip5_n_45,
       theDigitalBlock_counterChip5_n_47,
       theDigitalBlock_counterChip5_n_49,
       theDigitalBlock_counterChip5_n_51,
       theDigitalBlock_counterChip5_n_53;
  wire theDigitalBlock_counterChip5_n_55,
       theDigitalBlock_counterChip5_n_57,
       theDigitalBlock_counterChip5_n_59,
       theDigitalBlock_counterChip5_n_61,
       theDigitalBlock_counterChip5_n_63,
       theDigitalBlock_counterChip5_n_65,
       theDigitalBlock_counterChip5_n_67,
       theDigitalBlock_counterChip5_n_69;
  wire theDigitalBlock_counterChip5_n_71,
       theDigitalBlock_counterChip5_n_73,
       theDigitalBlock_counterChip5_n_75,
       theDigitalBlock_counterChip5_n_77,
       theDigitalBlock_counterChip5_n_79,
       theDigitalBlock_counterChip5_n_81,
       theDigitalBlock_counterChip5_n_83,
       theDigitalBlock_counterChip5_n_85;
  wire theDigitalBlock_counterChip5_n_87,
       theDigitalBlock_counterChip5_n_89,
       theDigitalBlock_counterChip5_n_91,
       theDigitalBlock_counterChip5_n_93,
       theDigitalBlock_counterChip5_n_95,
       theDigitalBlock_counterChip5_n_97,
       theDigitalBlock_counterChip5_n_99,
       \theDigitalBlock_counter_val[0][0] ;
  wire \theDigitalBlock_counter_val[0][1] ,
       \theDigitalBlock_counter_val[0][2] ,
       \theDigitalBlock_counter_val[0][3] ,
       \theDigitalBlock_counter_val[0][4] ,
       \theDigitalBlock_counter_val[0][5] ,
       \theDigitalBlock_counter_val[0][6] ,
       \theDigitalBlock_counter_val[0][7] ,
       \theDigitalBlock_counter_val[0][8] ;
  wire \theDigitalBlock_counter_val[0][9] ,
       \theDigitalBlock_counter_val[0][10] ,
       \theDigitalBlock_counter_val[0][11] ,
       \theDigitalBlock_counter_val[0][12] ,
       \theDigitalBlock_counter_val[0][13] ,
       \theDigitalBlock_counter_val[0][14] ,
       \theDigitalBlock_counter_val[0][15] ,
       \theDigitalBlock_counter_val[0][16] ;
  wire \theDigitalBlock_counter_val[0][17] ,
       \theDigitalBlock_counter_val[0][18] ,
       \theDigitalBlock_counter_val[0][19] ,
       \theDigitalBlock_counter_val[0][20] ,
       \theDigitalBlock_counter_val[0][21] ,
       \theDigitalBlock_counter_val[0][22] ,
       \theDigitalBlock_counter_val[0][23] ,
       \theDigitalBlock_counter_val[0][24] ;
  wire \theDigitalBlock_counter_val[0][25] ,
       \theDigitalBlock_counter_val[0][26] ,
       \theDigitalBlock_counter_val[0][27] ,
       \theDigitalBlock_counter_val[0][28] ,
       \theDigitalBlock_counter_val[0][29] ,
       \theDigitalBlock_counter_val[0][30] ,
       \theDigitalBlock_counter_val[0][31] ,
       \theDigitalBlock_counter_val[1][0] ;
  wire \theDigitalBlock_counter_val[1][1] ,
       \theDigitalBlock_counter_val[1][2] ,
       \theDigitalBlock_counter_val[1][3] ,
       \theDigitalBlock_counter_val[1][4] ,
       \theDigitalBlock_counter_val[1][5] ,
       \theDigitalBlock_counter_val[1][6] ,
       \theDigitalBlock_counter_val[1][7] ,
       \theDigitalBlock_counter_val[1][8] ;
  wire \theDigitalBlock_counter_val[1][9] ,
       \theDigitalBlock_counter_val[1][10] ,
       \theDigitalBlock_counter_val[1][11] ,
       \theDigitalBlock_counter_val[1][12] ,
       \theDigitalBlock_counter_val[1][13] ,
       \theDigitalBlock_counter_val[1][14] ,
       \theDigitalBlock_counter_val[1][15] ,
       \theDigitalBlock_counter_val[1][16] ;
  wire \theDigitalBlock_counter_val[1][17] ,
       \theDigitalBlock_counter_val[1][18] ,
       \theDigitalBlock_counter_val[1][19] ,
       \theDigitalBlock_counter_val[1][20] ,
       \theDigitalBlock_counter_val[1][21] ,
       \theDigitalBlock_counter_val[1][22] ,
       \theDigitalBlock_counter_val[1][23] ,
       \theDigitalBlock_counter_val[1][24] ;
  wire \theDigitalBlock_counter_val[1][25] ,
       \theDigitalBlock_counter_val[1][26] ,
       \theDigitalBlock_counter_val[1][27] ,
       \theDigitalBlock_counter_val[1][28] ,
       \theDigitalBlock_counter_val[1][29] ,
       \theDigitalBlock_counter_val[1][30] ,
       \theDigitalBlock_counter_val[1][31] ,
       \theDigitalBlock_counter_val[2][0] ;
  wire \theDigitalBlock_counter_val[2][1] ,
       \theDigitalBlock_counter_val[2][2] ,
       \theDigitalBlock_counter_val[2][3] ,
       \theDigitalBlock_counter_val[2][4] ,
       \theDigitalBlock_counter_val[2][5] ,
       \theDigitalBlock_counter_val[2][6] ,
       \theDigitalBlock_counter_val[2][7] ,
       \theDigitalBlock_counter_val[2][8] ;
  wire \theDigitalBlock_counter_val[2][9] ,
       \theDigitalBlock_counter_val[2][10] ,
       \theDigitalBlock_counter_val[2][11] ,
       \theDigitalBlock_counter_val[2][12] ,
       \theDigitalBlock_counter_val[2][13] ,
       \theDigitalBlock_counter_val[2][14] ,
       \theDigitalBlock_counter_val[2][15] ,
       \theDigitalBlock_counter_val[2][16] ;
  wire \theDigitalBlock_counter_val[2][17] ,
       \theDigitalBlock_counter_val[2][18] ,
       \theDigitalBlock_counter_val[2][19] ,
       \theDigitalBlock_counter_val[2][20] ,
       \theDigitalBlock_counter_val[2][21] ,
       \theDigitalBlock_counter_val[2][22] ,
       \theDigitalBlock_counter_val[2][23] ,
       \theDigitalBlock_counter_val[2][24] ;
  wire \theDigitalBlock_counter_val[2][25] ,
       \theDigitalBlock_counter_val[2][26] ,
       \theDigitalBlock_counter_val[2][27] ,
       \theDigitalBlock_counter_val[2][28] ,
       \theDigitalBlock_counter_val[2][29] ,
       \theDigitalBlock_counter_val[2][30] ,
       \theDigitalBlock_counter_val[2][31] ,
       \theDigitalBlock_counter_val[3][0] ;
  wire \theDigitalBlock_counter_val[3][1] ,
       \theDigitalBlock_counter_val[3][2] ,
       \theDigitalBlock_counter_val[3][3] ,
       \theDigitalBlock_counter_val[3][4] ,
       \theDigitalBlock_counter_val[3][5] ,
       \theDigitalBlock_counter_val[3][6] ,
       \theDigitalBlock_counter_val[3][7] ,
       \theDigitalBlock_counter_val[3][8] ;
  wire \theDigitalBlock_counter_val[3][9] ,
       \theDigitalBlock_counter_val[3][10] ,
       \theDigitalBlock_counter_val[3][11] ,
       \theDigitalBlock_counter_val[3][12] ,
       \theDigitalBlock_counter_val[3][13] ,
       \theDigitalBlock_counter_val[3][14] ,
       \theDigitalBlock_counter_val[3][15] ,
       \theDigitalBlock_counter_val[3][16] ;
  wire \theDigitalBlock_counter_val[3][17] ,
       \theDigitalBlock_counter_val[3][18] ,
       \theDigitalBlock_counter_val[3][19] ,
       \theDigitalBlock_counter_val[3][20] ,
       \theDigitalBlock_counter_val[3][21] ,
       \theDigitalBlock_counter_val[3][22] ,
       \theDigitalBlock_counter_val[3][23] ,
       \theDigitalBlock_counter_val[3][24] ;
  wire \theDigitalBlock_counter_val[3][25] ,
       \theDigitalBlock_counter_val[3][26] ,
       \theDigitalBlock_counter_val[3][27] ,
       \theDigitalBlock_counter_val[3][28] ,
       \theDigitalBlock_counter_val[3][29] ,
       \theDigitalBlock_counter_val[3][30] ,
       \theDigitalBlock_counter_val[3][31] ,
       \theDigitalBlock_counter_val[4][0] ;
  wire \theDigitalBlock_counter_val[4][1] ,
       \theDigitalBlock_counter_val[4][2] ,
       \theDigitalBlock_counter_val[4][3] ,
       \theDigitalBlock_counter_val[4][4] ,
       \theDigitalBlock_counter_val[4][5] ,
       \theDigitalBlock_counter_val[4][6] ,
       \theDigitalBlock_counter_val[4][7] ,
       \theDigitalBlock_counter_val[4][8] ;
  wire \theDigitalBlock_counter_val[4][9] ,
       \theDigitalBlock_counter_val[4][10] ,
       \theDigitalBlock_counter_val[4][11] ,
       \theDigitalBlock_counter_val[4][12] ,
       \theDigitalBlock_counter_val[4][13] ,
       \theDigitalBlock_counter_val[4][14] ,
       \theDigitalBlock_counter_val[4][15] ,
       \theDigitalBlock_counter_val[4][16] ;
  wire \theDigitalBlock_counter_val[4][17] ,
       \theDigitalBlock_counter_val[4][18] ,
       \theDigitalBlock_counter_val[4][19] ,
       \theDigitalBlock_counter_val[4][20] ,
       \theDigitalBlock_counter_val[4][21] ,
       \theDigitalBlock_counter_val[4][22] ,
       \theDigitalBlock_counter_val[4][23] ,
       \theDigitalBlock_counter_val[4][24] ;
  wire \theDigitalBlock_counter_val[4][25] ,
       \theDigitalBlock_counter_val[4][26] ,
       \theDigitalBlock_counter_val[4][27] ,
       \theDigitalBlock_counter_val[4][28] ,
       \theDigitalBlock_counter_val[4][29] ,
       \theDigitalBlock_counter_val[4][30] ,
       \theDigitalBlock_counter_val[4][31] , theDigitalBlock_en_osc_out;
  wire theDigitalBlock_n_5, theDigitalBlock_n_6,
       theDigitalBlock_u_i2cSlave_clearStartStopDet,
       theDigitalBlock_u_i2cSlave_n_144,
       theDigitalBlock_u_i2cSlave_n_259,
       theDigitalBlock_u_i2cSlave_sclDeb,
       theDigitalBlock_u_i2cSlave_sdaDeb,
       theDigitalBlock_u_i2cSlave_sdaOut;
  wire theDigitalBlock_u_i2cSlave_startEdgeDet;
  analogPxArray theAnalogBlock(.clk_px (clk_px[18:0]), .stop_osc
       ({1'b1, stop_osc[3:0]}));
  increment_unsigned_53_54_442
       theDigitalBlock_counterChip1_inc_add_34_11_2(.A
       ({\theDigitalBlock_counter_val[0][31] ,
       \theDigitalBlock_counter_val[0][30] ,
       \theDigitalBlock_counter_val[0][29] ,
       \theDigitalBlock_counter_val[0][28] ,
       \theDigitalBlock_counter_val[0][27] ,
       \theDigitalBlock_counter_val[0][26] ,
       \theDigitalBlock_counter_val[0][25] ,
       \theDigitalBlock_counter_val[0][24] ,
       \theDigitalBlock_counter_val[0][23] ,
       \theDigitalBlock_counter_val[0][22] ,
       \theDigitalBlock_counter_val[0][21] ,
       \theDigitalBlock_counter_val[0][20] ,
       \theDigitalBlock_counter_val[0][19] ,
       \theDigitalBlock_counter_val[0][18] ,
       \theDigitalBlock_counter_val[0][17] ,
       \theDigitalBlock_counter_val[0][16] ,
       \theDigitalBlock_counter_val[0][15] ,
       \theDigitalBlock_counter_val[0][14] ,
       \theDigitalBlock_counter_val[0][13] ,
       \theDigitalBlock_counter_val[0][12] ,
       \theDigitalBlock_counter_val[0][11] ,
       \theDigitalBlock_counter_val[0][10] ,
       \theDigitalBlock_counter_val[0][9] ,
       \theDigitalBlock_counter_val[0][8] ,
       \theDigitalBlock_counter_val[0][7] ,
       \theDigitalBlock_counter_val[0][6] ,
       \theDigitalBlock_counter_val[0][5] ,
       \theDigitalBlock_counter_val[0][4] ,
       \theDigitalBlock_counter_val[0][3] ,
       \theDigitalBlock_counter_val[0][2] ,
       \theDigitalBlock_counter_val[0][1] ,
       \theDigitalBlock_counter_val[0][0] }), .CI (1'b1), .Z
       ({theDigitalBlock_counterChip1_n_99,
       theDigitalBlock_counterChip1_n_97,
       theDigitalBlock_counterChip1_n_95,
       theDigitalBlock_counterChip1_n_93,
       theDigitalBlock_counterChip1_n_91,
       theDigitalBlock_counterChip1_n_89,
       theDigitalBlock_counterChip1_n_87,
       theDigitalBlock_counterChip1_n_85,
       theDigitalBlock_counterChip1_n_83,
       theDigitalBlock_counterChip1_n_81,
       theDigitalBlock_counterChip1_n_79,
       theDigitalBlock_counterChip1_n_77,
       theDigitalBlock_counterChip1_n_75,
       theDigitalBlock_counterChip1_n_73,
       theDigitalBlock_counterChip1_n_71,
       theDigitalBlock_counterChip1_n_69,
       theDigitalBlock_counterChip1_n_67,
       theDigitalBlock_counterChip1_n_65,
       theDigitalBlock_counterChip1_n_63,
       theDigitalBlock_counterChip1_n_61,
       theDigitalBlock_counterChip1_n_59,
       theDigitalBlock_counterChip1_n_57,
       theDigitalBlock_counterChip1_n_55,
       theDigitalBlock_counterChip1_n_53,
       theDigitalBlock_counterChip1_n_51,
       theDigitalBlock_counterChip1_n_49,
       theDigitalBlock_counterChip1_n_47,
       theDigitalBlock_counterChip1_n_45,
       theDigitalBlock_counterChip1_n_43,
       theDigitalBlock_counterChip1_n_41,
       theDigitalBlock_counterChip1_n_39, UNCONNECTED0}));
  increment_unsigned_53_54_443
       theDigitalBlock_counterChip2_inc_add_34_11_2(.A
       ({\theDigitalBlock_counter_val[1][31] ,
       \theDigitalBlock_counter_val[1][30] ,
       \theDigitalBlock_counter_val[1][29] ,
       \theDigitalBlock_counter_val[1][28] ,
       \theDigitalBlock_counter_val[1][27] ,
       \theDigitalBlock_counter_val[1][26] ,
       \theDigitalBlock_counter_val[1][25] ,
       \theDigitalBlock_counter_val[1][24] ,
       \theDigitalBlock_counter_val[1][23] ,
       \theDigitalBlock_counter_val[1][22] ,
       \theDigitalBlock_counter_val[1][21] ,
       \theDigitalBlock_counter_val[1][20] ,
       \theDigitalBlock_counter_val[1][19] ,
       \theDigitalBlock_counter_val[1][18] ,
       \theDigitalBlock_counter_val[1][17] ,
       \theDigitalBlock_counter_val[1][16] ,
       \theDigitalBlock_counter_val[1][15] ,
       \theDigitalBlock_counter_val[1][14] ,
       \theDigitalBlock_counter_val[1][13] ,
       \theDigitalBlock_counter_val[1][12] ,
       \theDigitalBlock_counter_val[1][11] ,
       \theDigitalBlock_counter_val[1][10] ,
       \theDigitalBlock_counter_val[1][9] ,
       \theDigitalBlock_counter_val[1][8] ,
       \theDigitalBlock_counter_val[1][7] ,
       \theDigitalBlock_counter_val[1][6] ,
       \theDigitalBlock_counter_val[1][5] ,
       \theDigitalBlock_counter_val[1][4] ,
       \theDigitalBlock_counter_val[1][3] ,
       \theDigitalBlock_counter_val[1][2] ,
       \theDigitalBlock_counter_val[1][1] ,
       \theDigitalBlock_counter_val[1][0] }), .CI (1'b1), .Z
       ({theDigitalBlock_counterChip2_n_99,
       theDigitalBlock_counterChip2_n_97,
       theDigitalBlock_counterChip2_n_95,
       theDigitalBlock_counterChip2_n_93,
       theDigitalBlock_counterChip2_n_91,
       theDigitalBlock_counterChip2_n_89,
       theDigitalBlock_counterChip2_n_87,
       theDigitalBlock_counterChip2_n_85,
       theDigitalBlock_counterChip2_n_83,
       theDigitalBlock_counterChip2_n_81,
       theDigitalBlock_counterChip2_n_79,
       theDigitalBlock_counterChip2_n_77,
       theDigitalBlock_counterChip2_n_75,
       theDigitalBlock_counterChip2_n_73,
       theDigitalBlock_counterChip2_n_71,
       theDigitalBlock_counterChip2_n_69,
       theDigitalBlock_counterChip2_n_67,
       theDigitalBlock_counterChip2_n_65,
       theDigitalBlock_counterChip2_n_63,
       theDigitalBlock_counterChip2_n_61,
       theDigitalBlock_counterChip2_n_59,
       theDigitalBlock_counterChip2_n_57,
       theDigitalBlock_counterChip2_n_55,
       theDigitalBlock_counterChip2_n_53,
       theDigitalBlock_counterChip2_n_51,
       theDigitalBlock_counterChip2_n_49,
       theDigitalBlock_counterChip2_n_47,
       theDigitalBlock_counterChip2_n_45,
       theDigitalBlock_counterChip2_n_43,
       theDigitalBlock_counterChip2_n_41,
       theDigitalBlock_counterChip2_n_39, UNCONNECTED1}));
  increment_unsigned_53_54_444
       theDigitalBlock_counterChip3_inc_add_34_11_2(.A
       ({\theDigitalBlock_counter_val[2][31] ,
       \theDigitalBlock_counter_val[2][30] ,
       \theDigitalBlock_counter_val[2][29] ,
       \theDigitalBlock_counter_val[2][28] ,
       \theDigitalBlock_counter_val[2][27] ,
       \theDigitalBlock_counter_val[2][26] ,
       \theDigitalBlock_counter_val[2][25] ,
       \theDigitalBlock_counter_val[2][24] ,
       \theDigitalBlock_counter_val[2][23] ,
       \theDigitalBlock_counter_val[2][22] ,
       \theDigitalBlock_counter_val[2][21] ,
       \theDigitalBlock_counter_val[2][20] ,
       \theDigitalBlock_counter_val[2][19] ,
       \theDigitalBlock_counter_val[2][18] ,
       \theDigitalBlock_counter_val[2][17] ,
       \theDigitalBlock_counter_val[2][16] ,
       \theDigitalBlock_counter_val[2][15] ,
       \theDigitalBlock_counter_val[2][14] ,
       \theDigitalBlock_counter_val[2][13] ,
       \theDigitalBlock_counter_val[2][12] ,
       \theDigitalBlock_counter_val[2][11] ,
       \theDigitalBlock_counter_val[2][10] ,
       \theDigitalBlock_counter_val[2][9] ,
       \theDigitalBlock_counter_val[2][8] ,
       \theDigitalBlock_counter_val[2][7] ,
       \theDigitalBlock_counter_val[2][6] ,
       \theDigitalBlock_counter_val[2][5] ,
       \theDigitalBlock_counter_val[2][4] ,
       \theDigitalBlock_counter_val[2][3] ,
       \theDigitalBlock_counter_val[2][2] ,
       \theDigitalBlock_counter_val[2][1] ,
       \theDigitalBlock_counter_val[2][0] }), .CI (1'b1), .Z
       ({theDigitalBlock_counterChip3_n_99,
       theDigitalBlock_counterChip3_n_97,
       theDigitalBlock_counterChip3_n_95,
       theDigitalBlock_counterChip3_n_93,
       theDigitalBlock_counterChip3_n_91,
       theDigitalBlock_counterChip3_n_89,
       theDigitalBlock_counterChip3_n_87,
       theDigitalBlock_counterChip3_n_85,
       theDigitalBlock_counterChip3_n_83,
       theDigitalBlock_counterChip3_n_81,
       theDigitalBlock_counterChip3_n_79,
       theDigitalBlock_counterChip3_n_77,
       theDigitalBlock_counterChip3_n_75,
       theDigitalBlock_counterChip3_n_73,
       theDigitalBlock_counterChip3_n_71,
       theDigitalBlock_counterChip3_n_69,
       theDigitalBlock_counterChip3_n_67,
       theDigitalBlock_counterChip3_n_65,
       theDigitalBlock_counterChip3_n_63,
       theDigitalBlock_counterChip3_n_61,
       theDigitalBlock_counterChip3_n_59,
       theDigitalBlock_counterChip3_n_57,
       theDigitalBlock_counterChip3_n_55,
       theDigitalBlock_counterChip3_n_53,
       theDigitalBlock_counterChip3_n_51,
       theDigitalBlock_counterChip3_n_49,
       theDigitalBlock_counterChip3_n_47,
       theDigitalBlock_counterChip3_n_45,
       theDigitalBlock_counterChip3_n_43,
       theDigitalBlock_counterChip3_n_41,
       theDigitalBlock_counterChip3_n_39, UNCONNECTED2}));
  increment_unsigned_53_54_445
       theDigitalBlock_counterChip4_inc_add_34_11_2(.A
       ({\theDigitalBlock_counter_val[3][31] ,
       \theDigitalBlock_counter_val[3][30] ,
       \theDigitalBlock_counter_val[3][29] ,
       \theDigitalBlock_counter_val[3][28] ,
       \theDigitalBlock_counter_val[3][27] ,
       \theDigitalBlock_counter_val[3][26] ,
       \theDigitalBlock_counter_val[3][25] ,
       \theDigitalBlock_counter_val[3][24] ,
       \theDigitalBlock_counter_val[3][23] ,
       \theDigitalBlock_counter_val[3][22] ,
       \theDigitalBlock_counter_val[3][21] ,
       \theDigitalBlock_counter_val[3][20] ,
       \theDigitalBlock_counter_val[3][19] ,
       \theDigitalBlock_counter_val[3][18] ,
       \theDigitalBlock_counter_val[3][17] ,
       \theDigitalBlock_counter_val[3][16] ,
       \theDigitalBlock_counter_val[3][15] ,
       \theDigitalBlock_counter_val[3][14] ,
       \theDigitalBlock_counter_val[3][13] ,
       \theDigitalBlock_counter_val[3][12] ,
       \theDigitalBlock_counter_val[3][11] ,
       \theDigitalBlock_counter_val[3][10] ,
       \theDigitalBlock_counter_val[3][9] ,
       \theDigitalBlock_counter_val[3][8] ,
       \theDigitalBlock_counter_val[3][7] ,
       \theDigitalBlock_counter_val[3][6] ,
       \theDigitalBlock_counter_val[3][5] ,
       \theDigitalBlock_counter_val[3][4] ,
       \theDigitalBlock_counter_val[3][3] ,
       \theDigitalBlock_counter_val[3][2] ,
       \theDigitalBlock_counter_val[3][1] ,
       \theDigitalBlock_counter_val[3][0] }), .CI (1'b1), .Z
       ({theDigitalBlock_counterChip4_n_99,
       theDigitalBlock_counterChip4_n_97,
       theDigitalBlock_counterChip4_n_95,
       theDigitalBlock_counterChip4_n_93,
       theDigitalBlock_counterChip4_n_91,
       theDigitalBlock_counterChip4_n_89,
       theDigitalBlock_counterChip4_n_87,
       theDigitalBlock_counterChip4_n_85,
       theDigitalBlock_counterChip4_n_83,
       theDigitalBlock_counterChip4_n_81,
       theDigitalBlock_counterChip4_n_79,
       theDigitalBlock_counterChip4_n_77,
       theDigitalBlock_counterChip4_n_75,
       theDigitalBlock_counterChip4_n_73,
       theDigitalBlock_counterChip4_n_71,
       theDigitalBlock_counterChip4_n_69,
       theDigitalBlock_counterChip4_n_67,
       theDigitalBlock_counterChip4_n_65,
       theDigitalBlock_counterChip4_n_63,
       theDigitalBlock_counterChip4_n_61,
       theDigitalBlock_counterChip4_n_59,
       theDigitalBlock_counterChip4_n_57,
       theDigitalBlock_counterChip4_n_55,
       theDigitalBlock_counterChip4_n_53,
       theDigitalBlock_counterChip4_n_51,
       theDigitalBlock_counterChip4_n_49,
       theDigitalBlock_counterChip4_n_47,
       theDigitalBlock_counterChip4_n_45,
       theDigitalBlock_counterChip4_n_43,
       theDigitalBlock_counterChip4_n_41,
       theDigitalBlock_counterChip4_n_39, UNCONNECTED3}));
  increment_unsigned_53_54
       theDigitalBlock_counterChip5_inc_add_34_11_2(.A
       ({\theDigitalBlock_counter_val[4][31] ,
       \theDigitalBlock_counter_val[4][30] ,
       \theDigitalBlock_counter_val[4][29] ,
       \theDigitalBlock_counter_val[4][28] ,
       \theDigitalBlock_counter_val[4][27] ,
       \theDigitalBlock_counter_val[4][26] ,
       \theDigitalBlock_counter_val[4][25] ,
       \theDigitalBlock_counter_val[4][24] ,
       \theDigitalBlock_counter_val[4][23] ,
       \theDigitalBlock_counter_val[4][22] ,
       \theDigitalBlock_counter_val[4][21] ,
       \theDigitalBlock_counter_val[4][20] ,
       \theDigitalBlock_counter_val[4][19] ,
       \theDigitalBlock_counter_val[4][18] ,
       \theDigitalBlock_counter_val[4][17] ,
       \theDigitalBlock_counter_val[4][16] ,
       \theDigitalBlock_counter_val[4][15] ,
       \theDigitalBlock_counter_val[4][14] ,
       \theDigitalBlock_counter_val[4][13] ,
       \theDigitalBlock_counter_val[4][12] ,
       \theDigitalBlock_counter_val[4][11] ,
       \theDigitalBlock_counter_val[4][10] ,
       \theDigitalBlock_counter_val[4][9] ,
       \theDigitalBlock_counter_val[4][8] ,
       \theDigitalBlock_counter_val[4][7] ,
       \theDigitalBlock_counter_val[4][6] ,
       \theDigitalBlock_counter_val[4][5] ,
       \theDigitalBlock_counter_val[4][4] ,
       \theDigitalBlock_counter_val[4][3] ,
       \theDigitalBlock_counter_val[4][2] ,
       \theDigitalBlock_counter_val[4][1] ,
       \theDigitalBlock_counter_val[4][0] }), .CI (1'b1), .Z
       ({theDigitalBlock_counterChip5_n_99,
       theDigitalBlock_counterChip5_n_97,
       theDigitalBlock_counterChip5_n_95,
       theDigitalBlock_counterChip5_n_93,
       theDigitalBlock_counterChip5_n_91,
       theDigitalBlock_counterChip5_n_89,
       theDigitalBlock_counterChip5_n_87,
       theDigitalBlock_counterChip5_n_85,
       theDigitalBlock_counterChip5_n_83,
       theDigitalBlock_counterChip5_n_81,
       theDigitalBlock_counterChip5_n_79,
       theDigitalBlock_counterChip5_n_77,
       theDigitalBlock_counterChip5_n_75,
       theDigitalBlock_counterChip5_n_73,
       theDigitalBlock_counterChip5_n_71,
       theDigitalBlock_counterChip5_n_69,
       theDigitalBlock_counterChip5_n_67,
       theDigitalBlock_counterChip5_n_65,
       theDigitalBlock_counterChip5_n_63,
       theDigitalBlock_counterChip5_n_61,
       theDigitalBlock_counterChip5_n_59,
       theDigitalBlock_counterChip5_n_57,
       theDigitalBlock_counterChip5_n_55,
       theDigitalBlock_counterChip5_n_53,
       theDigitalBlock_counterChip5_n_51,
       theDigitalBlock_counterChip5_n_49,
       theDigitalBlock_counterChip5_n_47,
       theDigitalBlock_counterChip5_n_45,
       theDigitalBlock_counterChip5_n_43,
       theDigitalBlock_counterChip5_n_41,
       theDigitalBlock_counterChip5_n_39, UNCONNECTED4}));
  chipBusController_p4 theDigitalBlock_logicUnit(.clk (clk), .rst
       (rst), .counter_val1 ({\theDigitalBlock_counter_val[0][31] ,
       \theDigitalBlock_counter_val[0][30] ,
       \theDigitalBlock_counter_val[0][29] ,
       \theDigitalBlock_counter_val[0][28] ,
       \theDigitalBlock_counter_val[0][27] ,
       \theDigitalBlock_counter_val[0][26] ,
       \theDigitalBlock_counter_val[0][25] ,
       \theDigitalBlock_counter_val[0][24] ,
       \theDigitalBlock_counter_val[0][23] ,
       \theDigitalBlock_counter_val[0][22] ,
       \theDigitalBlock_counter_val[0][21] ,
       \theDigitalBlock_counter_val[0][20] ,
       \theDigitalBlock_counter_val[0][19] ,
       \theDigitalBlock_counter_val[0][18] ,
       \theDigitalBlock_counter_val[0][17] ,
       \theDigitalBlock_counter_val[0][16] ,
       \theDigitalBlock_counter_val[0][15] ,
       \theDigitalBlock_counter_val[0][14] ,
       \theDigitalBlock_counter_val[0][13] ,
       \theDigitalBlock_counter_val[0][12] ,
       \theDigitalBlock_counter_val[0][11] ,
       \theDigitalBlock_counter_val[0][10] ,
       \theDigitalBlock_counter_val[0][9] ,
       \theDigitalBlock_counter_val[0][8] ,
       \theDigitalBlock_counter_val[0][7] ,
       \theDigitalBlock_counter_val[0][6] ,
       \theDigitalBlock_counter_val[0][5] ,
       \theDigitalBlock_counter_val[0][4] ,
       \theDigitalBlock_counter_val[0][3] ,
       \theDigitalBlock_counter_val[0][2] ,
       \theDigitalBlock_counter_val[0][1] ,
       \theDigitalBlock_counter_val[0][0] }), .counter_val2
       ({\theDigitalBlock_counter_val[1][31] ,
       \theDigitalBlock_counter_val[1][30] ,
       \theDigitalBlock_counter_val[1][29] ,
       \theDigitalBlock_counter_val[1][28] ,
       \theDigitalBlock_counter_val[1][27] ,
       \theDigitalBlock_counter_val[1][26] ,
       \theDigitalBlock_counter_val[1][25] ,
       \theDigitalBlock_counter_val[1][24] ,
       \theDigitalBlock_counter_val[1][23] ,
       \theDigitalBlock_counter_val[1][22] ,
       \theDigitalBlock_counter_val[1][21] ,
       \theDigitalBlock_counter_val[1][20] ,
       \theDigitalBlock_counter_val[1][19] ,
       \theDigitalBlock_counter_val[1][18] ,
       \theDigitalBlock_counter_val[1][17] ,
       \theDigitalBlock_counter_val[1][16] ,
       \theDigitalBlock_counter_val[1][15] ,
       \theDigitalBlock_counter_val[1][14] ,
       \theDigitalBlock_counter_val[1][13] ,
       \theDigitalBlock_counter_val[1][12] ,
       \theDigitalBlock_counter_val[1][11] ,
       \theDigitalBlock_counter_val[1][10] ,
       \theDigitalBlock_counter_val[1][9] ,
       \theDigitalBlock_counter_val[1][8] ,
       \theDigitalBlock_counter_val[1][7] ,
       \theDigitalBlock_counter_val[1][6] ,
       \theDigitalBlock_counter_val[1][5] ,
       \theDigitalBlock_counter_val[1][4] ,
       \theDigitalBlock_counter_val[1][3] ,
       \theDigitalBlock_counter_val[1][2] ,
       \theDigitalBlock_counter_val[1][1] ,
       \theDigitalBlock_counter_val[1][0] }), .counter_val3
       ({\theDigitalBlock_counter_val[2][31] ,
       \theDigitalBlock_counter_val[2][30] ,
       \theDigitalBlock_counter_val[2][29] ,
       \theDigitalBlock_counter_val[2][28] ,
       \theDigitalBlock_counter_val[2][27] ,
       \theDigitalBlock_counter_val[2][26] ,
       \theDigitalBlock_counter_val[2][25] ,
       \theDigitalBlock_counter_val[2][24] ,
       \theDigitalBlock_counter_val[2][23] ,
       \theDigitalBlock_counter_val[2][22] ,
       \theDigitalBlock_counter_val[2][21] ,
       \theDigitalBlock_counter_val[2][20] ,
       \theDigitalBlock_counter_val[2][19] ,
       \theDigitalBlock_counter_val[2][18] ,
       \theDigitalBlock_counter_val[2][17] ,
       \theDigitalBlock_counter_val[2][16] ,
       \theDigitalBlock_counter_val[2][15] ,
       \theDigitalBlock_counter_val[2][14] ,
       \theDigitalBlock_counter_val[2][13] ,
       \theDigitalBlock_counter_val[2][12] ,
       \theDigitalBlock_counter_val[2][11] ,
       \theDigitalBlock_counter_val[2][10] ,
       \theDigitalBlock_counter_val[2][9] ,
       \theDigitalBlock_counter_val[2][8] ,
       \theDigitalBlock_counter_val[2][7] ,
       \theDigitalBlock_counter_val[2][6] ,
       \theDigitalBlock_counter_val[2][5] ,
       \theDigitalBlock_counter_val[2][4] ,
       \theDigitalBlock_counter_val[2][3] ,
       \theDigitalBlock_counter_val[2][2] ,
       \theDigitalBlock_counter_val[2][1] ,
       \theDigitalBlock_counter_val[2][0] }), .counter_val4
       ({\theDigitalBlock_counter_val[3][31] ,
       \theDigitalBlock_counter_val[3][30] ,
       \theDigitalBlock_counter_val[3][29] ,
       \theDigitalBlock_counter_val[3][28] ,
       \theDigitalBlock_counter_val[3][27] ,
       \theDigitalBlock_counter_val[3][26] ,
       \theDigitalBlock_counter_val[3][25] ,
       \theDigitalBlock_counter_val[3][24] ,
       \theDigitalBlock_counter_val[3][23] ,
       \theDigitalBlock_counter_val[3][22] ,
       \theDigitalBlock_counter_val[3][21] ,
       \theDigitalBlock_counter_val[3][20] ,
       \theDigitalBlock_counter_val[3][19] ,
       \theDigitalBlock_counter_val[3][18] ,
       \theDigitalBlock_counter_val[3][17] ,
       \theDigitalBlock_counter_val[3][16] ,
       \theDigitalBlock_counter_val[3][15] ,
       \theDigitalBlock_counter_val[3][14] ,
       \theDigitalBlock_counter_val[3][13] ,
       \theDigitalBlock_counter_val[3][12] ,
       \theDigitalBlock_counter_val[3][11] ,
       \theDigitalBlock_counter_val[3][10] ,
       \theDigitalBlock_counter_val[3][9] ,
       \theDigitalBlock_counter_val[3][8] ,
       \theDigitalBlock_counter_val[3][7] ,
       \theDigitalBlock_counter_val[3][6] ,
       \theDigitalBlock_counter_val[3][5] ,
       \theDigitalBlock_counter_val[3][4] ,
       \theDigitalBlock_counter_val[3][3] ,
       \theDigitalBlock_counter_val[3][2] ,
       \theDigitalBlock_counter_val[3][1] ,
       \theDigitalBlock_counter_val[3][0] }), .counter_val5
       ({\theDigitalBlock_counter_val[4][31] ,
       \theDigitalBlock_counter_val[4][30] ,
       \theDigitalBlock_counter_val[4][29] ,
       \theDigitalBlock_counter_val[4][28] ,
       \theDigitalBlock_counter_val[4][27] ,
       \theDigitalBlock_counter_val[4][26] ,
       \theDigitalBlock_counter_val[4][25] ,
       \theDigitalBlock_counter_val[4][24] ,
       \theDigitalBlock_counter_val[4][23] ,
       \theDigitalBlock_counter_val[4][22] ,
       \theDigitalBlock_counter_val[4][21] ,
       \theDigitalBlock_counter_val[4][20] ,
       \theDigitalBlock_counter_val[4][19] ,
       \theDigitalBlock_counter_val[4][18] ,
       \theDigitalBlock_counter_val[4][17] ,
       \theDigitalBlock_counter_val[4][16] ,
       \theDigitalBlock_counter_val[4][15] ,
       \theDigitalBlock_counter_val[4][14] ,
       \theDigitalBlock_counter_val[4][13] ,
       \theDigitalBlock_counter_val[4][12] ,
       \theDigitalBlock_counter_val[4][11] ,
       \theDigitalBlock_counter_val[4][10] ,
       \theDigitalBlock_counter_val[4][9] ,
       \theDigitalBlock_counter_val[4][8] ,
       \theDigitalBlock_counter_val[4][7] ,
       \theDigitalBlock_counter_val[4][6] ,
       \theDigitalBlock_counter_val[4][5] ,
       \theDigitalBlock_counter_val[4][4] ,
       \theDigitalBlock_counter_val[4][3] ,
       \theDigitalBlock_counter_val[4][2] ,
       \theDigitalBlock_counter_val[4][1] ,
       \theDigitalBlock_counter_val[4][0] }), .px_addr
       ({theDigitalBlock_n_6, theDigitalBlock_n_5}), .stop_osc
       ({UNCONNECTED5, stop_osc[3:0]}), .clr_counter
       (theDigitalBlock_clr_counter), .drdy (drdy), .sampleOut
       (theDigitalBlock_sampleOut), .ack_received
       (theDigitalBlock_ack_received), .en_osc_out
       (theDigitalBlock_en_osc_out));
  serialInterface_v2
       theDigitalBlock_u_i2cSlave_u_serialInterface(.clearStartStopDet
       (theDigitalBlock_u_i2cSlave_clearStartStopDet), .clk (clk),
       .dataIn (theDigitalBlock_u_i2cSlave_dataFromRegIF), .dataOut
       ({UNCONNECTED13, UNCONNECTED12, UNCONNECTED11, UNCONNECTED10,
       UNCONNECTED9, UNCONNECTED8, UNCONNECTED7, UNCONNECTED6}),
       .regAddr (theDigitalBlock_u_i2cSlave_regAddr), .rst
       (theDigitalBlock_u_i2cSlave_n_144), .scl
       (theDigitalBlock_u_i2cSlave_sclDelayed[4]), .sdaIn
       (theDigitalBlock_u_i2cSlave_sdaDeb), .sdaOut
       (theDigitalBlock_u_i2cSlave_sdaOut), .startStopDetState
       ({theDigitalBlock_ack_received,
       theDigitalBlock_u_i2cSlave_startStopDetState[0]}), .writeEn
       (UNCONNECTED14), .ack_received (UNCONNECTED15), .statusLED
       (theDigitalBlock_u_i2cSlave_n_259));
  INVX1 g372(.A (theDigitalBlock_clr_counter), .Y (n_107));
  DFFSR \theDigitalBlock_counterChip1_q_reg[0] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (n_80), .Q (\theDigitalBlock_counter_val[0][0]
       ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[10] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_57), .Q
       (\theDigitalBlock_counter_val[0][10] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[11] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_59), .Q
       (\theDigitalBlock_counter_val[0][11] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[12] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_61), .Q
       (\theDigitalBlock_counter_val[0][12] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[13] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_63), .Q
       (\theDigitalBlock_counter_val[0][13] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[14] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_65), .Q
       (\theDigitalBlock_counter_val[0][14] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[15] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_67), .Q
       (\theDigitalBlock_counter_val[0][15] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[16] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_69), .Q
       (\theDigitalBlock_counter_val[0][16] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[17] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_71), .Q
       (\theDigitalBlock_counter_val[0][17] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[18] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_73), .Q
       (\theDigitalBlock_counter_val[0][18] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[19] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_75), .Q
       (\theDigitalBlock_counter_val[0][19] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[1] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_39), .Q
       (\theDigitalBlock_counter_val[0][1] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[20] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_77), .Q
       (\theDigitalBlock_counter_val[0][20] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[21] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_79), .Q
       (\theDigitalBlock_counter_val[0][21] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[22] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_81), .Q
       (\theDigitalBlock_counter_val[0][22] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[23] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_83), .Q
       (\theDigitalBlock_counter_val[0][23] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[24] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_85), .Q
       (\theDigitalBlock_counter_val[0][24] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[25] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_87), .Q
       (\theDigitalBlock_counter_val[0][25] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[26] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_89), .Q
       (\theDigitalBlock_counter_val[0][26] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[27] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_91), .Q
       (\theDigitalBlock_counter_val[0][27] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[28] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_93), .Q
       (\theDigitalBlock_counter_val[0][28] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[29] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_95), .Q
       (\theDigitalBlock_counter_val[0][29] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[2] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_41), .Q
       (\theDigitalBlock_counter_val[0][2] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[30] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_97), .Q
       (\theDigitalBlock_counter_val[0][30] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[31] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_99), .Q
       (\theDigitalBlock_counter_val[0][31] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[3] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_43), .Q
       (\theDigitalBlock_counter_val[0][3] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[4] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_45), .Q
       (\theDigitalBlock_counter_val[0][4] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[5] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_47), .Q
       (\theDigitalBlock_counter_val[0][5] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[6] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_49), .Q
       (\theDigitalBlock_counter_val[0][6] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[7] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_51), .Q
       (\theDigitalBlock_counter_val[0][7] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[8] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_53), .Q
       (\theDigitalBlock_counter_val[0][8] ));
  DFFSR \theDigitalBlock_counterChip1_q_reg[9] (.R (n_107), .S (1'b1),
       .CLK (n_106), .D (theDigitalBlock_counterChip1_n_55), .Q
       (\theDigitalBlock_counter_val[0][9] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[0] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (n_82), .Q (\theDigitalBlock_counter_val[1][0]
       ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[10] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_57), .Q
       (\theDigitalBlock_counter_val[1][10] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[11] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_59), .Q
       (\theDigitalBlock_counter_val[1][11] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[12] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_61), .Q
       (\theDigitalBlock_counter_val[1][12] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[13] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_63), .Q
       (\theDigitalBlock_counter_val[1][13] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[14] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_65), .Q
       (\theDigitalBlock_counter_val[1][14] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[15] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_67), .Q
       (\theDigitalBlock_counter_val[1][15] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[16] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_69), .Q
       (\theDigitalBlock_counter_val[1][16] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[17] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_71), .Q
       (\theDigitalBlock_counter_val[1][17] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[18] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_73), .Q
       (\theDigitalBlock_counter_val[1][18] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[19] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_75), .Q
       (\theDigitalBlock_counter_val[1][19] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[1] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_39), .Q
       (\theDigitalBlock_counter_val[1][1] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[20] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_77), .Q
       (\theDigitalBlock_counter_val[1][20] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[21] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_79), .Q
       (\theDigitalBlock_counter_val[1][21] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[22] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_81), .Q
       (\theDigitalBlock_counter_val[1][22] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[23] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_83), .Q
       (\theDigitalBlock_counter_val[1][23] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[24] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_85), .Q
       (\theDigitalBlock_counter_val[1][24] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[25] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_87), .Q
       (\theDigitalBlock_counter_val[1][25] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[26] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_89), .Q
       (\theDigitalBlock_counter_val[1][26] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[27] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_91), .Q
       (\theDigitalBlock_counter_val[1][27] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[28] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_93), .Q
       (\theDigitalBlock_counter_val[1][28] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[29] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_95), .Q
       (\theDigitalBlock_counter_val[1][29] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[2] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_41), .Q
       (\theDigitalBlock_counter_val[1][2] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[30] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_97), .Q
       (\theDigitalBlock_counter_val[1][30] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[31] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_99), .Q
       (\theDigitalBlock_counter_val[1][31] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[3] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_43), .Q
       (\theDigitalBlock_counter_val[1][3] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[4] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_45), .Q
       (\theDigitalBlock_counter_val[1][4] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[5] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_47), .Q
       (\theDigitalBlock_counter_val[1][5] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[6] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_49), .Q
       (\theDigitalBlock_counter_val[1][6] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[7] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_51), .Q
       (\theDigitalBlock_counter_val[1][7] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[8] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_53), .Q
       (\theDigitalBlock_counter_val[1][8] ));
  DFFSR \theDigitalBlock_counterChip2_q_reg[9] (.R (n_107), .S (1'b1),
       .CLK (n_103), .D (theDigitalBlock_counterChip2_n_55), .Q
       (\theDigitalBlock_counter_val[1][9] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[0] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (n_79), .Q (\theDigitalBlock_counter_val[2][0]
       ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[10] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_57), .Q
       (\theDigitalBlock_counter_val[2][10] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[11] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_59), .Q
       (\theDigitalBlock_counter_val[2][11] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[12] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_61), .Q
       (\theDigitalBlock_counter_val[2][12] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[13] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_63), .Q
       (\theDigitalBlock_counter_val[2][13] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[14] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_65), .Q
       (\theDigitalBlock_counter_val[2][14] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[15] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_67), .Q
       (\theDigitalBlock_counter_val[2][15] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[16] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_69), .Q
       (\theDigitalBlock_counter_val[2][16] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[17] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_71), .Q
       (\theDigitalBlock_counter_val[2][17] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[18] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_73), .Q
       (\theDigitalBlock_counter_val[2][18] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[19] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_75), .Q
       (\theDigitalBlock_counter_val[2][19] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[1] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_39), .Q
       (\theDigitalBlock_counter_val[2][1] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[20] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_77), .Q
       (\theDigitalBlock_counter_val[2][20] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[21] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_79), .Q
       (\theDigitalBlock_counter_val[2][21] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[22] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_81), .Q
       (\theDigitalBlock_counter_val[2][22] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[23] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_83), .Q
       (\theDigitalBlock_counter_val[2][23] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[24] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_85), .Q
       (\theDigitalBlock_counter_val[2][24] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[25] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_87), .Q
       (\theDigitalBlock_counter_val[2][25] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[26] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_89), .Q
       (\theDigitalBlock_counter_val[2][26] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[27] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_91), .Q
       (\theDigitalBlock_counter_val[2][27] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[28] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_93), .Q
       (\theDigitalBlock_counter_val[2][28] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[29] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_95), .Q
       (\theDigitalBlock_counter_val[2][29] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[2] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_41), .Q
       (\theDigitalBlock_counter_val[2][2] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[30] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_97), .Q
       (\theDigitalBlock_counter_val[2][30] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[31] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_99), .Q
       (\theDigitalBlock_counter_val[2][31] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[3] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_43), .Q
       (\theDigitalBlock_counter_val[2][3] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[4] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_45), .Q
       (\theDigitalBlock_counter_val[2][4] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[5] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_47), .Q
       (\theDigitalBlock_counter_val[2][5] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[6] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_49), .Q
       (\theDigitalBlock_counter_val[2][6] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[7] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_51), .Q
       (\theDigitalBlock_counter_val[2][7] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[8] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_53), .Q
       (\theDigitalBlock_counter_val[2][8] ));
  DFFSR \theDigitalBlock_counterChip3_q_reg[9] (.R (n_107), .S (1'b1),
       .CLK (n_102), .D (theDigitalBlock_counterChip3_n_55), .Q
       (\theDigitalBlock_counter_val[2][9] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[0] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (n_83), .Q (\theDigitalBlock_counter_val[3][0]
       ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[10] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_57), .Q
       (\theDigitalBlock_counter_val[3][10] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[11] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_59), .Q
       (\theDigitalBlock_counter_val[3][11] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[12] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_61), .Q
       (\theDigitalBlock_counter_val[3][12] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[13] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_63), .Q
       (\theDigitalBlock_counter_val[3][13] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[14] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_65), .Q
       (\theDigitalBlock_counter_val[3][14] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[15] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_67), .Q
       (\theDigitalBlock_counter_val[3][15] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[16] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_69), .Q
       (\theDigitalBlock_counter_val[3][16] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[17] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_71), .Q
       (\theDigitalBlock_counter_val[3][17] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[18] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_73), .Q
       (\theDigitalBlock_counter_val[3][18] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[19] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_75), .Q
       (\theDigitalBlock_counter_val[3][19] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[1] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_39), .Q
       (\theDigitalBlock_counter_val[3][1] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[20] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_77), .Q
       (\theDigitalBlock_counter_val[3][20] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[21] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_79), .Q
       (\theDigitalBlock_counter_val[3][21] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[22] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_81), .Q
       (\theDigitalBlock_counter_val[3][22] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[23] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_83), .Q
       (\theDigitalBlock_counter_val[3][23] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[24] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_85), .Q
       (\theDigitalBlock_counter_val[3][24] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[25] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_87), .Q
       (\theDigitalBlock_counter_val[3][25] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[26] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_89), .Q
       (\theDigitalBlock_counter_val[3][26] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[27] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_91), .Q
       (\theDigitalBlock_counter_val[3][27] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[28] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_93), .Q
       (\theDigitalBlock_counter_val[3][28] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[29] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_95), .Q
       (\theDigitalBlock_counter_val[3][29] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[2] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_41), .Q
       (\theDigitalBlock_counter_val[3][2] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[30] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_97), .Q
       (\theDigitalBlock_counter_val[3][30] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[31] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_99), .Q
       (\theDigitalBlock_counter_val[3][31] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[3] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_43), .Q
       (\theDigitalBlock_counter_val[3][3] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[4] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_45), .Q
       (\theDigitalBlock_counter_val[3][4] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[5] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_47), .Q
       (\theDigitalBlock_counter_val[3][5] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[6] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_49), .Q
       (\theDigitalBlock_counter_val[3][6] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[7] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_51), .Q
       (\theDigitalBlock_counter_val[3][7] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[8] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_53), .Q
       (\theDigitalBlock_counter_val[3][8] ));
  DFFSR \theDigitalBlock_counterChip4_q_reg[9] (.R (n_107), .S (1'b1),
       .CLK (n_104), .D (theDigitalBlock_counterChip4_n_55), .Q
       (\theDigitalBlock_counter_val[3][9] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[0] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (n_81), .Q (\theDigitalBlock_counter_val[4][0]
       ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[10] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_57), .Q
       (\theDigitalBlock_counter_val[4][10] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[11] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_59), .Q
       (\theDigitalBlock_counter_val[4][11] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[12] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_61), .Q
       (\theDigitalBlock_counter_val[4][12] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[13] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_63), .Q
       (\theDigitalBlock_counter_val[4][13] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[14] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_65), .Q
       (\theDigitalBlock_counter_val[4][14] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[15] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_67), .Q
       (\theDigitalBlock_counter_val[4][15] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[16] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_69), .Q
       (\theDigitalBlock_counter_val[4][16] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[17] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_71), .Q
       (\theDigitalBlock_counter_val[4][17] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[18] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_73), .Q
       (\theDigitalBlock_counter_val[4][18] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[19] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_75), .Q
       (\theDigitalBlock_counter_val[4][19] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[1] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_39), .Q
       (\theDigitalBlock_counter_val[4][1] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[20] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_77), .Q
       (\theDigitalBlock_counter_val[4][20] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[21] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_79), .Q
       (\theDigitalBlock_counter_val[4][21] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[22] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_81), .Q
       (\theDigitalBlock_counter_val[4][22] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[23] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_83), .Q
       (\theDigitalBlock_counter_val[4][23] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[24] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_85), .Q
       (\theDigitalBlock_counter_val[4][24] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[25] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_87), .Q
       (\theDigitalBlock_counter_val[4][25] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[26] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_89), .Q
       (\theDigitalBlock_counter_val[4][26] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[27] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_91), .Q
       (\theDigitalBlock_counter_val[4][27] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[28] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_93), .Q
       (\theDigitalBlock_counter_val[4][28] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[29] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_95), .Q
       (\theDigitalBlock_counter_val[4][29] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[2] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_41), .Q
       (\theDigitalBlock_counter_val[4][2] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[30] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_97), .Q
       (\theDigitalBlock_counter_val[4][30] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[31] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_99), .Q
       (\theDigitalBlock_counter_val[4][31] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[3] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_43), .Q
       (\theDigitalBlock_counter_val[4][3] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[4] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_45), .Q
       (\theDigitalBlock_counter_val[4][4] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[5] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_47), .Q
       (\theDigitalBlock_counter_val[4][5] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[6] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_49), .Q
       (\theDigitalBlock_counter_val[4][6] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[7] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_51), .Q
       (\theDigitalBlock_counter_val[4][7] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[8] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_53), .Q
       (\theDigitalBlock_counter_val[4][8] ));
  DFFSR \theDigitalBlock_counterChip5_q_reg[9] (.R (n_107), .S (1'b1),
       .CLK (n_105), .D (theDigitalBlock_counterChip5_n_55), .Q
       (\theDigitalBlock_counter_val[4][9] ));
  NAND2X1 g811(.A (n_100), .B (n_101), .Y (n_106));
  NAND2X1 g812(.A (n_93), .B (n_92), .Y (n_105));
  NAND2X1 g813(.A (n_99), .B (n_98), .Y (n_103));
  NAND2X1 g814(.A (n_96), .B (n_97), .Y (n_102));
  NAND2X1 g815(.A (n_94), .B (n_95), .Y (n_104));
  AOI22X1 g816(.A (clk_px[2]), .B (n_90), .C (clk_px[3]), .D (n_91), .Y
       (n_101));
  AOI22X1 g817(.A (clk_px[0]), .B (n_88), .C (clk_px[1]), .D (n_89), .Y
       (n_100));
  AOI22X1 g818(.A (clk_px[4]), .B (n_88), .C (clk_px[6]), .D (n_90), .Y
       (n_99));
  AOI22X1 g819(.A (clk_px[5]), .B (n_89), .C (clk_px[7]), .D (n_91), .Y
       (n_98));
  AOI22X1 g820(.A (clk_px[10]), .B (n_90), .C (clk_px[11]), .D (n_91),
       .Y (n_97));
  AOI22X1 g821(.A (clk_px[8]), .B (n_88), .C (clk_px[9]), .D (n_89), .Y
       (n_96));
  AOI22X1 g822(.A (clk_px[13]), .B (n_89), .C (clk_px[14]), .D (n_90),
       .Y (n_95));
  AOI22X1 g823(.A (clk_px[12]), .B (n_88), .C (clk_px[15]), .D (n_91),
       .Y (n_94));
  AOI22X1 g824(.A (clk_px[16]), .B (n_88), .C (clk_px[18]), .D (n_90),
       .Y (n_93));
  AOI22X1 g825(.A (clk_px[17]), .B (n_89), .C (testSig), .D (n_91), .Y
       (n_92));
  AND2X2 g826(.A (n_85), .B (theDigitalBlock_n_5), .Y (n_91));
  NOR2X1 g827(.A (theDigitalBlock_n_5), .B (n_84), .Y (n_90));
  AND2X2 g828(.A (n_86), .B (theDigitalBlock_n_5), .Y (n_89));
  NOR2X1 g829(.A (theDigitalBlock_n_5), .B (n_87), .Y (n_88));
  INVX2 g830(.A (n_86), .Y (n_87));
  NOR2X1 g831(.A (theDigitalBlock_n_6), .B (n_78), .Y (n_86));
  INVX1 g832(.A (n_84), .Y (n_85));
  NAND2X1 g833(.A (theDigitalBlock_n_6), .B
       (theDigitalBlock_en_osc_out), .Y (n_84));
  INVX1 g834(.A (\theDigitalBlock_counter_val[3][0] ), .Y (n_83));
  INVX1 g835(.A (\theDigitalBlock_counter_val[1][0] ), .Y (n_82));
  INVX1 g836(.A (\theDigitalBlock_counter_val[4][0] ), .Y (n_81));
  INVX1 g837(.A (\theDigitalBlock_counter_val[0][0] ), .Y (n_80));
  INVX1 g838(.A (\theDigitalBlock_counter_val[2][0] ), .Y (n_79));
  INVX2 g839(.A (theDigitalBlock_en_osc_out), .Y (n_78));
  DFFPOSX1 theDigitalBlock_u_i2cSlave_sdaDeb_reg(.CLK (clk), .D (n_75),
       .Q (theDigitalBlock_u_i2cSlave_sdaDeb));
  DFFPOSX1 theDigitalBlock_u_i2cSlave_sclDeb_reg(.CLK (clk), .D (n_76),
       .Q (theDigitalBlock_u_i2cSlave_sclDeb));
  NAND3X1 g451(.A (n_73), .B (n_115), .C (n_117), .Y (n_76));
  NAND3X1 g453(.A (n_74), .B (n_118), .C (n_116), .Y (n_75));
  INVX2 g459(.A (n_72), .Y (n_74));
  INVX2 g464(.A (n_71), .Y (n_73));
  OAI21X1 g460(.A (n_66), .B (n_56), .C (n_70), .Y (n_72));
  OAI21X1 g465(.A (n_67), .B (n_59), .C (n_70), .Y (n_71));
  NAND2X1 g477(.A (theDigitalBlock_u_i2cSlave_sclPipe[4]), .B
       (theDigitalBlock_u_i2cSlave_sclPipe[3]), .Y (n_67));
  NAND2X1 g472(.A (theDigitalBlock_u_i2cSlave_sdaPipe[4]), .B
       (theDigitalBlock_u_i2cSlave_sdaPipe[3]), .Y (n_66));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sclDelayed_reg[4] (.CLK (clk),
       .D (n_65), .Q (theDigitalBlock_u_i2cSlave_sclDelayed[4]));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sdaPipe_reg[4] (.CLK (clk), .D
       (n_64), .Q (theDigitalBlock_u_i2cSlave_sdaPipe[4]));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sclPipe_reg[4] (.CLK (clk), .D
       (n_63), .Q (theDigitalBlock_u_i2cSlave_sclPipe[4]));
  OR2X1 g517(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sclDelayed[3]), .Y (n_65));
  OR2X1 g479(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sdaPipe[3]), .Y (n_64));
  OR2X1 g482(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sclPipe[3]), .Y (n_63));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sclDelayed_reg[3] (.CLK (clk),
       .D (n_62), .Q (theDigitalBlock_u_i2cSlave_sclDelayed[3]));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sdaPipe_reg[3] (.CLK (clk), .D
       (n_58), .Q (theDigitalBlock_u_i2cSlave_sdaPipe[3]));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sclPipe_reg[3] (.CLK (clk), .D
       (n_57), .Q (theDigitalBlock_u_i2cSlave_sclPipe[3]));
  OR2X1 g535(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sclDelayed[2]), .Y (n_62));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_startStopDetState_reg[0] (.CLK
       (clk), .D (n_55), .Q
       (theDigitalBlock_u_i2cSlave_startStopDetState[0]));
  NAND2X1 g476(.A (theDigitalBlock_u_i2cSlave_sclPipe[2]), .B
       (theDigitalBlock_u_i2cSlave_sclPipe[1]), .Y (n_59));
  OR2X1 g484(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sdaPipe[2]), .Y (n_58));
  OR2X1 g486(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sclPipe[2]), .Y (n_57));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_startStopDetState_reg[1] (.CLK
       (clk), .D (n_54), .Q (theDigitalBlock_ack_received));
  NAND2X1 g471(.A (theDigitalBlock_u_i2cSlave_sdaPipe[2]), .B
       (theDigitalBlock_u_i2cSlave_sdaPipe[1]), .Y (n_56));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sclDelayed_reg[2] (.CLK (clk),
       .D (n_52), .Q (theDigitalBlock_u_i2cSlave_sclDelayed[2]));
  OAI21X1 g455(.A (n_46), .B (n_53), .C (n_51), .Y (n_55));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sdaPipe_reg[2] (.CLK (clk), .D
       (n_49), .Q (theDigitalBlock_u_i2cSlave_sdaPipe[2]));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sclPipe_reg[2] (.CLK (clk), .D
       (n_48), .Q (theDigitalBlock_u_i2cSlave_sclPipe[2]));
  DFFPOSX1 theDigitalBlock_u_i2cSlave_startEdgeDet_reg(.CLK (clk), .D
       (n_119), .Q (theDigitalBlock_u_i2cSlave_startEdgeDet));
  OAI21X1 g456(.A (n_50), .B (n_53), .C (n_45), .Y (n_54));
  OR2X1 g541(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sclDelayed[1]), .Y (n_52));
  NAND3X1 g458(.A (theDigitalBlock_u_i2cSlave_startStopDetState[0]), .B
       (n_50), .C (n_44), .Y (n_51));
  OR2X1 g488(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sdaPipe[1]), .Y (n_49));
  OR2X1 g490(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sclPipe[1]), .Y (n_48));
  NAND3X1 g457(.A (theDigitalBlock_ack_received), .B (n_46), .C (n_44),
       .Y (n_45));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sclDelayed_reg[1] (.CLK (clk),
       .D (n_43), .Q (theDigitalBlock_u_i2cSlave_sclDelayed[1]));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sdaPipe_reg[1] (.CLK (clk), .D
       (n_41), .Q (theDigitalBlock_u_i2cSlave_sdaPipe[1]));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sclPipe_reg[1] (.CLK (clk), .D
       (n_40), .Q (theDigitalBlock_u_i2cSlave_sclPipe[1]));
  NAND3X1 g463(.A (n_42), .B (theDigitalBlock_u_i2cSlave_sclDeb), .C
       (theDigitalBlock_u_i2cSlave_sdaDelayed[0]), .Y (n_50));
  OR2X1 g545(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sclDelayed[0]), .Y (n_43));
  NAND3X1 g462(.A (theDigitalBlock_u_i2cSlave_sdaDelayed[1]), .B
       (theDigitalBlock_u_i2cSlave_sclDeb), .C (n_38), .Y (n_46));
  INVX1 g473(.A (theDigitalBlock_u_i2cSlave_sdaDelayed[1]), .Y (n_42));
  OR2X1 g492(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sdaPipe[0]), .Y (n_41));
  OR2X1 g494(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sclPipe[0]), .Y (n_40));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sdaDelayed_reg[1] (.CLK (clk),
       .D (n_39), .Q (theDigitalBlock_u_i2cSlave_sdaDelayed[1]));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sclDelayed_reg[0] (.CLK (clk),
       .D (n_29), .Q (theDigitalBlock_u_i2cSlave_sclDelayed[0]));
  DFFPOSX1
       \theDigitalBlock_u_i2cSlave_u_registerInterface_dataOut_reg[5]
       (.CLK (clk), .D (n_32), .Q
       (theDigitalBlock_u_i2cSlave_dataFromRegIF[5]));
  DFFPOSX1
       \theDigitalBlock_u_i2cSlave_u_registerInterface_dataOut_reg[3]
       (.CLK (clk), .D (n_34), .Q
       (theDigitalBlock_u_i2cSlave_dataFromRegIF[3]));
  DFFPOSX1
       \theDigitalBlock_u_i2cSlave_u_registerInterface_dataOut_reg[0]
       (.CLK (clk), .D (n_37), .Q
       (theDigitalBlock_u_i2cSlave_dataFromRegIF[0]));
  DFFPOSX1
       \theDigitalBlock_u_i2cSlave_u_registerInterface_dataOut_reg[6]
       (.CLK (clk), .D (n_31), .Q
       (theDigitalBlock_u_i2cSlave_dataFromRegIF[6]));
  DFFPOSX1
       \theDigitalBlock_u_i2cSlave_u_registerInterface_dataOut_reg[4]
       (.CLK (clk), .D (n_33), .Q
       (theDigitalBlock_u_i2cSlave_dataFromRegIF[4]));
  DFFPOSX1
       \theDigitalBlock_u_i2cSlave_u_registerInterface_dataOut_reg[7]
       (.CLK (clk), .D (n_30), .Q
       (theDigitalBlock_u_i2cSlave_dataFromRegIF[7]));
  DFFPOSX1
       \theDigitalBlock_u_i2cSlave_u_registerInterface_dataOut_reg[1]
       (.CLK (clk), .D (n_36), .Q
       (theDigitalBlock_u_i2cSlave_dataFromRegIF[1]));
  DFFPOSX1
       \theDigitalBlock_u_i2cSlave_u_registerInterface_dataOut_reg[2]
       (.CLK (clk), .D (n_35), .Q
       (theDigitalBlock_u_i2cSlave_dataFromRegIF[2]));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sclPipe_reg[0] (.CLK (clk), .D
       (n_27), .Q (theDigitalBlock_u_i2cSlave_sclPipe[0]));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sdaDelayed_reg[0] (.CLK (clk),
       .D (n_26), .Q (theDigitalBlock_u_i2cSlave_sdaDelayed[0]));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_sdaPipe_reg[0] (.CLK (clk), .D
       (n_28), .Q (theDigitalBlock_u_i2cSlave_sdaPipe[0]));
  NAND2X1 g480(.A (n_70), .B (n_38), .Y (n_39));
  NAND2X1 g509(.A (n_24), .B (n_25), .Y (n_37));
  NAND2X1 g510(.A (n_9), .B (n_23), .Y (n_36));
  NAND2X1 g511(.A (n_19), .B (n_20), .Y (n_35));
  NAND2X1 g512(.A (n_15), .B (n_16), .Y (n_34));
  NAND2X1 g513(.A (n_13), .B (n_14), .Y (n_33));
  NAND2X1 g514(.A (n_11), .B (n_12), .Y (n_32));
  NAND2X1 g515(.A (n_7), .B (n_8), .Y (n_31));
  NAND2X1 g516(.A (n_6), .B (n_10), .Y (n_30));
  NAND2X1 g547(.A (n_70), .B (n_1), .Y (n_29));
  INVX2 g469(.A (n_44), .Y (n_53));
  OR2X1 g496(.A (sda), .B (theDigitalBlock_u_i2cSlave_rstPipe[1]), .Y
       (n_28));
  OR2X1 g497(.A (scl), .B (theDigitalBlock_u_i2cSlave_rstPipe[1]), .Y
       (n_27));
  OR2X1 g452(.A (theDigitalBlock_u_i2cSlave_sdaDeb), .B
       (theDigitalBlock_u_i2cSlave_rstPipe[1]), .Y (n_26));
  OR2X2 g508(.A (theDigitalBlock_u_i2cSlave_startEdgeDet), .B
       (theDigitalBlock_u_i2cSlave_rstPipe[1]), .Y
       (theDigitalBlock_u_i2cSlave_n_144));
  NOR2X1 g470(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_clearStartStopDet), .Y (n_44));
  AOI22X1 g519(.A (theDigitalBlock_sampleOut[16]), .B (n_22), .C
       (theDigitalBlock_sampleOut[0]), .D (n_21), .Y (n_25));
  AOI22X1 g520(.A (theDigitalBlock_sampleOut[24]), .B (n_18), .C
       (theDigitalBlock_sampleOut[8]), .D (n_17), .Y (n_24));
  AOI22X1 g521(.A (theDigitalBlock_sampleOut[17]), .B (n_22), .C
       (theDigitalBlock_sampleOut[1]), .D (n_21), .Y (n_23));
  AOI22X1 g523(.A (theDigitalBlock_sampleOut[18]), .B (n_22), .C
       (theDigitalBlock_sampleOut[2]), .D (n_21), .Y (n_20));
  AOI22X1 g524(.A (theDigitalBlock_sampleOut[26]), .B (n_18), .C
       (theDigitalBlock_sampleOut[10]), .D (n_17), .Y (n_19));
  AOI22X1 g525(.A (theDigitalBlock_sampleOut[19]), .B (n_22), .C
       (theDigitalBlock_sampleOut[3]), .D (n_21), .Y (n_16));
  AOI22X1 g526(.A (theDigitalBlock_sampleOut[27]), .B (n_18), .C
       (theDigitalBlock_sampleOut[11]), .D (n_17), .Y (n_15));
  AOI22X1 g527(.A (theDigitalBlock_sampleOut[20]), .B (n_22), .C
       (theDigitalBlock_sampleOut[4]), .D (n_21), .Y (n_14));
  AOI22X1 g528(.A (theDigitalBlock_sampleOut[28]), .B (n_18), .C
       (theDigitalBlock_sampleOut[12]), .D (n_17), .Y (n_13));
  AOI22X1 g529(.A (theDigitalBlock_sampleOut[21]), .B (n_22), .C
       (theDigitalBlock_sampleOut[5]), .D (n_21), .Y (n_12));
  AOI22X1 g530(.A (theDigitalBlock_sampleOut[29]), .B (n_18), .C
       (theDigitalBlock_sampleOut[13]), .D (n_17), .Y (n_11));
  AOI22X1 g533(.A (theDigitalBlock_sampleOut[23]), .B (n_22), .C
       (theDigitalBlock_sampleOut[7]), .D (n_21), .Y (n_10));
  AOI22X1 g522(.A (theDigitalBlock_sampleOut[25]), .B (n_18), .C
       (theDigitalBlock_sampleOut[9]), .D (n_17), .Y (n_9));
  AOI22X1 g531(.A (theDigitalBlock_sampleOut[22]), .B (n_22), .C
       (theDigitalBlock_sampleOut[6]), .D (n_21), .Y (n_8));
  AOI22X1 g532(.A (theDigitalBlock_sampleOut[30]), .B (n_18), .C
       (theDigitalBlock_sampleOut[14]), .D (n_17), .Y (n_7));
  AOI22X1 g534(.A (theDigitalBlock_sampleOut[31]), .B (n_18), .C
       (theDigitalBlock_sampleOut[15]), .D (n_17), .Y (n_6));
  INVX2 g548(.A (theDigitalBlock_u_i2cSlave_rstPipe[1]), .Y (n_70));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_rstPipe_reg[1] (.CLK (clk), .D
       (n_5), .Q (theDigitalBlock_u_i2cSlave_rstPipe[1]));
	   
  TBUFX2 theDigitalBlock_u_i2cSlave_g1A(.A (1'b1), .EN (n_4), .Y (sda));
  TBUFX2 theDigitalBlock_u_i2cSlave_g1B(.A (1'b1), .EN (n_4), .Y (sda));
  TBUFX2 theDigitalBlock_u_i2cSlave_g1C(.A (1'b1), .EN (n_4), .Y (sda));
  TBUFX2 theDigitalBlock_u_i2cSlave_g1D(.A (1'b1), .EN (n_4), .Y (sda));
  
  NOR2X1 g538(.A (theDigitalBlock_u_i2cSlave_regAddr[0]), .B (n_3), .Y
       (n_17));
  NOR2X1 g537(.A (theDigitalBlock_u_i2cSlave_regAddr[1]), .B (n_2), .Y
       (n_22));
  OR2X1 g550(.A (rst), .B (theDigitalBlock_u_i2cSlave_rstPipe[0]), .Y
       (n_5));
  NOR2X1 g539(.A (theDigitalBlock_u_i2cSlave_regAddr[1]), .B
       (theDigitalBlock_u_i2cSlave_regAddr[0]), .Y (n_18));
  AND2X2 g540(.A (theDigitalBlock_u_i2cSlave_regAddr[0]), .B
       (theDigitalBlock_u_i2cSlave_regAddr[1]), .Y (n_21));
  INVX1 g498(.A (theDigitalBlock_u_i2cSlave_sdaOut), .Y (n_4));
  INVX2 g542(.A (theDigitalBlock_u_i2cSlave_regAddr[1]), .Y (n_3));
  INVX2 g543(.A (theDigitalBlock_u_i2cSlave_regAddr[0]), .Y (n_2));
  DFFPOSX1 \theDigitalBlock_u_i2cSlave_rstPipe_reg[0] (.CLK (clk), .D
       (rst), .Q (theDigitalBlock_u_i2cSlave_rstPipe[0]));
  INVX1 g553(.A (theDigitalBlock_u_i2cSlave_sclDeb), .Y (n_1));
  INVX2 g552(.A (theDigitalBlock_u_i2cSlave_sdaDelayed[0]), .Y (n_38));
  OAI21X1 g2(.A (theDigitalBlock_u_i2cSlave_sclPipe[3]), .B
       (theDigitalBlock_u_i2cSlave_sclPipe[4]), .C
       (theDigitalBlock_u_i2cSlave_sclDeb), .Y (n_115));
  OAI21X1 g840(.A (theDigitalBlock_u_i2cSlave_sdaPipe[3]), .B
       (theDigitalBlock_u_i2cSlave_sdaPipe[4]), .C
       (theDigitalBlock_u_i2cSlave_sdaDeb), .Y (n_116));
  OAI21X1 g841(.A (theDigitalBlock_u_i2cSlave_sclPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sclPipe[2]), .C
       (theDigitalBlock_u_i2cSlave_sclDeb), .Y (n_117));
  OAI21X1 g842(.A (theDigitalBlock_u_i2cSlave_sdaPipe[1]), .B
       (theDigitalBlock_u_i2cSlave_sdaPipe[2]), .C
       (theDigitalBlock_u_i2cSlave_sdaDeb), .Y (n_118));
  NOR2X1 g843(.A (n_46), .B (theDigitalBlock_u_i2cSlave_rstPipe[1]), .Y
       (n_119));
endmodule

